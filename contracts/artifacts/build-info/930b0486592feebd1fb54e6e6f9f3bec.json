{
	"id": "930b0486592feebd1fb54e6e6f9f3bec",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LP.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity 0.8.20;\r\n\r\nimport \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\" ;\r\n\r\ncontract LP is ERC20 {\r\n\r\n    string constant PREFIX = \"MINI-\";\r\n\r\n    uint constant MINIMUM_LIQUIDITY = 10**3;\r\n\r\n    string s_name;\r\n\r\n    constructor(string memory _name){\r\n        s_name = _name;\r\n    }\r\n\r\n    function name() public view override returns(string memory) {\r\n        return string.concat(PREFIX, s_name);\r\n    }\r\n    function symbol() public view override returns(string memory) {\r\n        return s_name;\r\n    }\r\n}"
			},
			"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/// @notice Simple ERC20 + EIP-2612 implementation.\n/// @author Solady (https://github.com/vectorized/solady/blob/main/src/tokens/ERC20.sol)\n/// @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n/// @author Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol)\n///\n/// @dev Note:\n/// - The ERC20 standard allows minting and transferring to and from the zero address,\n///   minting and transferring zero tokens, as well as self-approvals.\n///   For performance, this implementation WILL NOT revert for such actions.\n///   Please add any checks with overrides if desired.\n/// - The `permit` function uses the ecrecover precompile (0x1).\n///\n/// If you are overriding:\n/// - NEVER violate the ERC20 invariant:\n///   the total sum of all balances must be equal to `totalSupply()`.\n/// - Check that the overridden function is actually used in the function you want to\n///   change the behavior of. Much of the code has been manually inlined for performance.\nabstract contract ERC20 {\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                       CUSTOM ERRORS                        */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev The total supply has overflowed.\n    error TotalSupplyOverflow();\n\n    /// @dev The allowance has overflowed.\n    error AllowanceOverflow();\n\n    /// @dev The allowance has underflowed.\n    error AllowanceUnderflow();\n\n    /// @dev Insufficient balance.\n    error InsufficientBalance();\n\n    /// @dev Insufficient allowance.\n    error InsufficientAllowance();\n\n    /// @dev The permit is invalid.\n    error InvalidPermit();\n\n    /// @dev The permit has expired.\n    error PermitExpired();\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                           EVENTS                           */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Emitted when `amount` tokens is transferred from `from` to `to`.\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    /// @dev Emitted when `amount` tokens is approved by `owner` to be used by `spender`.\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /// @dev `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    uint256 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    /// @dev `keccak256(bytes(\"Approval(address,address,uint256)\"))`.\n    uint256 private constant _APPROVAL_EVENT_SIGNATURE =\n        0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                          STORAGE                           */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev The storage slot for the total supply.\n    uint256 private constant _TOTAL_SUPPLY_SLOT = 0x05345cdf77eb68f44c;\n\n    /// @dev The balance slot of `owner` is given by:\n    /// ```\n    ///     mstore(0x0c, _BALANCE_SLOT_SEED)\n    ///     mstore(0x00, owner)\n    ///     let balanceSlot := keccak256(0x0c, 0x20)\n    /// ```\n    uint256 private constant _BALANCE_SLOT_SEED = 0x87a211a2;\n\n    /// @dev The allowance slot of (`owner`, `spender`) is given by:\n    /// ```\n    ///     mstore(0x20, spender)\n    ///     mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n    ///     mstore(0x00, owner)\n    ///     let allowanceSlot := keccak256(0x0c, 0x34)\n    /// ```\n    uint256 private constant _ALLOWANCE_SLOT_SEED = 0x7f5e9f20;\n\n    /// @dev The nonce slot of `owner` is given by:\n    /// ```\n    ///     mstore(0x0c, _NONCES_SLOT_SEED)\n    ///     mstore(0x00, owner)\n    ///     let nonceSlot := keccak256(0x0c, 0x20)\n    /// ```\n    uint256 private constant _NONCES_SLOT_SEED = 0x38377508;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                         CONSTANTS                          */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev `(_NONCES_SLOT_SEED << 16) | 0x1901`.\n    uint256 private constant _NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX = 0x383775081901;\n\n    /// @dev `keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\")`.\n    bytes32 private constant _DOMAIN_TYPEHASH =\n        0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f;\n\n    /// @dev `keccak256(\"1\")`.\n    bytes32 private constant _VERSION_HASH =\n        0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6;\n\n    /// @dev `keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\")`.\n    bytes32 private constant _PERMIT_TYPEHASH =\n        0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                       ERC20 METADATA                       */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Returns the name of the token.\n    function name() public view virtual returns (string memory);\n\n    /// @dev Returns the symbol of the token.\n    function symbol() public view virtual returns (string memory);\n\n    /// @dev Returns the decimals places of the token.\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                           ERC20                            */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Returns the amount of tokens in existence.\n    function totalSupply() public view virtual returns (uint256 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := sload(_TOTAL_SUPPLY_SLOT)\n        }\n    }\n\n    /// @dev Returns the amount of tokens owned by `owner`.\n    function balanceOf(address owner) public view virtual returns (uint256 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x0c, _BALANCE_SLOT_SEED)\n            mstore(0x00, owner)\n            result := sload(keccak256(0x0c, 0x20))\n        }\n    }\n\n    /// @dev Returns the amount of tokens that `spender` can spend on behalf of `owner`.\n    function allowance(address owner, address spender)\n        public\n        view\n        virtual\n        returns (uint256 result)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x20, spender)\n            mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n            mstore(0x00, owner)\n            result := sload(keccak256(0x0c, 0x34))\n        }\n    }\n\n    /// @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n    ///\n    /// Emits a {Approval} event.\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the allowance slot and store the amount.\n            mstore(0x20, spender)\n            mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n            mstore(0x00, caller())\n            sstore(keccak256(0x0c, 0x34), amount)\n            // Emit the {Approval} event.\n            mstore(0x00, amount)\n            log3(0x00, 0x20, _APPROVAL_EVENT_SIGNATURE, caller(), shr(96, mload(0x2c)))\n        }\n        return true;\n    }\n\n    /// @dev Transfer `amount` tokens from the caller to `to`.\n    ///\n    /// Requirements:\n    /// - `from` must at least have `amount`.\n    ///\n    /// Emits a {Transfer} event.\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\n        _beforeTokenTransfer(msg.sender, to, amount);\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the balance slot and load its value.\n            mstore(0x0c, _BALANCE_SLOT_SEED)\n            mstore(0x00, caller())\n            let fromBalanceSlot := keccak256(0x0c, 0x20)\n            let fromBalance := sload(fromBalanceSlot)\n            // Revert if insufficient balance.\n            if gt(amount, fromBalance) {\n                mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\n                revert(0x1c, 0x04)\n            }\n            // Subtract and store the updated balance.\n            sstore(fromBalanceSlot, sub(fromBalance, amount))\n            // Compute the balance slot of `to`.\n            mstore(0x00, to)\n            let toBalanceSlot := keccak256(0x0c, 0x20)\n            // Add and store the updated balance of `to`.\n            // Will not overflow because the sum of all user balances\n            // cannot exceed the maximum uint256 value.\n            sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\n            // Emit the {Transfer} event.\n            mstore(0x20, amount)\n            log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, caller(), shr(96, mload(0x0c)))\n        }\n        _afterTokenTransfer(msg.sender, to, amount);\n        return true;\n    }\n\n    /// @dev Transfers `amount` tokens from `from` to `to`.\n    ///\n    /// Note: Does not update the allowance if it is the maximum uint256 value.\n    ///\n    /// Requirements:\n    /// - `from` must at least have `amount`.\n    /// - The caller must have at least `amount` of allowance to transfer the tokens of `from`.\n    ///\n    /// Emits a {Transfer} event.\n    function transferFrom(address from, address to, uint256 amount) public virtual returns (bool) {\n        _beforeTokenTransfer(from, to, amount);\n        /// @solidity memory-safe-assembly\n        assembly {\n            let from_ := shl(96, from)\n            // Compute the allowance slot and load its value.\n            mstore(0x20, caller())\n            mstore(0x0c, or(from_, _ALLOWANCE_SLOT_SEED))\n            let allowanceSlot := keccak256(0x0c, 0x34)\n            let allowance_ := sload(allowanceSlot)\n            // If the allowance is not the maximum uint256 value.\n            if add(allowance_, 1) {\n                // Revert if the amount to be transferred exceeds the allowance.\n                if gt(amount, allowance_) {\n                    mstore(0x00, 0x13be252b) // `InsufficientAllowance()`.\n                    revert(0x1c, 0x04)\n                }\n                // Subtract and store the updated allowance.\n                sstore(allowanceSlot, sub(allowance_, amount))\n            }\n            // Compute the balance slot and load its value.\n            mstore(0x0c, or(from_, _BALANCE_SLOT_SEED))\n            let fromBalanceSlot := keccak256(0x0c, 0x20)\n            let fromBalance := sload(fromBalanceSlot)\n            // Revert if insufficient balance.\n            if gt(amount, fromBalance) {\n                mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\n                revert(0x1c, 0x04)\n            }\n            // Subtract and store the updated balance.\n            sstore(fromBalanceSlot, sub(fromBalance, amount))\n            // Compute the balance slot of `to`.\n            mstore(0x00, to)\n            let toBalanceSlot := keccak256(0x0c, 0x20)\n            // Add and store the updated balance of `to`.\n            // Will not overflow because the sum of all user balances\n            // cannot exceed the maximum uint256 value.\n            sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\n            // Emit the {Transfer} event.\n            mstore(0x20, amount)\n            log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, shr(96, from_), shr(96, mload(0x0c)))\n        }\n        _afterTokenTransfer(from, to, amount);\n        return true;\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                          EIP-2612                          */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev For more performance, override to return the constant value\n    /// of `keccak256(bytes(name()))` if `name()` will never change.\n    function _constantNameHash() internal view virtual returns (bytes32 result) {}\n\n    /// @dev Returns the current nonce for `owner`.\n    /// This value is used to compute the signature for EIP-2612 permit.\n    function nonces(address owner) public view virtual returns (uint256 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the nonce slot and load its value.\n            mstore(0x0c, _NONCES_SLOT_SEED)\n            mstore(0x00, owner)\n            result := sload(keccak256(0x0c, 0x20))\n        }\n    }\n\n    /// @dev Sets `value` as the allowance of `spender` over the tokens of `owner`,\n    /// authorized by a signed approval by `owner`.\n    ///\n    /// Emits a {Approval} event.\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        bytes32 nameHash = _constantNameHash();\n        //  We simply calculate it on-the-fly to allow for cases where the `name` may change.\n        if (nameHash == bytes32(0)) nameHash = keccak256(bytes(name()));\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Revert if the block timestamp is greater than `deadline`.\n            if gt(timestamp(), deadline) {\n                mstore(0x00, 0x1a15a3cc) // `PermitExpired()`.\n                revert(0x1c, 0x04)\n            }\n            let m := mload(0x40) // Grab the free memory pointer.\n            // Clean the upper 96 bits.\n            owner := shr(96, shl(96, owner))\n            spender := shr(96, shl(96, spender))\n            // Compute the nonce slot and load its value.\n            mstore(0x0e, _NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX)\n            mstore(0x00, owner)\n            let nonceSlot := keccak256(0x0c, 0x20)\n            let nonceValue := sload(nonceSlot)\n            // Prepare the domain separator.\n            mstore(m, _DOMAIN_TYPEHASH)\n            mstore(add(m, 0x20), nameHash)\n            mstore(add(m, 0x40), _VERSION_HASH)\n            mstore(add(m, 0x60), chainid())\n            mstore(add(m, 0x80), address())\n            mstore(0x2e, keccak256(m, 0xa0))\n            // Prepare the struct hash.\n            mstore(m, _PERMIT_TYPEHASH)\n            mstore(add(m, 0x20), owner)\n            mstore(add(m, 0x40), spender)\n            mstore(add(m, 0x60), value)\n            mstore(add(m, 0x80), nonceValue)\n            mstore(add(m, 0xa0), deadline)\n            mstore(0x4e, keccak256(m, 0xc0))\n            // Prepare the ecrecover calldata.\n            mstore(0x00, keccak256(0x2c, 0x42))\n            mstore(0x20, and(0xff, v))\n            mstore(0x40, r)\n            mstore(0x60, s)\n            let t := staticcall(gas(), 1, 0, 0x80, 0x20, 0x20)\n            // If the ecrecover fails, the returndatasize will be 0x00,\n            // `owner` will be checked if it equals the hash at 0x00,\n            // which evaluates to false (i.e. 0), and we will revert.\n            // If the ecrecover succeeds, the returndatasize will be 0x20,\n            // `owner` will be compared against the returned address at 0x20.\n            if iszero(eq(mload(returndatasize()), owner)) {\n                mstore(0x00, 0xddafbaef) // `InvalidPermit()`.\n                revert(0x1c, 0x04)\n            }\n            // Increment and store the updated nonce.\n            sstore(nonceSlot, add(nonceValue, t)) // `t` is 1 if ecrecover succeeds.\n            // Compute the allowance slot and store the value.\n            // The `owner` is already at slot 0x20.\n            mstore(0x40, or(shl(160, _ALLOWANCE_SLOT_SEED), spender))\n            sstore(keccak256(0x2c, 0x34), value)\n            // Emit the {Approval} event.\n            log3(add(m, 0x60), 0x20, _APPROVAL_EVENT_SIGNATURE, owner, spender)\n            mstore(0x40, m) // Restore the free memory pointer.\n            mstore(0x60, 0) // Restore the zero pointer.\n        }\n    }\n\n    /// @dev Returns the EIP-712 domain separator for the EIP-2612 permit.\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32 result) {\n        bytes32 nameHash = _constantNameHash();\n        //  We simply calculate it on-the-fly to allow for cases where the `name` may change.\n        if (nameHash == bytes32(0)) nameHash = keccak256(bytes(name()));\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40) // Grab the free memory pointer.\n            mstore(m, _DOMAIN_TYPEHASH)\n            mstore(add(m, 0x20), nameHash)\n            mstore(add(m, 0x40), _VERSION_HASH)\n            mstore(add(m, 0x60), chainid())\n            mstore(add(m, 0x80), address())\n            result := keccak256(m, 0xa0)\n        }\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                  INTERNAL MINT FUNCTIONS                   */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Mints `amount` tokens to `to`, increasing the total supply.\n    ///\n    /// Emits a {Transfer} event.\n    function _mint(address to, uint256 amount) internal virtual {\n        _beforeTokenTransfer(address(0), to, amount);\n        /// @solidity memory-safe-assembly\n        assembly {\n            let totalSupplyBefore := sload(_TOTAL_SUPPLY_SLOT)\n            let totalSupplyAfter := add(totalSupplyBefore, amount)\n            // Revert if the total supply overflows.\n            if lt(totalSupplyAfter, totalSupplyBefore) {\n                mstore(0x00, 0xe5cfe957) // `TotalSupplyOverflow()`.\n                revert(0x1c, 0x04)\n            }\n            // Store the updated total supply.\n            sstore(_TOTAL_SUPPLY_SLOT, totalSupplyAfter)\n            // Compute the balance slot and load its value.\n            mstore(0x0c, _BALANCE_SLOT_SEED)\n            mstore(0x00, to)\n            let toBalanceSlot := keccak256(0x0c, 0x20)\n            // Add and store the updated balance.\n            sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\n            // Emit the {Transfer} event.\n            mstore(0x20, amount)\n            log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, 0, shr(96, mload(0x0c)))\n        }\n        _afterTokenTransfer(address(0), to, amount);\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                  INTERNAL BURN FUNCTIONS                   */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Burns `amount` tokens from `from`, reducing the total supply.\n    ///\n    /// Emits a {Transfer} event.\n    function _burn(address from, uint256 amount) internal virtual {\n        _beforeTokenTransfer(from, address(0), amount);\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the balance slot and load its value.\n            mstore(0x0c, _BALANCE_SLOT_SEED)\n            mstore(0x00, from)\n            let fromBalanceSlot := keccak256(0x0c, 0x20)\n            let fromBalance := sload(fromBalanceSlot)\n            // Revert if insufficient balance.\n            if gt(amount, fromBalance) {\n                mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\n                revert(0x1c, 0x04)\n            }\n            // Subtract and store the updated balance.\n            sstore(fromBalanceSlot, sub(fromBalance, amount))\n            // Subtract and store the updated total supply.\n            sstore(_TOTAL_SUPPLY_SLOT, sub(sload(_TOTAL_SUPPLY_SLOT), amount))\n            // Emit the {Transfer} event.\n            mstore(0x00, amount)\n            log3(0x00, 0x20, _TRANSFER_EVENT_SIGNATURE, shr(96, shl(96, from)), 0)\n        }\n        _afterTokenTransfer(from, address(0), amount);\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                INTERNAL TRANSFER FUNCTIONS                 */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Moves `amount` of tokens from `from` to `to`.\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        _beforeTokenTransfer(from, to, amount);\n        /// @solidity memory-safe-assembly\n        assembly {\n            let from_ := shl(96, from)\n            // Compute the balance slot and load its value.\n            mstore(0x0c, or(from_, _BALANCE_SLOT_SEED))\n            let fromBalanceSlot := keccak256(0x0c, 0x20)\n            let fromBalance := sload(fromBalanceSlot)\n            // Revert if insufficient balance.\n            if gt(amount, fromBalance) {\n                mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\n                revert(0x1c, 0x04)\n            }\n            // Subtract and store the updated balance.\n            sstore(fromBalanceSlot, sub(fromBalance, amount))\n            // Compute the balance slot of `to`.\n            mstore(0x00, to)\n            let toBalanceSlot := keccak256(0x0c, 0x20)\n            // Add and store the updated balance of `to`.\n            // Will not overflow because the sum of all user balances\n            // cannot exceed the maximum uint256 value.\n            sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\n            // Emit the {Transfer} event.\n            mstore(0x20, amount)\n            log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, shr(96, from_), shr(96, mload(0x0c)))\n        }\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                INTERNAL ALLOWANCE FUNCTIONS                */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Updates the allowance of `owner` for `spender` based on spent `amount`.\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the allowance slot and load its value.\n            mstore(0x20, spender)\n            mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n            mstore(0x00, owner)\n            let allowanceSlot := keccak256(0x0c, 0x34)\n            let allowance_ := sload(allowanceSlot)\n            // If the allowance is not the maximum uint256 value.\n            if add(allowance_, 1) {\n                // Revert if the amount to be transferred exceeds the allowance.\n                if gt(amount, allowance_) {\n                    mstore(0x00, 0x13be252b) // `InsufficientAllowance()`.\n                    revert(0x1c, 0x04)\n                }\n                // Subtract and store the updated allowance.\n                sstore(allowanceSlot, sub(allowance_, amount))\n            }\n        }\n    }\n\n    /// @dev Sets `amount` as the allowance of `spender` over the tokens of `owner`.\n    ///\n    /// Emits a {Approval} event.\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let owner_ := shl(96, owner)\n            // Compute the allowance slot and store the amount.\n            mstore(0x20, spender)\n            mstore(0x0c, or(owner_, _ALLOWANCE_SLOT_SEED))\n            sstore(keccak256(0x0c, 0x34), amount)\n            // Emit the {Approval} event.\n            mstore(0x00, amount)\n            log3(0x00, 0x20, _APPROVAL_EVENT_SIGNATURE, shr(96, owner_), shr(96, mload(0x2c)))\n        }\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                     HOOKS TO OVERRIDE                      */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Hook that is called before any transfer of tokens.\n    /// This includes minting and burning.\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /// @dev Hook that is called after any transfer of tokens.\n    /// This includes minting and burning.\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/LP.sol": {
				"LP": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AllowanceOverflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AllowanceUnderflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidPermit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PermitExpired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TotalSupplyOverflow",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "result",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AllowanceOverflow()": [
								{
									"details": "The allowance has overflowed."
								}
							],
							"AllowanceUnderflow()": [
								{
									"details": "The allowance has underflowed."
								}
							],
							"InsufficientAllowance()": [
								{
									"details": "Insufficient allowance."
								}
							],
							"InsufficientBalance()": [
								{
									"details": "Insufficient balance."
								}
							],
							"InvalidPermit()": [
								{
									"details": "The permit is invalid."
								}
							],
							"PermitExpired()": [
								{
									"details": "The permit has expired."
								}
							],
							"TotalSupplyOverflow()": [
								{
									"details": "The total supply has overflowed."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `amount` tokens is approved by `owner` to be used by `spender`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `amount` tokens is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the EIP-712 domain separator for the EIP-2612 permit."
							},
							"allowance(address,address)": {
								"details": "Returns the amount of tokens that `spender` can spend on behalf of `owner`."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `owner`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value is used to compute the signature for EIP-2612 permit."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over the tokens of `owner`, authorized by a signed approval by `owner`. Emits a {Approval} event."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Transfer `amount` tokens from the caller to `to`. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LP.sol\":177:609  contract LP is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LP.sol\":318:383  constructor(string memory _name){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/LP.sol\":370:375  _name */\n  dup1\n    /* \"contracts/LP.sol\":361:367  s_name */\n  0x00\n    /* \"contracts/LP.sol\":361:375  s_name = _name */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/LP.sol\":318:383  constructor(string memory _name){... */\n  pop\n    /* \"contracts/LP.sol\":177:609  contract LP is ERC20 {... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:82   */\ntag_9:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_11:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_12:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_13:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_14:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_15:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_16:\n    /* \"#utility.yul\":957:984   */\n  tag_50\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_14\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_52\n  tag_15\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1030:1118   */\ntag_51:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_17:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_54\n  tag_9\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_55\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_16\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_18:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_58\n  tag_15\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1434:1490   */\ntag_57:\n    /* \"#utility.yul\":1508:1537   */\n  tag_59\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_14\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_19:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_61:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_61)\ntag_63:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_20:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_65\n    /* \"#utility.yul\":1992:2041   */\n  tag_66\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_18\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1976:2042   */\n  tag_17\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_68\n  tag_13\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2117:2229   */\ntag_67:\n    /* \"#utility.yul\":2238:2290   */\n  tag_69\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_19\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_21:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_72\n  tag_12\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2399:2521   */\ntag_71:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_73\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_20\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3201   */\ntag_3:\n    /* \"#utility.yul\":2757:2763   */\n  0x00\n    /* \"#utility.yul\":2806:2808   */\n  0x20\n    /* \"#utility.yul\":2794:2803   */\n  dup3\n    /* \"#utility.yul\":2785:2792   */\n  dup5\n    /* \"#utility.yul\":2781:2804   */\n  sub\n    /* \"#utility.yul\":2777:2809   */\n  slt\n    /* \"#utility.yul\":2774:2893   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2812:2891   */\n  tag_76\n  tag_10\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2774:2893   */\ntag_75:\n    /* \"#utility.yul\":2953:2954   */\n  0x00\n    /* \"#utility.yul\":2942:2951   */\n  dup3\n    /* \"#utility.yul\":2938:2955   */\n  add\n    /* \"#utility.yul\":2932:2956   */\n  mload\n    /* \"#utility.yul\":2983:3001   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2975:2981   */\n  dup2\n    /* \"#utility.yul\":2972:3002   */\n  gt\n    /* \"#utility.yul\":2969:3086   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":3005:3084   */\n  tag_78\n  tag_11\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2969:3086   */\ntag_77:\n    /* \"#utility.yul\":3110:3184   */\n  tag_79\n    /* \"#utility.yul\":3176:3183   */\n  dup5\n    /* \"#utility.yul\":3167:3173   */\n  dup3\n    /* \"#utility.yul\":3156:3165   */\n  dup6\n    /* \"#utility.yul\":3152:3174   */\n  add\n    /* \"#utility.yul\":3110:3184   */\n  tag_21\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3100:3184   */\n  swap2\n  pop\n    /* \"#utility.yul\":2903:3194   */\n  pop\n    /* \"#utility.yul\":2677:3201   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3207:3306   */\ntag_22:\n    /* \"#utility.yul\":3259:3265   */\n  0x00\n    /* \"#utility.yul\":3293:3298   */\n  dup2\n    /* \"#utility.yul\":3287:3299   */\n  mload\n    /* \"#utility.yul\":3277:3299   */\n  swap1\n  pop\n    /* \"#utility.yul\":3207:3306   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3312:3492   */\ntag_23:\n    /* \"#utility.yul\":3360:3437   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3357:3358   */\n  0x00\n    /* \"#utility.yul\":3350:3438   */\n  mstore\n    /* \"#utility.yul\":3457:3461   */\n  0x22\n    /* \"#utility.yul\":3454:3455   */\n  0x04\n    /* \"#utility.yul\":3447:3462   */\n  mstore\n    /* \"#utility.yul\":3481:3485   */\n  0x24\n    /* \"#utility.yul\":3478:3479   */\n  0x00\n    /* \"#utility.yul\":3471:3486   */\n  revert\n    /* \"#utility.yul\":3498:3818   */\ntag_24:\n    /* \"#utility.yul\":3542:3548   */\n  0x00\n    /* \"#utility.yul\":3579:3580   */\n  0x02\n    /* \"#utility.yul\":3573:3577   */\n  dup3\n    /* \"#utility.yul\":3569:3581   */\n  div\n    /* \"#utility.yul\":3559:3581   */\n  swap1\n  pop\n    /* \"#utility.yul\":3626:3627   */\n  0x01\n    /* \"#utility.yul\":3620:3624   */\n  dup3\n    /* \"#utility.yul\":3616:3628   */\n  and\n    /* \"#utility.yul\":3647:3665   */\n  dup1\n    /* \"#utility.yul\":3637:3718   */\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3703:3707   */\n  0x7f\n    /* \"#utility.yul\":3695:3701   */\n  dup3\n    /* \"#utility.yul\":3691:3708   */\n  and\n    /* \"#utility.yul\":3681:3708   */\n  swap2\n  pop\n    /* \"#utility.yul\":3637:3718   */\ntag_83:\n    /* \"#utility.yul\":3765:3767   */\n  0x20\n    /* \"#utility.yul\":3757:3763   */\n  dup3\n    /* \"#utility.yul\":3754:3768   */\n  lt\n    /* \"#utility.yul\":3734:3752   */\n  dup2\n    /* \"#utility.yul\":3731:3769   */\n  sub\n    /* \"#utility.yul\":3728:3812   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3784:3802   */\n  tag_85\n  tag_23\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3728:3812   */\ntag_84:\n    /* \"#utility.yul\":3549:3818   */\n  pop\n    /* \"#utility.yul\":3498:3818   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3824:3965   */\ntag_25:\n    /* \"#utility.yul\":3873:3877   */\n  0x00\n    /* \"#utility.yul\":3896:3899   */\n  dup2\n    /* \"#utility.yul\":3888:3899   */\n  swap1\n  pop\n    /* \"#utility.yul\":3919:3922   */\n  dup2\n    /* \"#utility.yul\":3916:3917   */\n  0x00\n    /* \"#utility.yul\":3909:3923   */\n  mstore\n    /* \"#utility.yul\":3953:3957   */\n  0x20\n    /* \"#utility.yul\":3950:3951   */\n  0x00\n    /* \"#utility.yul\":3940:3958   */\n  keccak256\n    /* \"#utility.yul\":3932:3958   */\n  swap1\n  pop\n    /* \"#utility.yul\":3824:3965   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3971:4064   */\ntag_26:\n    /* \"#utility.yul\":4008:4014   */\n  0x00\n    /* \"#utility.yul\":4055:4057   */\n  0x20\n    /* \"#utility.yul\":4050:4052   */\n  0x1f\n    /* \"#utility.yul\":4043:4048   */\n  dup4\n    /* \"#utility.yul\":4039:4053   */\n  add\n    /* \"#utility.yul\":4035:4058   */\n  div\n    /* \"#utility.yul\":4025:4058   */\n  swap1\n  pop\n    /* \"#utility.yul\":3971:4064   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4070:4177   */\ntag_27:\n    /* \"#utility.yul\":4114:4122   */\n  0x00\n    /* \"#utility.yul\":4164:4169   */\n  dup3\n    /* \"#utility.yul\":4158:4162   */\n  dup3\n    /* \"#utility.yul\":4154:4170   */\n  shl\n    /* \"#utility.yul\":4133:4170   */\n  swap1\n  pop\n    /* \"#utility.yul\":4070:4177   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4183:4576   */\ntag_28:\n    /* \"#utility.yul\":4252:4258   */\n  0x00\n    /* \"#utility.yul\":4302:4303   */\n  0x08\n    /* \"#utility.yul\":4290:4300   */\n  dup4\n    /* \"#utility.yul\":4286:4304   */\n  mul\n    /* \"#utility.yul\":4325:4422   */\n  tag_90\n    /* \"#utility.yul\":4355:4421   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4344:4353   */\n  dup3\n    /* \"#utility.yul\":4325:4422   */\n  tag_27\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4443:4482   */\n  tag_91\n    /* \"#utility.yul\":4473:4481   */\n  dup7\n    /* \"#utility.yul\":4462:4471   */\n  dup4\n    /* \"#utility.yul\":4443:4482   */\n  tag_27\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4431:4482   */\n  swap6\n  pop\n    /* \"#utility.yul\":4515:4519   */\n  dup1\n    /* \"#utility.yul\":4511:4520   */\n  not\n    /* \"#utility.yul\":4504:4509   */\n  dup5\n    /* \"#utility.yul\":4500:4521   */\n  and\n    /* \"#utility.yul\":4491:4521   */\n  swap4\n  pop\n    /* \"#utility.yul\":4564:4568   */\n  dup1\n    /* \"#utility.yul\":4554:4562   */\n  dup7\n    /* \"#utility.yul\":4550:4569   */\n  and\n    /* \"#utility.yul\":4543:4548   */\n  dup5\n    /* \"#utility.yul\":4540:4570   */\n  or\n    /* \"#utility.yul\":4530:4570   */\n  swap3\n  pop\n    /* \"#utility.yul\":4259:4576   */\n  pop\n  pop\n    /* \"#utility.yul\":4183:4576   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4582:4659   */\ntag_29:\n    /* \"#utility.yul\":4619:4626   */\n  0x00\n    /* \"#utility.yul\":4648:4653   */\n  dup2\n    /* \"#utility.yul\":4637:4653   */\n  swap1\n  pop\n    /* \"#utility.yul\":4582:4659   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4665:4725   */\ntag_30:\n    /* \"#utility.yul\":4693:4696   */\n  0x00\n    /* \"#utility.yul\":4714:4719   */\n  dup2\n    /* \"#utility.yul\":4707:4719   */\n  swap1\n  pop\n    /* \"#utility.yul\":4665:4725   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4731:4873   */\ntag_31:\n    /* \"#utility.yul\":4781:4790   */\n  0x00\n    /* \"#utility.yul\":4814:4867   */\n  tag_95\n    /* \"#utility.yul\":4832:4866   */\n  tag_96\n    /* \"#utility.yul\":4841:4865   */\n  tag_97\n    /* \"#utility.yul\":4859:4864   */\n  dup5\n    /* \"#utility.yul\":4841:4865   */\n  tag_29\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4832:4866   */\n  tag_30\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4814:4867   */\n  tag_29\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4801:4867   */\n  swap1\n  pop\n    /* \"#utility.yul\":4731:4873   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4879:4954   */\ntag_32:\n    /* \"#utility.yul\":4922:4925   */\n  0x00\n    /* \"#utility.yul\":4943:4948   */\n  dup2\n    /* \"#utility.yul\":4936:4948   */\n  swap1\n  pop\n    /* \"#utility.yul\":4879:4954   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4960:5229   */\ntag_33:\n    /* \"#utility.yul\":5070:5109   */\n  tag_100\n    /* \"#utility.yul\":5101:5108   */\n  dup4\n    /* \"#utility.yul\":5070:5109   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5131:5222   */\n  tag_101\n    /* \"#utility.yul\":5180:5221   */\n  tag_102\n    /* \"#utility.yul\":5204:5220   */\n  dup3\n    /* \"#utility.yul\":5180:5221   */\n  tag_32\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5172:5178   */\n  dup5\n    /* \"#utility.yul\":5165:5169   */\n  dup5\n    /* \"#utility.yul\":5159:5170   */\n  sload\n    /* \"#utility.yul\":5131:5222   */\n  tag_28\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5125:5129   */\n  dup3\n    /* \"#utility.yul\":5118:5223   */\n  sstore\n    /* \"#utility.yul\":5036:5229   */\n  pop\n    /* \"#utility.yul\":4960:5229   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5235:5308   */\ntag_34:\n    /* \"#utility.yul\":5280:5283   */\n  0x00\n    /* \"#utility.yul\":5235:5308   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5314:5503   */\ntag_35:\n    /* \"#utility.yul\":5391:5423   */\n  tag_105\n  tag_34\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5432:5497   */\n  tag_106\n    /* \"#utility.yul\":5490:5496   */\n  dup2\n    /* \"#utility.yul\":5482:5488   */\n  dup5\n    /* \"#utility.yul\":5476:5480   */\n  dup5\n    /* \"#utility.yul\":5432:5497   */\n  tag_33\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5367:5503   */\n  pop\n    /* \"#utility.yul\":5314:5503   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5509:5695   */\ntag_36:\n    /* \"#utility.yul\":5569:5689   */\ntag_108:\n    /* \"#utility.yul\":5586:5589   */\n  dup2\n    /* \"#utility.yul\":5579:5584   */\n  dup2\n    /* \"#utility.yul\":5576:5590   */\n  lt\n    /* \"#utility.yul\":5569:5689   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":5640:5679   */\n  tag_111\n    /* \"#utility.yul\":5677:5678   */\n  0x00\n    /* \"#utility.yul\":5670:5675   */\n  dup3\n    /* \"#utility.yul\":5640:5679   */\n  tag_35\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5613:5614   */\n  0x01\n    /* \"#utility.yul\":5606:5611   */\n  dup2\n    /* \"#utility.yul\":5602:5615   */\n  add\n    /* \"#utility.yul\":5593:5615   */\n  swap1\n  pop\n    /* \"#utility.yul\":5569:5689   */\n  jump(tag_108)\ntag_110:\n    /* \"#utility.yul\":5509:5695   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5701:6244   */\ntag_37:\n    /* \"#utility.yul\":5802:5804   */\n  0x1f\n    /* \"#utility.yul\":5797:5800   */\n  dup3\n    /* \"#utility.yul\":5794:5805   */\n  gt\n    /* \"#utility.yul\":5791:6237   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":5836:5874   */\n  tag_114\n    /* \"#utility.yul\":5868:5873   */\n  dup2\n    /* \"#utility.yul\":5836:5874   */\n  tag_25\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5920:5949   */\n  tag_115\n    /* \"#utility.yul\":5938:5948   */\n  dup5\n    /* \"#utility.yul\":5920:5949   */\n  tag_26\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5910:5918   */\n  dup2\n    /* \"#utility.yul\":5906:5950   */\n  add\n    /* \"#utility.yul\":6103:6105   */\n  0x20\n    /* \"#utility.yul\":6091:6101   */\n  dup6\n    /* \"#utility.yul\":6088:6106   */\n  lt\n    /* \"#utility.yul\":6085:6134   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":6124:6132   */\n  dup2\n    /* \"#utility.yul\":6109:6132   */\n  swap1\n  pop\n    /* \"#utility.yul\":6085:6134   */\ntag_116:\n    /* \"#utility.yul\":6147:6227   */\n  tag_117\n    /* \"#utility.yul\":6203:6225   */\n  tag_118\n    /* \"#utility.yul\":6221:6224   */\n  dup6\n    /* \"#utility.yul\":6203:6225   */\n  tag_26\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6193:6201   */\n  dup4\n    /* \"#utility.yul\":6189:6226   */\n  add\n    /* \"#utility.yul\":6176:6187   */\n  dup3\n    /* \"#utility.yul\":6147:6227   */\n  tag_36\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5806:6237   */\n  pop\n  pop\n    /* \"#utility.yul\":5791:6237   */\ntag_113:\n    /* \"#utility.yul\":5701:6244   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6250:6367   */\ntag_38:\n    /* \"#utility.yul\":6304:6312   */\n  0x00\n    /* \"#utility.yul\":6354:6359   */\n  dup3\n    /* \"#utility.yul\":6348:6352   */\n  dup3\n    /* \"#utility.yul\":6344:6360   */\n  shr\n    /* \"#utility.yul\":6323:6360   */\n  swap1\n  pop\n    /* \"#utility.yul\":6250:6367   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6373:6542   */\ntag_39:\n    /* \"#utility.yul\":6417:6423   */\n  0x00\n    /* \"#utility.yul\":6450:6501   */\n  tag_121\n    /* \"#utility.yul\":6498:6499   */\n  0x00\n    /* \"#utility.yul\":6494:6500   */\n  not\n    /* \"#utility.yul\":6486:6491   */\n  dup5\n    /* \"#utility.yul\":6483:6484   */\n  0x08\n    /* \"#utility.yul\":6479:6492   */\n  mul\n    /* \"#utility.yul\":6450:6501   */\n  tag_38\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6446:6502   */\n  not\n    /* \"#utility.yul\":6531:6535   */\n  dup1\n    /* \"#utility.yul\":6525:6529   */\n  dup4\n    /* \"#utility.yul\":6521:6536   */\n  and\n    /* \"#utility.yul\":6511:6536   */\n  swap2\n  pop\n    /* \"#utility.yul\":6424:6542   */\n  pop\n    /* \"#utility.yul\":6373:6542   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6547:6842   */\ntag_40:\n    /* \"#utility.yul\":6623:6627   */\n  0x00\n    /* \"#utility.yul\":6769:6798   */\n  tag_123\n    /* \"#utility.yul\":6794:6797   */\n  dup4\n    /* \"#utility.yul\":6788:6792   */\n  dup4\n    /* \"#utility.yul\":6769:6798   */\n  tag_39\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6761:6798   */\n  swap2\n  pop\n    /* \"#utility.yul\":6831:6834   */\n  dup3\n    /* \"#utility.yul\":6828:6829   */\n  0x02\n    /* \"#utility.yul\":6824:6835   */\n  mul\n    /* \"#utility.yul\":6818:6822   */\n  dup3\n    /* \"#utility.yul\":6815:6836   */\n  or\n    /* \"#utility.yul\":6807:6836   */\n  swap1\n  pop\n    /* \"#utility.yul\":6547:6842   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6847:8242   */\ntag_7:\n    /* \"#utility.yul\":6964:7001   */\n  tag_125\n    /* \"#utility.yul\":6997:7000   */\n  dup3\n    /* \"#utility.yul\":6964:7001   */\n  tag_22\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":7066:7084   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7058:7064   */\n  dup2\n    /* \"#utility.yul\":7055:7085   */\n  gt\n    /* \"#utility.yul\":7052:7108   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":7088:7106   */\n  tag_127\n  tag_15\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":7052:7108   */\ntag_126:\n    /* \"#utility.yul\":7132:7170   */\n  tag_128\n    /* \"#utility.yul\":7164:7168   */\n  dup3\n    /* \"#utility.yul\":7158:7169   */\n  sload\n    /* \"#utility.yul\":7132:7170   */\n  tag_24\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":7217:7284   */\n  tag_129\n    /* \"#utility.yul\":7277:7283   */\n  dup3\n    /* \"#utility.yul\":7269:7275   */\n  dup3\n    /* \"#utility.yul\":7263:7267   */\n  dup6\n    /* \"#utility.yul\":7217:7284   */\n  tag_37\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7311:7312   */\n  0x00\n    /* \"#utility.yul\":7335:7339   */\n  0x20\n    /* \"#utility.yul\":7322:7339   */\n  swap1\n  pop\n    /* \"#utility.yul\":7367:7369   */\n  0x1f\n    /* \"#utility.yul\":7359:7365   */\n  dup4\n    /* \"#utility.yul\":7356:7370   */\n  gt\n    /* \"#utility.yul\":7384:7385   */\n  0x01\n    /* \"#utility.yul\":7379:7997   */\n  dup2\n  eq\n  tag_131\n  jumpi\n    /* \"#utility.yul\":8041:8042   */\n  0x00\n    /* \"#utility.yul\":8058:8064   */\n  dup5\n    /* \"#utility.yul\":8055:8132   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":8107:8116   */\n  dup3\n    /* \"#utility.yul\":8102:8105   */\n  dup8\n    /* \"#utility.yul\":8098:8117   */\n  add\n    /* \"#utility.yul\":8092:8118   */\n  mload\n    /* \"#utility.yul\":8083:8118   */\n  swap1\n  pop\n    /* \"#utility.yul\":8055:8132   */\ntag_132:\n    /* \"#utility.yul\":8158:8225   */\n  tag_133\n    /* \"#utility.yul\":8218:8224   */\n  dup6\n    /* \"#utility.yul\":8211:8216   */\n  dup3\n    /* \"#utility.yul\":8158:8225   */\n  tag_40\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":8152:8156   */\n  dup7\n    /* \"#utility.yul\":8145:8226   */\n  sstore\n    /* \"#utility.yul\":8014:8236   */\n  pop\n    /* \"#utility.yul\":7349:8236   */\n  jump(tag_130)\n    /* \"#utility.yul\":7379:7997   */\ntag_131:\n    /* \"#utility.yul\":7431:7435   */\n  0x1f\n    /* \"#utility.yul\":7427:7436   */\n  not\n    /* \"#utility.yul\":7419:7425   */\n  dup5\n    /* \"#utility.yul\":7415:7437   */\n  and\n    /* \"#utility.yul\":7465:7502   */\n  tag_134\n    /* \"#utility.yul\":7497:7501   */\n  dup7\n    /* \"#utility.yul\":7465:7502   */\n  tag_25\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":7524:7525   */\n  0x00\n    /* \"#utility.yul\":7538:7746   */\ntag_135:\n    /* \"#utility.yul\":7552:7559   */\n  dup3\n    /* \"#utility.yul\":7549:7550   */\n  dup2\n    /* \"#utility.yul\":7546:7560   */\n  lt\n    /* \"#utility.yul\":7538:7746   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":7631:7640   */\n  dup5\n    /* \"#utility.yul\":7626:7629   */\n  dup10\n    /* \"#utility.yul\":7622:7641   */\n  add\n    /* \"#utility.yul\":7616:7642   */\n  mload\n    /* \"#utility.yul\":7608:7614   */\n  dup3\n    /* \"#utility.yul\":7601:7643   */\n  sstore\n    /* \"#utility.yul\":7682:7683   */\n  0x01\n    /* \"#utility.yul\":7674:7680   */\n  dup3\n    /* \"#utility.yul\":7670:7684   */\n  add\n    /* \"#utility.yul\":7660:7684   */\n  swap2\n  pop\n    /* \"#utility.yul\":7729:7731   */\n  0x20\n    /* \"#utility.yul\":7718:7727   */\n  dup6\n    /* \"#utility.yul\":7714:7732   */\n  add\n    /* \"#utility.yul\":7701:7732   */\n  swap5\n  pop\n    /* \"#utility.yul\":7575:7579   */\n  0x20\n    /* \"#utility.yul\":7572:7573   */\n  dup2\n    /* \"#utility.yul\":7568:7580   */\n  add\n    /* \"#utility.yul\":7563:7580   */\n  swap1\n  pop\n    /* \"#utility.yul\":7538:7746   */\n  jump(tag_135)\ntag_137:\n    /* \"#utility.yul\":7774:7780   */\n  dup7\n    /* \"#utility.yul\":7765:7772   */\n  dup4\n    /* \"#utility.yul\":7762:7781   */\n  lt\n    /* \"#utility.yul\":7759:7938   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":7832:7841   */\n  dup5\n    /* \"#utility.yul\":7827:7830   */\n  dup10\n    /* \"#utility.yul\":7823:7842   */\n  add\n    /* \"#utility.yul\":7817:7843   */\n  mload\n    /* \"#utility.yul\":7875:7923   */\n  tag_139\n    /* \"#utility.yul\":7917:7921   */\n  0x1f\n    /* \"#utility.yul\":7909:7915   */\n  dup10\n    /* \"#utility.yul\":7905:7922   */\n  and\n    /* \"#utility.yul\":7894:7903   */\n  dup3\n    /* \"#utility.yul\":7875:7923   */\n  tag_39\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":7867:7873   */\n  dup4\n    /* \"#utility.yul\":7860:7924   */\n  sstore\n    /* \"#utility.yul\":7782:7938   */\n  pop\n    /* \"#utility.yul\":7759:7938   */\ntag_138:\n    /* \"#utility.yul\":7984:7985   */\n  0x01\n    /* \"#utility.yul\":7980:7981   */\n  0x02\n    /* \"#utility.yul\":7972:7978   */\n  dup9\n    /* \"#utility.yul\":7968:7982   */\n  mul\n    /* \"#utility.yul\":7964:7986   */\n  add\n    /* \"#utility.yul\":7958:7962   */\n  dup9\n    /* \"#utility.yul\":7951:7987   */\n  sstore\n    /* \"#utility.yul\":7386:7997   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7349:8236   */\ntag_130:\n  pop\n    /* \"#utility.yul\":6939:8242   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6847:8242   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/LP.sol\":177:609  contract LP is ERC20 {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LP.sol\":177:609  contract LP is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LP.sol\":391:506  function name() public view override returns(string memory) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7435:8008  function approve(address spender, uint256 amount) public virtual returns (bool) {... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6287:6482  function totalSupply() public view virtual returns (uint256 result) {... */\n    tag_5:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9969:12160  function transferFrom(address from, address to, uint256 amount) public virtual returns (bool) {... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":5860:5942  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16620:17313  function DOMAIN_SEPARATOR() public view virtual returns (bytes32 result) {... */\n    tag_8:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6548:6834  function balanceOf(address owner) public view virtual returns (uint256 result) {... */\n    tag_9:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12800:13140  function nonces(address owner) public view virtual returns (uint256 result) {... */\n    tag_10:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LP.sol\":512:606  function symbol() public view override returns(string memory) {... */\n    tag_11:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8195:9601  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n    tag_12:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13324:16539  function permit(... */\n    tag_13:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6929:7304  function allowance(address owner, address spender)... */\n    tag_14:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LP.sol\":391:506  function name() public view override returns(string memory) {... */\n    tag_17:\n        /* \"contracts/LP.sol\":436:449  string memory */\n      0x60\n        /* \"contracts/LP.sol\":483:489  PREFIX */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x4d494e492d000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/LP.sol\":491:497  s_name */\n      0x00\n        /* \"contracts/LP.sol\":469:498  string.concat(PREFIX, s_name) */\n      add(0x20, mload(0x40))\n      tag_69\n      swap3\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/LP.sol\":462:498  return string.concat(PREFIX, s_name) */\n      swap1\n      pop\n        /* \"contracts/LP.sol\":391:506  function name() public view override returns(string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7435:8008  function approve(address spender, uint256 amount) public virtual returns (bool) {... */\n    tag_23:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7509:7513  bool */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7668:7675  spender */\n      dup3\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7662:7666  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7655:7676  mstore(0x20, spender) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7702:7722  _ALLOWANCE_SLOT_SEED */\n      0x7f5e9f20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7696:7700  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7689:7723  mstore(0x0c, _ALLOWANCE_SLOT_SEED) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7749:7757  caller() */\n      caller\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7743:7747  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7736:7758  mstore(0x00, caller()) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7801:7807  amount */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7794:7798  0x34 */\n      0x34\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7788:7792  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7778:7799  keccak256(0x0c, 0x34) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7771:7808  sstore(keccak256(0x0c, 0x34), amount) */\n      sstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7876:7882  amount */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7870:7874  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7863:7883  mstore(0x00, amount) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7964:7968  0x2c */\n      0x2c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7958:7969  mload(0x2c) */\n      mload\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7954:7956  96 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7950:7970  shr(96, mload(0x2c)) */\n      shr\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7940:7948  caller() */\n      caller\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7913:7938  _APPROVAL_EVENT_SIGNATURE */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7907:7911  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7901:7905  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7896:7971  log3(0x00, 0x20, _APPROVAL_EVENT_SIGNATURE, caller(), shr(96, mload(0x2c))) */\n      log3\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7997:8001  true */\n      0x01\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7990:8001  return true */\n      swap1\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7435:8008  function approve(address spender, uint256 amount) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6287:6482  function totalSupply() public view virtual returns (uint256 result) {... */\n    tag_27:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6339:6353  uint256 result */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6447:6465  _TOTAL_SUPPLY_SLOT */\n      0x05345cdf77eb68f44c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6441:6466  sload(_TOTAL_SUPPLY_SLOT) */\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6431:6466  result := sload(_TOTAL_SUPPLY_SLOT) */\n      swap1\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6287:6482  function totalSupply() public view virtual returns (uint256 result) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9969:12160  function transferFrom(address from, address to, uint256 amount) public virtual returns (bool) {... */\n    tag_33:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10057:10061  bool */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10073:10111  _beforeTokenTransfer(from, to, amount) */\n      tag_74\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10094:10098  from */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10100:10102  to */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10104:10110  amount */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10073:10093  _beforeTokenTransfer */\n      tag_75\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10073:10111  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_74:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10208:10212  from */\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10204:10206  96 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10200:10213  shl(96, from) */\n      shl\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10301:10309  caller() */\n      caller\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10295:10299  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10288:10310  mstore(0x20, caller()) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10346:10366  _ALLOWANCE_SLOT_SEED */\n      0x7f5e9f20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10339:10344  from_ */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10336:10367  or(from_, _ALLOWANCE_SLOT_SEED) */\n      or\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10330:10334  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10323:10368  mstore(0x0c, or(from_, _ALLOWANCE_SLOT_SEED)) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10418:10422  0x34 */\n      0x34\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10412:10416  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10402:10423  keccak256(0x0c, 0x34) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10460:10473  allowanceSlot */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10454:10474  sload(allowanceSlot) */\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10572:10573  1 */\n      0x01\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10560:10570  allowance_ */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10556:10574  add(allowance_, 1) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10553:10971  if add(allowance_, 1) {... */\n      iszero\n      tag_76\n      jumpi\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10688:10698  allowance_ */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10680:10686  amount */\n      dup6\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10677:10699  gt(amount, allowance_) */\n      gt\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10674:10833  if gt(amount, allowance_) {... */\n      iszero\n      tag_77\n      jumpi\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10735:10745  0x13be252b */\n      0x13be252b\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10729:10733  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10722:10746  mstore(0x00, 0x13be252b) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10810:10814  0x04 */\n      0x04\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10804:10808  0x1c */\n      0x1c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10797:10815  revert(0x1c, 0x04) */\n      revert\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10674:10833  if gt(amount, allowance_) {... */\n    tag_77:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10949:10955  amount */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10937:10947  allowance_ */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10933:10956  sub(allowance_, amount) */\n      sub\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10918:10931  allowanceSlot */\n      dup3\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10911:10957  sstore(allowanceSlot, sub(allowance_, amount)) */\n      sstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10553:10971  if add(allowance_, 1) {... */\n    tag_76:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11067:11085  _BALANCE_SLOT_SEED */\n      0x87a211a2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11060:11065  from_ */\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11057:11086  or(from_, _BALANCE_SLOT_SEED) */\n      or\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11051:11055  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11044:11087  mstore(0x0c, or(from_, _BALANCE_SLOT_SEED)) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11139:11143  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11133:11137  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11123:11144  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11182:11197  fromBalanceSlot */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11176:11198  sload(fromBalanceSlot) */\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11272:11283  fromBalance */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11264:11270  amount */\n      dup8\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11261:11284  gt(amount, fromBalance) */\n      gt\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11258:11404  if gt(amount, fromBalance) {... */\n      iszero\n      tag_78\n      jumpi\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11316:11326  0xf4d678b8 */\n      0xf4d678b8\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11310:11314  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11303:11327  mstore(0x00, 0xf4d678b8) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11385:11389  0x04 */\n      0x04\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11379:11383  0x1c */\n      0x1c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11372:11390  revert(0x1c, 0x04) */\n      revert\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11258:11404  if gt(amount, fromBalance) {... */\n    tag_78:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11513:11519  amount */\n      dup7\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11500:11511  fromBalance */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11496:11520  sub(fromBalance, amount) */\n      sub\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11479:11494  fromBalanceSlot */\n      dup3\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11472:11521  sstore(fromBalanceSlot, sub(fromBalance, amount)) */\n      sstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11596:11598  to */\n      dup8\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11590:11594  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11583:11599  mstore(0x00, to) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11649:11653  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11643:11647  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11633:11654  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11899:11905  amount */\n      dup8\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11883:11896  toBalanceSlot */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11877:11897  sload(toBalanceSlot) */\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11873:11906  add(sload(toBalanceSlot), amount) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11858:11871  toBalanceSlot */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11851:11907  sstore(toBalanceSlot, add(sload(toBalanceSlot), amount)) */\n      sstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11975:11981  amount */\n      dup8\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11969:11973  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11962:11982  mstore(0x20, amount) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12069:12073  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12063:12074  mload(0x0c) */\n      mload\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12059:12061  96 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12055:12075  shr(96, mload(0x0c)) */\n      shr\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12047:12052  from_ */\n      dup7\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12043:12045  96 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12039:12053  shr(96, from_) */\n      shr\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12012:12037  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12006:12010  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12000:12004  0x20 */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":11995:12076  log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, shr(96, from_), shr(96, mload(0x0c))) */\n      log3\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":10173:12086  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12095:12132  _afterTokenTransfer(from, to, amount) */\n      tag_79\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12115:12119  from */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12121:12123  to */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12125:12131  amount */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12095:12114  _afterTokenTransfer */\n      tag_80\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12095:12132  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_79:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12149:12153  true */\n      0x01\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12142:12153  return true */\n      swap1\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9969:12160  function transferFrom(address from, address to, uint256 amount) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":5860:5942  function decimals() public view virtual returns (uint8) {... */\n    tag_36:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":5909:5914  uint8 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":5933:5935  18 */\n      0x12\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":5926:5935  return 18 */\n      swap1\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":5860:5942  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16620:17313  function DOMAIN_SEPARATOR() public view virtual returns (bytes32 result) {... */\n    tag_40:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16677:16691  bytes32 result */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16703:16719  bytes32 nameHash */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16722:16741  _constantNameHash() */\n      tag_83\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16722:16739  _constantNameHash */\n      tag_84\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16722:16741  _constantNameHash() */\n      jump\t// in\n    tag_83:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16703:16741  bytes32 nameHash = _constantNameHash() */\n      swap1\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16869:16870  0 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16861:16871  bytes32(0) */\n      dup1\n      shl\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16849:16857  nameHash */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16849:16871  nameHash == bytes32(0) */\n      sub\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16845:16908  if (nameHash == bytes32(0)) nameHash = keccak256(bytes(name())) */\n      tag_85\n      jumpi\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16900:16906  name() */\n      tag_86\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16900:16904  name */\n      tag_17\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16900:16906  name() */\n      jump\t// in\n    tag_86:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16884:16908  keccak256(bytes(name())) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16873:16908  nameHash = keccak256(bytes(name())) */\n      swap1\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16845:16908  if (nameHash == bytes32(0)) nameHash = keccak256(bytes(name())) */\n    tag_85:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16999:17003  0x40 */\n      0x40\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16993:17004  mload(0x40) */\n      mload\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17060:17076  _DOMAIN_TYPEHASH */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17057:17058  m */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17050:17077  mstore(m, _DOMAIN_TYPEHASH) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17111:17119  nameHash */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17104:17108  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17101:17102  m */\n      dup3\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17097:17109  add(m, 0x20) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17090:17120  mstore(add(m, 0x20), nameHash) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17154:17167  _VERSION_HASH */\n      0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17147:17151  0x40 */\n      0x40\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17144:17145  m */\n      dup3\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17140:17152  add(m, 0x40) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17133:17168  mstore(add(m, 0x40), _VERSION_HASH) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17202:17211  chainid() */\n      chainid\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17195:17199  0x60 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17192:17193  m */\n      dup3\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17188:17200  add(m, 0x60) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17181:17212  mstore(add(m, 0x60), chainid()) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17246:17255  address() */\n      address\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17239:17243  0x80 */\n      0x80\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17236:17237  m */\n      dup3\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17232:17244  add(m, 0x80) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17225:17256  mstore(add(m, 0x80), address()) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17292:17296  0xa0 */\n      0xa0\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17289:17290  m */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17279:17297  keccak256(m, 0xa0) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":17269:17297  result := keccak256(m, 0xa0) */\n      swap3\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16970:17307  {... */\n      pop\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16620:17313  function DOMAIN_SEPARATOR() public view virtual returns (bytes32 result) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6548:6834  function balanceOf(address owner) public view virtual returns (uint256 result) {... */\n    tag_46:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6611:6625  uint256 result */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6716:6734  _BALANCE_SLOT_SEED */\n      0x87a211a2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6710:6714  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6703:6735  mstore(0x0c, _BALANCE_SLOT_SEED) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6761:6766  owner */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6755:6759  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6748:6767  mstore(0x00, owner) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6812:6816  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6806:6810  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6796:6817  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6790:6818  sload(keccak256(0x0c, 0x20)) */\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6780:6818  result := sload(keccak256(0x0c, 0x20)) */\n      swap1\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6548:6834  function balanceOf(address owner) public view virtual returns (uint256 result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12800:13140  function nonces(address owner) public view virtual returns (uint256 result) {... */\n    tag_50:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12860:12874  uint256 result */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13023:13040  _NONCES_SLOT_SEED */\n      0x38377508\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13017:13021  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13010:13041  mstore(0x0c, _NONCES_SLOT_SEED) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13067:13072  owner */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13061:13065  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13054:13073  mstore(0x00, owner) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13118:13122  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13112:13116  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13102:13123  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13096:13124  sload(keccak256(0x0c, 0x20)) */\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13086:13124  result := sload(keccak256(0x0c, 0x20)) */\n      swap1\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12800:13140  function nonces(address owner) public view virtual returns (uint256 result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/LP.sol\":512:606  function symbol() public view override returns(string memory) {... */\n    tag_53:\n        /* \"contracts/LP.sol\":559:572  string memory */\n      0x60\n        /* \"contracts/LP.sol\":592:598  s_name */\n      0x00\n        /* \"contracts/LP.sol\":585:598  return s_name */\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_91\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/LP.sol\":512:606  function symbol() public view override returns(string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8195:9601  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n    tag_57:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8265:8269  bool */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8281:8325  _beforeTokenTransfer(msg.sender, to, amount) */\n      tag_97\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8302:8312  msg.sender */\n      caller\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8314:8316  to */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8318:8324  amount */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8281:8301  _beforeTokenTransfer */\n      tag_75\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8281:8325  _beforeTokenTransfer(msg.sender, to, amount) */\n      jump\t// in\n    tag_97:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8474:8492  _BALANCE_SLOT_SEED */\n      0x87a211a2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8468:8472  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8461:8493  mstore(0x0c, _BALANCE_SLOT_SEED) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8519:8527  caller() */\n      caller\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8513:8517  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8506:8528  mstore(0x00, caller()) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8580:8584  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8574:8578  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8564:8585  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8623:8638  fromBalanceSlot */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8617:8639  sload(fromBalanceSlot) */\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8713:8724  fromBalance */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8705:8711  amount */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8702:8725  gt(amount, fromBalance) */\n      gt\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8699:8845  if gt(amount, fromBalance) {... */\n      iszero\n      tag_98\n      jumpi\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8757:8767  0xf4d678b8 */\n      0xf4d678b8\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8751:8755  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8744:8768  mstore(0x00, 0xf4d678b8) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8826:8830  0x04 */\n      0x04\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8820:8824  0x1c */\n      0x1c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8813:8831  revert(0x1c, 0x04) */\n      revert\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8699:8845  if gt(amount, fromBalance) {... */\n    tag_98:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8954:8960  amount */\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8941:8952  fromBalance */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8937:8961  sub(fromBalance, amount) */\n      sub\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8920:8935  fromBalanceSlot */\n      dup3\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8913:8962  sstore(fromBalanceSlot, sub(fromBalance, amount)) */\n      sstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9037:9039  to */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9031:9035  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9024:9040  mstore(0x00, to) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9090:9094  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9084:9088  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9074:9095  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9340:9346  amount */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9324:9337  toBalanceSlot */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9318:9338  sload(toBalanceSlot) */\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9314:9347  add(sload(toBalanceSlot), amount) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9299:9312  toBalanceSlot */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9292:9348  sstore(toBalanceSlot, add(sload(toBalanceSlot), amount)) */\n      sstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9416:9422  amount */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9410:9414  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9403:9423  mstore(0x20, amount) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9504:9508  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9498:9509  mload(0x0c) */\n      mload\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9494:9496  96 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9490:9510  shr(96, mload(0x0c)) */\n      shr\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9480:9488  caller() */\n      caller\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9453:9478  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9447:9451  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9441:9445  0x20 */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9436:9511  log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, caller(), shr(96, mload(0x0c))) */\n      log3\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8387:9521  {... */\n      pop\n      pop\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9530:9573  _afterTokenTransfer(msg.sender, to, amount) */\n      tag_99\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9550:9560  msg.sender */\n      caller\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9562:9564  to */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9566:9572  amount */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9530:9549  _afterTokenTransfer */\n      tag_80\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9530:9573  _afterTokenTransfer(msg.sender, to, amount) */\n      jump\t// in\n    tag_99:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9590:9594  true */\n      0x01\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":9583:9594  return true */\n      swap1\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":8195:9601  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13324:16539  function permit(... */\n    tag_62:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13523:13539  bytes32 nameHash */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13542:13561  _constantNameHash() */\n      tag_101\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13542:13559  _constantNameHash */\n      tag_84\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13542:13561  _constantNameHash() */\n      jump\t// in\n    tag_101:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13523:13561  bytes32 nameHash = _constantNameHash() */\n      swap1\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13689:13690  0 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13681:13691  bytes32(0) */\n      dup1\n      shl\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13669:13677  nameHash */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13669:13691  nameHash == bytes32(0) */\n      sub\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13665:13728  if (nameHash == bytes32(0)) nameHash = keccak256(bytes(name())) */\n      tag_102\n      jumpi\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13720:13726  name() */\n      tag_103\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13720:13724  name */\n      tag_17\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13720:13726  name() */\n      jump\t// in\n    tag_103:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13704:13728  keccak256(bytes(name())) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13693:13728  nameHash = keccak256(bytes(name())) */\n      swap1\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13665:13728  if (nameHash == bytes32(0)) nameHash = keccak256(bytes(name())) */\n    tag_102:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13896:13904  deadline */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13883:13894  timestamp() */\n      timestamp\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13880:13905  gt(timestamp(), deadline) */\n      gt\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13877:14019  if gt(timestamp(), deadline) {... */\n      iszero\n      tag_104\n      jumpi\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13937:13947  0x1a15a3cc */\n      0x1a15a3cc\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13931:13935  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13924:13948  mstore(0x00, 0x1a15a3cc) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14000:14004  0x04 */\n      0x04\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13994:13998  0x1c */\n      0x1c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13987:14005  revert(0x1c, 0x04) */\n      revert\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13877:14019  if gt(timestamp(), deadline) {... */\n    tag_104:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14047:14051  0x40 */\n      0x40\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14041:14052  mload(0x40) */\n      mload\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14163:14168  owner */\n      dup9\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14159:14161  96 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14155:14169  shl(96, owner) */\n      shl\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14151:14153  96 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14147:14170  shr(96, shl(96, owner)) */\n      shr\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14138:14170  owner := shr(96, shl(96, owner)) */\n      swap9\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14210:14217  spender */\n      dup8\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14206:14208  96 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14202:14218  shl(96, spender) */\n      shl\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14198:14200  96 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14194:14219  shr(96, shl(96, spender)) */\n      shr\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14183:14219  spender := shr(96, shl(96, spender)) */\n      swap8\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14303:14342  _NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX */\n      0x383775081901\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14297:14301  0x0e */\n      0x0e\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14290:14343  mstore(0x0e, _NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14369:14374  owner */\n      dup9\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14363:14367  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14356:14375  mstore(0x00, owner) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14421:14425  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14415:14419  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14405:14426  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14463:14472  nonceSlot */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14457:14473  sload(nonceSlot) */\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14541:14557  _DOMAIN_TYPEHASH */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14538:14539  m */\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14531:14558  mstore(m, _DOMAIN_TYPEHASH) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14592:14600  nameHash */\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14585:14589  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14582:14583  m */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14578:14590  add(m, 0x20) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14571:14601  mstore(add(m, 0x20), nameHash) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14635:14648  _VERSION_HASH */\n      0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14628:14632  0x40 */\n      0x40\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14625:14626  m */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14621:14633  add(m, 0x40) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14614:14649  mstore(add(m, 0x40), _VERSION_HASH) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14683:14692  chainid() */\n      chainid\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14676:14680  0x60 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14673:14674  m */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14669:14681  add(m, 0x60) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14662:14693  mstore(add(m, 0x60), chainid()) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14727:14736  address() */\n      address\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14720:14724  0x80 */\n      0x80\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14717:14718  m */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14713:14725  add(m, 0x80) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14706:14737  mstore(add(m, 0x80), address()) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14776:14780  0xa0 */\n      0xa0\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14773:14774  m */\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14763:14781  keccak256(m, 0xa0) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14757:14761  0x2e */\n      0x2e\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14750:14782  mstore(0x2e, keccak256(m, 0xa0)) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14845:14861  _PERMIT_TYPEHASH */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14842:14843  m */\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14835:14862  mstore(m, _PERMIT_TYPEHASH) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14896:14901  owner */\n      dup11\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14889:14893  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14886:14887  m */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14882:14894  add(m, 0x20) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14875:14902  mstore(add(m, 0x20), owner) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14936:14943  spender */\n      dup10\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14929:14933  0x40 */\n      0x40\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14926:14927  m */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14922:14934  add(m, 0x40) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14915:14944  mstore(add(m, 0x40), spender) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14978:14983  value */\n      dup9\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14971:14975  0x60 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14968:14969  m */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14964:14976  add(m, 0x60) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14957:14984  mstore(add(m, 0x60), value) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15018:15028  nonceValue */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15011:15015  0x80 */\n      0x80\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15008:15009  m */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15004:15016  add(m, 0x80) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":14997:15029  mstore(add(m, 0x80), nonceValue) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15063:15071  deadline */\n      dup8\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15056:15060  0xa0 */\n      0xa0\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15053:15054  m */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15049:15061  add(m, 0xa0) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15042:15072  mstore(add(m, 0xa0), deadline) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15111:15115  0xc0 */\n      0xc0\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15108:15109  m */\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15098:15116  keccak256(m, 0xc0) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15092:15096  0x4e */\n      0x4e\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15085:15117  mstore(0x4e, keccak256(m, 0xc0)) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15206:15210  0x42 */\n      0x42\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15200:15204  0x2c */\n      0x2c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15190:15211  keccak256(0x2c, 0x42) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15184:15188  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15177:15212  mstore(0x00, keccak256(0x2c, 0x42)) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15248:15249  v */\n      dup7\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15242:15246  0xff */\n      0xff\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15238:15250  and(0xff, v) */\n      and\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15232:15236  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15225:15251  mstore(0x20, and(0xff, v)) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15277:15278  r */\n      dup6\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15271:15275  0x40 */\n      0x40\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15264:15279  mstore(0x40, r) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15305:15306  s */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15299:15303  0x60 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15292:15307  mstore(0x60, s) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15365:15369  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15359:15363  0x20 */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15353:15357  0x80 */\n      0x80\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15350:15351  0 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15347:15348  1 */\n      0x01\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15340:15345  gas() */\n      gas\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15329:15370  staticcall(gas(), 1, 0, 0x80, 0x20, 0x20) */\n      staticcall\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15786:15791  owner */\n      dup12\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15767:15783  returndatasize() */\n      returndatasize\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15761:15784  mload(returndatasize()) */\n      mload\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15758:15792  eq(mload(returndatasize()), owner) */\n      eq\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15748:15907  if iszero(eq(mload(returndatasize()), owner)) {... */\n      tag_105\n      jumpi\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15825:15835  0xddafbaef */\n      0xddafbaef\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15819:15823  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15812:15836  mstore(0x00, 0xddafbaef) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15888:15892  0x04 */\n      0x04\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15882:15886  0x1c */\n      0x1c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15875:15893  revert(0x1c, 0x04) */\n      revert\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15748:15907  if iszero(eq(mload(returndatasize()), owner)) {... */\n    tag_105:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16008:16009  t */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15996:16006  nonceValue */\n      dup3\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15992:16010  add(nonceValue, t) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15981:15990  nonceSlot */\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":15974:16011  sstore(nonceSlot, add(nonceValue, t)) */\n      sstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16222:16229  spender */\n      dup11\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16199:16219  _ALLOWANCE_SLOT_SEED */\n      0x7f5e9f20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16194:16197  160 */\n      0xa0\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16190:16220  shl(160, _ALLOWANCE_SLOT_SEED) */\n      shl\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16187:16230  or(shl(160, _ALLOWANCE_SLOT_SEED), spender) */\n      or\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16181:16185  0x40 */\n      0x40\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16174:16231  mstore(0x40, or(shl(160, _ALLOWANCE_SLOT_SEED), spender)) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16274:16279  value */\n      dup10\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16267:16271  0x34 */\n      0x34\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16261:16265  0x2c */\n      0x2c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16251:16272  keccak256(0x2c, 0x34) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16244:16280  sstore(keccak256(0x2c, 0x34), value) */\n      sstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16394:16401  spender */\n      dup11\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16387:16392  owner */\n      dup13\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16360:16385  _APPROVAL_EVENT_SIGNATURE */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16354:16358  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16347:16351  0x60 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16344:16345  m */\n      dup9\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16340:16352  add(m, 0x60) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16335:16402  log3(add(m, 0x60), 0x20, _APPROVAL_EVENT_SIGNATURE, owner, spender) */\n      log3\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16428:16429  m */\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16422:16426  0x40 */\n      0x40\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16415:16430  mstore(0x40, m) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16492:16493  0 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16486:16490  0x60 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":16479:16494  mstore(0x60, 0) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13790:16533  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":13324:16539  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6929:7304  function allowance(address owner, address spender)... */\n    tag_66:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7041:7055  uint256 result */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7150:7157  spender */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7144:7148  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7137:7158  mstore(0x20, spender) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7184:7204  _ALLOWANCE_SLOT_SEED */\n      0x7f5e9f20\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7178:7182  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7171:7205  mstore(0x0c, _ALLOWANCE_SLOT_SEED) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7231:7236  owner */\n      dup3\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7225:7229  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7218:7237  mstore(0x00, owner) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7282:7286  0x34 */\n      0x34\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7276:7280  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7266:7287  keccak256(0x0c, 0x34) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7260:7288  sload(keccak256(0x0c, 0x34)) */\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":7250:7288  result := sload(keccak256(0x0c, 0x34)) */\n      swap1\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":6929:7304  function allowance(address owner, address spender)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":24588:24679  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_75:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":24791:24881  function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_80:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12591:12669  function _constantNameHash() internal view virtual returns (bytes32 result) {} */\n    tag_84:\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12651:12665  bytes32 result */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":12591:12669  function _constantNameHash() internal view virtual returns (bytes32 result) {} */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_110:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_111:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_112:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_145:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_145)\n    tag_147:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_113:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_114:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_150\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_110\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":818:889   */\n      tag_151\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_111\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_152\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_112\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":988:1017   */\n      tag_153\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_113\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_19:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_155\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_114\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_116:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_118:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_119:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_161\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_118\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_120:\n        /* \"#utility.yul\":1983:2007   */\n      tag_163\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_119\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_164:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_121:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_166\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_120\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_122:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_123:\n        /* \"#utility.yul\":2339:2363   */\n      tag_169\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_122\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_170:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_124:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_172\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_123\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_22:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_175\n      tag_116\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2632:2751   */\n    tag_174:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_176\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_121\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_177\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_124\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_125:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_126:\n        /* \"#utility.yul\":3196:3217   */\n      tag_180\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_125\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_25:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_182\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_126\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_127:\n        /* \"#utility.yul\":3533:3557   */\n      tag_184\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_122\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_29:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_186\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_127\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_32:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_189\n      tag_116\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3908:4027   */\n    tag_188:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_190\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_121\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_191\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_121\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_192\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_124\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_128:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_129:\n        /* \"#utility.yul\":4598:4620   */\n      tag_195\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_128\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_38:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_197\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_129\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:4930   */\n    tag_130:\n        /* \"#utility.yul\":4890:4897   */\n      0x00\n        /* \"#utility.yul\":4919:4924   */\n      dup2\n        /* \"#utility.yul\":4908:4924   */\n      swap1\n      pop\n        /* \"#utility.yul\":4853:4930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4936:5054   */\n    tag_131:\n        /* \"#utility.yul\":5023:5047   */\n      tag_200\n        /* \"#utility.yul\":5041:5046   */\n      dup2\n        /* \"#utility.yul\":5023:5047   */\n      tag_130\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":5018:5021   */\n      dup3\n        /* \"#utility.yul\":5011:5048   */\n      mstore\n        /* \"#utility.yul\":4936:5054   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5060:5282   */\n    tag_42:\n        /* \"#utility.yul\":5153:5157   */\n      0x00\n        /* \"#utility.yul\":5191:5193   */\n      0x20\n        /* \"#utility.yul\":5180:5189   */\n      dup3\n        /* \"#utility.yul\":5176:5194   */\n      add\n        /* \"#utility.yul\":5168:5194   */\n      swap1\n      pop\n        /* \"#utility.yul\":5204:5275   */\n      tag_202\n        /* \"#utility.yul\":5272:5273   */\n      0x00\n        /* \"#utility.yul\":5261:5270   */\n      dup4\n        /* \"#utility.yul\":5257:5274   */\n      add\n        /* \"#utility.yul\":5248:5254   */\n      dup5\n        /* \"#utility.yul\":5204:5275   */\n      tag_131\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":5060:5282   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5288:5617   */\n    tag_45:\n        /* \"#utility.yul\":5347:5353   */\n      0x00\n        /* \"#utility.yul\":5396:5398   */\n      0x20\n        /* \"#utility.yul\":5384:5393   */\n      dup3\n        /* \"#utility.yul\":5375:5382   */\n      dup5\n        /* \"#utility.yul\":5371:5394   */\n      sub\n        /* \"#utility.yul\":5367:5399   */\n      slt\n        /* \"#utility.yul\":5364:5483   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":5402:5481   */\n      tag_205\n      tag_116\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":5364:5483   */\n    tag_204:\n        /* \"#utility.yul\":5522:5523   */\n      0x00\n        /* \"#utility.yul\":5547:5600   */\n      tag_206\n        /* \"#utility.yul\":5592:5599   */\n      dup5\n        /* \"#utility.yul\":5583:5589   */\n      dup3\n        /* \"#utility.yul\":5572:5581   */\n      dup6\n        /* \"#utility.yul\":5568:5590   */\n      add\n        /* \"#utility.yul\":5547:5600   */\n      tag_121\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":5537:5600   */\n      swap2\n      pop\n        /* \"#utility.yul\":5493:5610   */\n      pop\n        /* \"#utility.yul\":5288:5617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5623:5741   */\n    tag_132:\n        /* \"#utility.yul\":5694:5716   */\n      tag_208\n        /* \"#utility.yul\":5710:5715   */\n      dup2\n        /* \"#utility.yul\":5694:5716   */\n      tag_128\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":5687:5692   */\n      dup2\n        /* \"#utility.yul\":5684:5717   */\n      eq\n        /* \"#utility.yul\":5674:5735   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":5731:5732   */\n      0x00\n        /* \"#utility.yul\":5728:5729   */\n      dup1\n        /* \"#utility.yul\":5721:5733   */\n      revert\n        /* \"#utility.yul\":5674:5735   */\n    tag_209:\n        /* \"#utility.yul\":5623:5741   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5747:5882   */\n    tag_133:\n        /* \"#utility.yul\":5791:5796   */\n      0x00\n        /* \"#utility.yul\":5829:5835   */\n      dup2\n        /* \"#utility.yul\":5816:5836   */\n      calldataload\n        /* \"#utility.yul\":5807:5836   */\n      swap1\n      pop\n        /* \"#utility.yul\":5845:5876   */\n      tag_211\n        /* \"#utility.yul\":5870:5875   */\n      dup2\n        /* \"#utility.yul\":5845:5876   */\n      tag_132\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":5747:5882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5888:6010   */\n    tag_134:\n        /* \"#utility.yul\":5961:5985   */\n      tag_213\n        /* \"#utility.yul\":5979:5984   */\n      dup2\n        /* \"#utility.yul\":5961:5985   */\n      tag_130\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5954:5959   */\n      dup2\n        /* \"#utility.yul\":5951:5986   */\n      eq\n        /* \"#utility.yul\":5941:6004   */\n      tag_214\n      jumpi\n        /* \"#utility.yul\":6000:6001   */\n      0x00\n        /* \"#utility.yul\":5997:5998   */\n      dup1\n        /* \"#utility.yul\":5990:6002   */\n      revert\n        /* \"#utility.yul\":5941:6004   */\n    tag_214:\n        /* \"#utility.yul\":5888:6010   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6016:6155   */\n    tag_135:\n        /* \"#utility.yul\":6062:6067   */\n      0x00\n        /* \"#utility.yul\":6100:6106   */\n      dup2\n        /* \"#utility.yul\":6087:6107   */\n      calldataload\n        /* \"#utility.yul\":6078:6107   */\n      swap1\n      pop\n        /* \"#utility.yul\":6116:6149   */\n      tag_216\n        /* \"#utility.yul\":6143:6148   */\n      dup2\n        /* \"#utility.yul\":6116:6149   */\n      tag_134\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":6016:6155   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6161:7360   */\n    tag_61:\n        /* \"#utility.yul\":6272:6278   */\n      0x00\n        /* \"#utility.yul\":6280:6286   */\n      dup1\n        /* \"#utility.yul\":6288:6294   */\n      0x00\n        /* \"#utility.yul\":6296:6302   */\n      dup1\n        /* \"#utility.yul\":6304:6310   */\n      0x00\n        /* \"#utility.yul\":6312:6318   */\n      dup1\n        /* \"#utility.yul\":6320:6326   */\n      0x00\n        /* \"#utility.yul\":6369:6372   */\n      0xe0\n        /* \"#utility.yul\":6357:6366   */\n      dup9\n        /* \"#utility.yul\":6348:6355   */\n      dup11\n        /* \"#utility.yul\":6344:6367   */\n      sub\n        /* \"#utility.yul\":6340:6373   */\n      slt\n        /* \"#utility.yul\":6337:6457   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":6376:6455   */\n      tag_219\n      tag_116\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":6337:6457   */\n    tag_218:\n        /* \"#utility.yul\":6496:6497   */\n      0x00\n        /* \"#utility.yul\":6521:6574   */\n      tag_220\n        /* \"#utility.yul\":6566:6573   */\n      dup11\n        /* \"#utility.yul\":6557:6563   */\n      dup3\n        /* \"#utility.yul\":6546:6555   */\n      dup12\n        /* \"#utility.yul\":6542:6564   */\n      add\n        /* \"#utility.yul\":6521:6574   */\n      tag_121\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":6511:6574   */\n      swap8\n      pop\n        /* \"#utility.yul\":6467:6584   */\n      pop\n        /* \"#utility.yul\":6623:6625   */\n      0x20\n        /* \"#utility.yul\":6649:6702   */\n      tag_221\n        /* \"#utility.yul\":6694:6701   */\n      dup11\n        /* \"#utility.yul\":6685:6691   */\n      dup3\n        /* \"#utility.yul\":6674:6683   */\n      dup12\n        /* \"#utility.yul\":6670:6692   */\n      add\n        /* \"#utility.yul\":6649:6702   */\n      tag_121\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":6639:6702   */\n      swap7\n      pop\n        /* \"#utility.yul\":6594:6712   */\n      pop\n        /* \"#utility.yul\":6751:6753   */\n      0x40\n        /* \"#utility.yul\":6777:6830   */\n      tag_222\n        /* \"#utility.yul\":6822:6829   */\n      dup11\n        /* \"#utility.yul\":6813:6819   */\n      dup3\n        /* \"#utility.yul\":6802:6811   */\n      dup12\n        /* \"#utility.yul\":6798:6820   */\n      add\n        /* \"#utility.yul\":6777:6830   */\n      tag_124\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6767:6830   */\n      swap6\n      pop\n        /* \"#utility.yul\":6722:6840   */\n      pop\n        /* \"#utility.yul\":6879:6881   */\n      0x60\n        /* \"#utility.yul\":6905:6958   */\n      tag_223\n        /* \"#utility.yul\":6950:6957   */\n      dup11\n        /* \"#utility.yul\":6941:6947   */\n      dup3\n        /* \"#utility.yul\":6930:6939   */\n      dup12\n        /* \"#utility.yul\":6926:6948   */\n      add\n        /* \"#utility.yul\":6905:6958   */\n      tag_124\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":6895:6958   */\n      swap5\n      pop\n        /* \"#utility.yul\":6850:6968   */\n      pop\n        /* \"#utility.yul\":7007:7010   */\n      0x80\n        /* \"#utility.yul\":7034:7085   */\n      tag_224\n        /* \"#utility.yul\":7077:7084   */\n      dup11\n        /* \"#utility.yul\":7068:7074   */\n      dup3\n        /* \"#utility.yul\":7057:7066   */\n      dup12\n        /* \"#utility.yul\":7053:7075   */\n      add\n        /* \"#utility.yul\":7034:7085   */\n      tag_133\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":7024:7085   */\n      swap4\n      pop\n        /* \"#utility.yul\":6978:7095   */\n      pop\n        /* \"#utility.yul\":7134:7137   */\n      0xa0\n        /* \"#utility.yul\":7161:7214   */\n      tag_225\n        /* \"#utility.yul\":7206:7213   */\n      dup11\n        /* \"#utility.yul\":7197:7203   */\n      dup3\n        /* \"#utility.yul\":7186:7195   */\n      dup12\n        /* \"#utility.yul\":7182:7204   */\n      add\n        /* \"#utility.yul\":7161:7214   */\n      tag_135\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":7151:7214   */\n      swap3\n      pop\n        /* \"#utility.yul\":7105:7224   */\n      pop\n        /* \"#utility.yul\":7263:7266   */\n      0xc0\n        /* \"#utility.yul\":7290:7343   */\n      tag_226\n        /* \"#utility.yul\":7335:7342   */\n      dup11\n        /* \"#utility.yul\":7326:7332   */\n      dup3\n        /* \"#utility.yul\":7315:7324   */\n      dup12\n        /* \"#utility.yul\":7311:7333   */\n      add\n        /* \"#utility.yul\":7290:7343   */\n      tag_135\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":7280:7343   */\n      swap2\n      pop\n        /* \"#utility.yul\":7234:7353   */\n      pop\n        /* \"#utility.yul\":6161:7360   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7366:7840   */\n    tag_65:\n        /* \"#utility.yul\":7434:7440   */\n      0x00\n        /* \"#utility.yul\":7442:7448   */\n      dup1\n        /* \"#utility.yul\":7491:7493   */\n      0x40\n        /* \"#utility.yul\":7479:7488   */\n      dup4\n        /* \"#utility.yul\":7470:7477   */\n      dup6\n        /* \"#utility.yul\":7466:7489   */\n      sub\n        /* \"#utility.yul\":7462:7494   */\n      slt\n        /* \"#utility.yul\":7459:7578   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":7497:7576   */\n      tag_229\n      tag_116\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":7459:7578   */\n    tag_228:\n        /* \"#utility.yul\":7617:7618   */\n      0x00\n        /* \"#utility.yul\":7642:7695   */\n      tag_230\n        /* \"#utility.yul\":7687:7694   */\n      dup6\n        /* \"#utility.yul\":7678:7684   */\n      dup3\n        /* \"#utility.yul\":7667:7676   */\n      dup7\n        /* \"#utility.yul\":7663:7685   */\n      add\n        /* \"#utility.yul\":7642:7695   */\n      tag_121\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":7632:7695   */\n      swap3\n      pop\n        /* \"#utility.yul\":7588:7705   */\n      pop\n        /* \"#utility.yul\":7744:7746   */\n      0x20\n        /* \"#utility.yul\":7770:7823   */\n      tag_231\n        /* \"#utility.yul\":7815:7822   */\n      dup6\n        /* \"#utility.yul\":7806:7812   */\n      dup3\n        /* \"#utility.yul\":7795:7804   */\n      dup7\n        /* \"#utility.yul\":7791:7813   */\n      add\n        /* \"#utility.yul\":7770:7823   */\n      tag_121\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7760:7823   */\n      swap2\n      pop\n        /* \"#utility.yul\":7715:7833   */\n      pop\n        /* \"#utility.yul\":7366:7840   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7846:7994   */\n    tag_136:\n        /* \"#utility.yul\":7948:7959   */\n      0x00\n        /* \"#utility.yul\":7985:7988   */\n      dup2\n        /* \"#utility.yul\":7970:7988   */\n      swap1\n      pop\n        /* \"#utility.yul\":7846:7994   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8000:8390   */\n    tag_137:\n        /* \"#utility.yul\":8106:8109   */\n      0x00\n        /* \"#utility.yul\":8134:8173   */\n      tag_234\n        /* \"#utility.yul\":8167:8172   */\n      dup3\n        /* \"#utility.yul\":8134:8173   */\n      tag_110\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":8189:8278   */\n      tag_235\n        /* \"#utility.yul\":8271:8277   */\n      dup2\n        /* \"#utility.yul\":8266:8269   */\n      dup6\n        /* \"#utility.yul\":8189:8278   */\n      tag_136\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":8182:8278   */\n      swap4\n      pop\n        /* \"#utility.yul\":8287:8352   */\n      tag_236\n        /* \"#utility.yul\":8345:8351   */\n      dup2\n        /* \"#utility.yul\":8340:8343   */\n      dup6\n        /* \"#utility.yul\":8333:8337   */\n      0x20\n        /* \"#utility.yul\":8326:8331   */\n      dup7\n        /* \"#utility.yul\":8322:8338   */\n      add\n        /* \"#utility.yul\":8287:8352   */\n      tag_112\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":8377:8383   */\n      dup1\n        /* \"#utility.yul\":8372:8375   */\n      dup5\n        /* \"#utility.yul\":8368:8384   */\n      add\n        /* \"#utility.yul\":8361:8384   */\n      swap2\n      pop\n        /* \"#utility.yul\":8110:8390   */\n      pop\n        /* \"#utility.yul\":8000:8390   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8396:8576   */\n    tag_138:\n        /* \"#utility.yul\":8444:8521   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8441:8442   */\n      0x00\n        /* \"#utility.yul\":8434:8522   */\n      mstore\n        /* \"#utility.yul\":8541:8545   */\n      0x22\n        /* \"#utility.yul\":8538:8539   */\n      0x04\n        /* \"#utility.yul\":8531:8546   */\n      mstore\n        /* \"#utility.yul\":8565:8569   */\n      0x24\n        /* \"#utility.yul\":8562:8563   */\n      0x00\n        /* \"#utility.yul\":8555:8570   */\n      revert\n        /* \"#utility.yul\":8582:8902   */\n    tag_91:\n        /* \"#utility.yul\":8626:8632   */\n      0x00\n        /* \"#utility.yul\":8663:8664   */\n      0x02\n        /* \"#utility.yul\":8657:8661   */\n      dup3\n        /* \"#utility.yul\":8653:8665   */\n      div\n        /* \"#utility.yul\":8643:8665   */\n      swap1\n      pop\n        /* \"#utility.yul\":8710:8711   */\n      0x01\n        /* \"#utility.yul\":8704:8708   */\n      dup3\n        /* \"#utility.yul\":8700:8712   */\n      and\n        /* \"#utility.yul\":8731:8749   */\n      dup1\n        /* \"#utility.yul\":8721:8802   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":8787:8791   */\n      0x7f\n        /* \"#utility.yul\":8779:8785   */\n      dup3\n        /* \"#utility.yul\":8775:8792   */\n      and\n        /* \"#utility.yul\":8765:8792   */\n      swap2\n      pop\n        /* \"#utility.yul\":8721:8802   */\n    tag_239:\n        /* \"#utility.yul\":8849:8851   */\n      0x20\n        /* \"#utility.yul\":8841:8847   */\n      dup3\n        /* \"#utility.yul\":8838:8852   */\n      lt\n        /* \"#utility.yul\":8818:8836   */\n      dup2\n        /* \"#utility.yul\":8815:8853   */\n      sub\n        /* \"#utility.yul\":8812:8896   */\n      tag_240\n      jumpi\n        /* \"#utility.yul\":8868:8886   */\n      tag_241\n      tag_138\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":8812:8896   */\n    tag_240:\n        /* \"#utility.yul\":8633:8902   */\n      pop\n        /* \"#utility.yul\":8582:8902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8908:9049   */\n    tag_139:\n        /* \"#utility.yul\":8957:8961   */\n      0x00\n        /* \"#utility.yul\":8980:8983   */\n      dup2\n        /* \"#utility.yul\":8972:8983   */\n      swap1\n      pop\n        /* \"#utility.yul\":9003:9006   */\n      dup2\n        /* \"#utility.yul\":9000:9001   */\n      0x00\n        /* \"#utility.yul\":8993:9007   */\n      mstore\n        /* \"#utility.yul\":9037:9041   */\n      0x20\n        /* \"#utility.yul\":9034:9035   */\n      0x00\n        /* \"#utility.yul\":9024:9042   */\n      keccak256\n        /* \"#utility.yul\":9016:9042   */\n      swap1\n      pop\n        /* \"#utility.yul\":8908:9049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9079:9953   */\n    tag_140:\n        /* \"#utility.yul\":9182:9185   */\n      0x00\n        /* \"#utility.yul\":9219:9224   */\n      dup2\n        /* \"#utility.yul\":9213:9225   */\n      sload\n        /* \"#utility.yul\":9248:9284   */\n      tag_244\n        /* \"#utility.yul\":9274:9283   */\n      dup2\n        /* \"#utility.yul\":9248:9284   */\n      tag_91\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":9300:9389   */\n      tag_245\n        /* \"#utility.yul\":9382:9388   */\n      dup2\n        /* \"#utility.yul\":9377:9380   */\n      dup7\n        /* \"#utility.yul\":9300:9389   */\n      tag_136\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":9293:9389   */\n      swap5\n      pop\n        /* \"#utility.yul\":9420:9421   */\n      0x01\n        /* \"#utility.yul\":9409:9418   */\n      dup3\n        /* \"#utility.yul\":9405:9422   */\n      and\n        /* \"#utility.yul\":9436:9437   */\n      0x00\n        /* \"#utility.yul\":9431:9597   */\n      dup2\n      eq\n      tag_247\n      jumpi\n        /* \"#utility.yul\":9611:9612   */\n      0x01\n        /* \"#utility.yul\":9606:9947   */\n      dup2\n      eq\n      tag_248\n      jumpi\n        /* \"#utility.yul\":9398:9947   */\n      jump(tag_246)\n        /* \"#utility.yul\":9431:9597   */\n    tag_247:\n        /* \"#utility.yul\":9515:9519   */\n      0xff\n        /* \"#utility.yul\":9511:9520   */\n      not\n        /* \"#utility.yul\":9500:9509   */\n      dup4\n        /* \"#utility.yul\":9496:9521   */\n      and\n        /* \"#utility.yul\":9491:9494   */\n      dup7\n        /* \"#utility.yul\":9484:9522   */\n      mstore\n        /* \"#utility.yul\":9577:9583   */\n      dup2\n        /* \"#utility.yul\":9570:9584   */\n      iszero\n        /* \"#utility.yul\":9563:9585   */\n      iszero\n        /* \"#utility.yul\":9555:9561   */\n      dup3\n        /* \"#utility.yul\":9551:9586   */\n      mul\n        /* \"#utility.yul\":9546:9549   */\n      dup7\n        /* \"#utility.yul\":9542:9587   */\n      add\n        /* \"#utility.yul\":9535:9587   */\n      swap4\n      pop\n        /* \"#utility.yul\":9431:9597   */\n      jump(tag_246)\n        /* \"#utility.yul\":9606:9947   */\n    tag_248:\n        /* \"#utility.yul\":9673:9711   */\n      tag_249\n        /* \"#utility.yul\":9705:9710   */\n      dup6\n        /* \"#utility.yul\":9673:9711   */\n      tag_139\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":9733:9734   */\n      0x00\n        /* \"#utility.yul\":9747:9901   */\n    tag_250:\n        /* \"#utility.yul\":9761:9767   */\n      dup4\n        /* \"#utility.yul\":9758:9759   */\n      dup2\n        /* \"#utility.yul\":9755:9768   */\n      lt\n        /* \"#utility.yul\":9747:9901   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":9835:9842   */\n      dup2\n        /* \"#utility.yul\":9829:9843   */\n      sload\n        /* \"#utility.yul\":9825:9826   */\n      dup2\n        /* \"#utility.yul\":9820:9823   */\n      dup10\n        /* \"#utility.yul\":9816:9827   */\n      add\n        /* \"#utility.yul\":9809:9844   */\n      mstore\n        /* \"#utility.yul\":9885:9886   */\n      0x01\n        /* \"#utility.yul\":9876:9883   */\n      dup3\n        /* \"#utility.yul\":9872:9887   */\n      add\n        /* \"#utility.yul\":9861:9887   */\n      swap2\n      pop\n        /* \"#utility.yul\":9783:9787   */\n      0x20\n        /* \"#utility.yul\":9780:9781   */\n      dup2\n        /* \"#utility.yul\":9776:9788   */\n      add\n        /* \"#utility.yul\":9771:9788   */\n      swap1\n      pop\n        /* \"#utility.yul\":9747:9901   */\n      jump(tag_250)\n    tag_252:\n        /* \"#utility.yul\":9930:9936   */\n      dup4\n        /* \"#utility.yul\":9925:9928   */\n      dup9\n        /* \"#utility.yul\":9921:9937   */\n      add\n        /* \"#utility.yul\":9914:9937   */\n      swap6\n      pop\n        /* \"#utility.yul\":9613:9947   */\n      pop\n      pop\n        /* \"#utility.yul\":9398:9947   */\n    tag_246:\n      pop\n        /* \"#utility.yul\":9186:9953   */\n      pop\n      pop\n        /* \"#utility.yul\":9079:9953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9959:10388   */\n    tag_70:\n        /* \"#utility.yul\":10136:10139   */\n      0x00\n        /* \"#utility.yul\":10158:10253   */\n      tag_254\n        /* \"#utility.yul\":10249:10252   */\n      dup3\n        /* \"#utility.yul\":10240:10246   */\n      dup6\n        /* \"#utility.yul\":10158:10253   */\n      tag_137\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":10151:10253   */\n      swap2\n      pop\n        /* \"#utility.yul\":10270:10362   */\n      tag_255\n        /* \"#utility.yul\":10358:10361   */\n      dup3\n        /* \"#utility.yul\":10349:10355   */\n      dup5\n        /* \"#utility.yul\":10270:10362   */\n      tag_140\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":10263:10362   */\n      swap2\n      pop\n        /* \"#utility.yul\":10379:10382   */\n      dup2\n        /* \"#utility.yul\":10372:10382   */\n      swap1\n      pop\n        /* \"#utility.yul\":9959:10388   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204521ebb049dbcbfa50b067da5c7177c3e375a0f79c2f7e1dda03ec1dc3abbca164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_24": {
									"entryPoint": null,
									"id": 24,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 78,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 962,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 301,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 95,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 91,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 87,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 849,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8245:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:2"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:2"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:2",
														"type": ""
													}
												],
												"src": "580:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:2",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:2"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:2"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:2"
															},
															"nodeType": "YulIf",
															"src": "1030:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:2",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:2"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:2",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:2",
														"type": ""
													}
												],
												"src": "874:281:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:2"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:2"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:2"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:2",
														"type": ""
													}
												],
												"src": "1161:129:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:2"
															},
															"nodeType": "YulIf",
															"src": "1434:56:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:2"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:2"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:2",
														"type": ""
													}
												],
												"src": "1296:308:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:2",
																"statements": []
															},
															"src": "1701:113:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:2"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:2",
														"type": ""
													}
												],
												"src": "1610:246:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:2"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:2"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:2"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:2"
															},
															"nodeType": "YulIf",
															"src": "2117:112:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:2"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:2"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:2",
														"type": ""
													}
												],
												"src": "1862:434:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:2",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:2"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:2"
															},
															"nodeType": "YulIf",
															"src": "2399:122:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:2",
														"type": ""
													}
												],
												"src": "2316:355:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2764:437:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2810:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2812:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2812:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2812:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2785:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2794:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2781:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2781:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2806:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2777:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:32:2"
															},
															"nodeType": "YulIf",
															"src": "2774:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2903:291:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2918:38:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2942:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2953:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2938:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2938:17:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2932:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2932:24:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2922:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3003:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3005:77:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3005:79:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3005:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2975:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2983:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2972:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2972:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "2969:117:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3100:84:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3156:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3167:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3152:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3152:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3176:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3110:41:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3110:74:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3100:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2734:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2745:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2757:6:2",
														"type": ""
													}
												],
												"src": "2677:524:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3266:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3277:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3293:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3287:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3287:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3277:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3249:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3259:6:2",
														"type": ""
													}
												],
												"src": "3207:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3340:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3357:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3360:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3350:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3350:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3350:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3454:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3457:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3447:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3447:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3447:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3478:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3481:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3471:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3471:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3471:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3312:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3549:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3559:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3573:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3579:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3569:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3559:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3590:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3620:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3626:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3616:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3594:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3667:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3681:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3695:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3703:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3691:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3691:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3681:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3647:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:26:2"
															},
															"nodeType": "YulIf",
															"src": "3637:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3770:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "3784:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3784:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3784:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3734:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3757:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3765:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3754:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3754:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3731:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3731:38:2"
															},
															"nodeType": "YulIf",
															"src": "3728:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3533:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3542:6:2",
														"type": ""
													}
												],
												"src": "3498:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:11:2",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "3896:3:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3888:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3916:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3919:3:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3909:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3909:14:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3909:14:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3932:26:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3950:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3953:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "3940:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3940:18:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3932:4:2"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "3865:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3873:4:2",
														"type": ""
													}
												],
												"src": "3824:141:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4015:49:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4025:33:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4043:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4050:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4039:14:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4055:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4035:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4035:23:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4025:6:2"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3998:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4008:6:2",
														"type": ""
													}
												],
												"src": "3971:93:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4123:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4133:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4158:4:2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4164:5:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4154:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4154:16:2"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4133:8:2"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4098:4:2",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4104:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4114:8:2",
														"type": ""
													}
												],
												"src": "4070:107:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4259:317:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4269:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4290:10:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4302:1:2",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4286:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4286:18:2"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4273:9:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4313:109:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4344:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4355:66:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4325:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4325:97:2"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4317:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4431:51:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4462:9:2"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4473:8:2"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4443:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4443:39:2"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4431:8:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4491:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4504:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4515:4:2"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4511:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4511:9:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4500:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:21:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4491:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4530:40:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4543:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4554:8:2"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4564:4:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4550:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4550:19:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4540:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4540:30:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4530:6:2"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4220:5:2",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4227:10:2",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4239:8:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4252:6:2",
														"type": ""
													}
												],
												"src": "4183:393:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4627:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4637:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4648:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4637:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4609:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4619:7:2",
														"type": ""
													}
												],
												"src": "4582:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4697:28:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4707:12:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4714:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4707:3:2"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4683:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4693:3:2",
														"type": ""
													}
												],
												"src": "4665:60:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4791:82:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4801:66:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4859:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4841:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4841:24:2"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "4832:8:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4832:34:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4814:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4814:53:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4801:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4771:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4781:9:2",
														"type": ""
													}
												],
												"src": "4731:142:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4926:28:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4936:12:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4943:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4936:3:2"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4912:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4922:3:2",
														"type": ""
													}
												],
												"src": "4879:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5036:193:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5046:63:2",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5101:7:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5070:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5070:39:2"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5050:16:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5125:4:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5165:4:2"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5159:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5159:11:2"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5172:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5204:16:2"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5180:23:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5180:41:2"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5131:27:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5131:91:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5118:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5118:105:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5118:105:2"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5013:4:2",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5019:6:2",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5027:7:2",
														"type": ""
													}
												],
												"src": "4960:269:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5284:24:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5294:8:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5301:1:2",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5294:3:2"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5280:3:2",
														"type": ""
													}
												],
												"src": "5235:73:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5367:136:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5377:46:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5391:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5391:32:2"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5381:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5476:4:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5482:6:2"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5490:6:2"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5432:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5432:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5432:65:2"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5353:4:2",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5359:6:2",
														"type": ""
													}
												],
												"src": "5314:189:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5559:136:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5626:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5670:5:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5677:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5640:29:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5640:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5640:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5579:5:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5586:3:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5576:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5576:14:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5591:26:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5593:22:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5606:5:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5613:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5602:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5602:13:2"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5593:5:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5573:2:2",
																"statements": []
															},
															"src": "5569:120:2"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5547:5:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5554:3:2",
														"type": ""
													}
												],
												"src": "5509:186:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5780:464:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5806:431:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5820:54:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "5868:5:2"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "5836:31:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5836:38:2"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "5824:8:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5887:63:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "5910:8:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "5938:10:2"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "5920:17:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5920:29:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5906:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5906:44:2"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "5891:11:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6107:27:2",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6109:23:2",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6124:8:2"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6109:11:2"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6091:10:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6103:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6088:2:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6088:18:2"
																		},
																		"nodeType": "YulIf",
																		"src": "6085:49:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6176:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6193:8:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6221:3:2"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6203:17:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6203:22:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6189:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6189:37:2"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6147:28:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6147:80:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6147:80:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "5797:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5802:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5794:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5794:11:2"
															},
															"nodeType": "YulIf",
															"src": "5791:446:2"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5756:5:2",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "5763:3:2",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "5768:10:2",
														"type": ""
													}
												],
												"src": "5701:543:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6313:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6323:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6348:4:2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6354:5:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6344:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6344:16:2"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6323:8:2"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6288:4:2",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6294:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6304:8:2",
														"type": ""
													}
												],
												"src": "6250:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6424:118:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6434:68:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6483:1:2",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6486:5:2"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6479:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6479:13:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6498:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6494:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6494:6:2"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6450:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6450:51:2"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6446:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6446:56:2"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6438:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6511:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6525:4:2"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6531:4:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6521:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6521:15:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6511:6:2"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6401:4:2",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6407:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6417:6:2",
														"type": ""
													}
												],
												"src": "6373:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6628:214:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6761:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6788:4:2"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6794:3:2"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "6769:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6769:29:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6761:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6807:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6818:4:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6828:1:2",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "6831:3:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6824:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6824:11:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6815:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6815:21:2"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "6807:4:2"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6609:4:2",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6615:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6623:4:2",
														"type": ""
													}
												],
												"src": "6547:295:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6939:1303:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6950:51:2",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6997:3:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6964:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6964:37:2"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "6954:6:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7086:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7088:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7088:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7088:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7058:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7066:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7055:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7055:30:2"
															},
															"nodeType": "YulIf",
															"src": "7052:56:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7118:52:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7164:4:2"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7158:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7158:11:2"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7132:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7132:38:2"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7122:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7263:4:2"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7269:6:2"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7277:6:2"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7217:45:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7217:67:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7217:67:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7294:18:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7311:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7298:9:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7322:17:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7335:4:2",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7322:9:2"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7386:611:2",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7400:37:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7419:6:2"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7431:4:2",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7427:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7427:9:2"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7415:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7415:22:2"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7404:7:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7451:51:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7497:4:2"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7465:31:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7465:37:2"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7455:6:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7515:10:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7524:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7519:1:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7583:163:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7608:6:2"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7626:3:2"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7631:9:2"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7622:3:2"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7622:19:2"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7616:5:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7616:26:2"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7601:6:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7601:42:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7601:42:2"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7660:24:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7674:6:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7682:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7670:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7670:14:2"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7660:6:2"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7701:31:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "7718:9:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7729:2:2",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7714:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7714:18:2"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "7701:9:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7549:1:2"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7552:7:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7546:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7546:14:2"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7561:21:2",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7563:17:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7572:1:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7575:4:2",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7568:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7568:12:2"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7563:1:2"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7542:3:2",
																					"statements": []
																				},
																				"src": "7538:208:2"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7782:156:2",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "7800:43:2",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "7827:3:2"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "7832:9:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "7823:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7823:19:2"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "7817:5:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7817:26:2"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "7804:9:2",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7867:6:2"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "7894:9:2"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "7909:6:2"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "7917:4:2",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "7905:3:2"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7905:17:2"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "7875:18:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7875:48:2"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7860:6:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7860:64:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7860:64:2"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7765:7:2"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7774:6:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7762:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7762:19:2"
																				},
																				"nodeType": "YulIf",
																				"src": "7759:179:2"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7958:4:2"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "7972:6:2"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "7980:1:2",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "7968:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7968:14:2"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7984:1:2",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7964:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7964:22:2"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "7951:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7951:36:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7951:36:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7379:618:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7384:1:2",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8014:222:2",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8028:14:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8041:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8032:5:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8065:67:2",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8083:35:2",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8102:3:2"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8107:9:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8098:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8098:19:2"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8092:5:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8092:26:2"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8083:5:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8058:6:2"
																				},
																				"nodeType": "YulIf",
																				"src": "8055:77:2"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8152:4:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8211:5:2"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8218:6:2"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8158:52:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8158:67:2"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8145:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8145:81:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8145:81:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8006:230:2",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7359:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7367:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7356:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7356:14:2"
															},
															"nodeType": "YulSwitch",
															"src": "7349:887:2"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "6928:4:2",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6934:3:2",
														"type": ""
													}
												],
												"src": "6847:1395:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001277380380620012778339818101604052810190620000369190620001d3565b805f908162000046919062000459565b50506200053d565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620000af8262000067565b810181811067ffffffffffffffff82111715620000d157620000d062000077565b5b80604052505050565b5f620000e56200004e565b9050620000f38282620000a4565b919050565b5f67ffffffffffffffff82111562000115576200011462000077565b5b620001208262000067565b9050602081019050919050565b5f5b838110156200014c5780820151818401526020810190506200012f565b5f8484015250505050565b5f6200016d6200016784620000f8565b620000da565b9050828152602081018484840111156200018c576200018b62000063565b5b620001998482856200012d565b509392505050565b5f82601f830112620001b857620001b76200005f565b5b8151620001ca84826020860162000157565b91505092915050565b5f60208284031215620001eb57620001ea62000057565b5b5f82015167ffffffffffffffff8111156200020b576200020a6200005b565b5b6200021984828501620001a1565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200027157607f821691505b6020821081036200028757620002866200022c565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620002eb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002ae565b620002f78683620002ae565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620003416200033b62000335846200030f565b62000318565b6200030f565b9050919050565b5f819050919050565b6200035c8362000321565b620003746200036b8262000348565b848454620002ba565b825550505050565b5f90565b6200038a6200037c565b6200039781848462000351565b505050565b5b81811015620003be57620003b25f8262000380565b6001810190506200039d565b5050565b601f8211156200040d57620003d7816200028d565b620003e2846200029f565b81016020851015620003f2578190505b6200040a62000401856200029f565b8301826200039c565b50505b505050565b5f82821c905092915050565b5f6200042f5f198460080262000412565b1980831691505092915050565b5f6200044983836200041e565b9150826002028217905092915050565b620004648262000222565b67ffffffffffffffff81111562000480576200047f62000077565b5b6200048c825462000259565b62000499828285620003c2565b5f60209050601f831160018114620004cf575f8415620004ba578287015190505b620004c685826200043c565b86555062000535565b601f198416620004df866200028d565b5f5b828110156200050857848901518255600182019150602085019450602081019050620004e1565b8683101562000528578489015162000524601f8916826200041e565b8355505b6001600288020188555050505b505050505050565b610d2c806200054b5f395ff3fe608060405234801561000f575f80fd5b50600436106100b2575f3560e01c806370a082311161006f57806370a082311461018e5780637ecebe00146101be57806395d89b41146101ee578063a9059cbb1461020c578063d505accf1461023c578063dd62ed3e14610258576100b2565b806306fdde03146100b6578063095ea7b3146100d457806318160ddd1461010457806323b872dd14610122578063313ce567146101525780633644e51514610170575b5f80fd5b6100be610288565b6040516100cb9190610851565b60405180910390f35b6100ee60048036038101906100e99190610902565b6102e6565b6040516100fb919061095a565b60405180910390f35b61010c610336565b6040516101199190610982565b60405180910390f35b61013c6004803603810190610137919061099b565b610347565b604051610149919061095a565b60405180910390f35b61015a610418565b6040516101679190610a06565b60405180910390f35b610178610420565b6040516101859190610a37565b60405180910390f35b6101a860048036038101906101a39190610a50565b6104b0565b6040516101b59190610982565b60405180910390f35b6101d860048036038101906101d39190610a50565b6104c9565b6040516101e59190610982565b60405180910390f35b6101f66104e2565b6040516102039190610851565b60405180910390f35b61022660048036038101906102219190610902565b610571565b604051610233919061095a565b60405180910390f35b61025660048036038101906102519190610acf565b6105ff565b005b610272600480360381019061026d9190610b6c565b61079b565b60405161027f9190610982565b60405180910390f35b60606040518060400160405280600581526020017f4d494e492d0000000000000000000000000000000000000000000000000000008152505f6040516020016102d2929190610cd3565b604051602081830303815290604052905090565b5f82602052637f5e9f20600c52335f52816034600c2055815f52602c5160601c337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560205fa36001905092915050565b5f6805345cdf77eb68f44c54905090565b5f6103538484846107b9565b8360601b33602052637f5e9f208117600c526034600c2080546001810115610390578085111561038a576313be252b5f526004601cfd5b84810382555b6387a211a28317600c526020600c208054808711156103b65763f4d678b85f526004601cfd5b8681038255875f526020600c2087815401815587602052600c5160601c8660601c7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602080a350505050505061040d8484846107be565b600190509392505050565b5f6012905090565b5f8061042a6107c3565b90505f801b81036104475761043d610288565b8051906020012090505b6040517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81528160208201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6604082015246606082015230608082015260a081209250505090565b5f6387a211a2600c52815f526020600c20549050919050565b5f6338377508600c52815f526020600c20549050919050565b60605f80546104f090610c11565b80601f016020809104026020016040519081016040528092919081815260200182805461051c90610c11565b80156105675780601f1061053e57610100808354040283529160200191610567565b820191905f5260205f20905b81548152906001019060200180831161054a57829003601f168201915b5050505050905090565b5f61057d3384846107b9565b6387a211a2600c52335f526020600c208054808411156105a45763f4d678b85f526004601cfd5b8381038255845f526020600c2084815401815584602052600c5160601c337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602080a35050506105f53384846107be565b6001905092915050565b5f6106086107c3565b90505f801b81036106255761061b610288565b8051906020012090505b8442111561063a57631a15a3cc5f526004601cfd5b6040518860601b60601c98508760601b60601c975065383775081901600e52885f526020600c2080547f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f83528360208401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6604084015246606084015230608084015260a08320602e527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c983528a60208401528960408401528860608401528060808401528760a084015260c08320604e526042602c205f528660ff16602052856040528460605260208060805f60015afa8b3d51146107425763ddafbaef5f526004601cfd5b80820183558a637f5e9f2060a01b17604052896034602c20558a8c7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925602060608801a3836040525f606052505050505050505050505050565b5f81602052637f5e9f20600c52825f526034600c2054905092915050565b505050565b505050565b5f90565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156107fe5780820151818401526020810190506107e3565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610823826107c7565b61082d81856107d1565b935061083d8185602086016107e1565b61084681610809565b840191505092915050565b5f6020820190508181035f8301526108698184610819565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61089e82610875565b9050919050565b6108ae81610894565b81146108b8575f80fd5b50565b5f813590506108c9816108a5565b92915050565b5f819050919050565b6108e1816108cf565b81146108eb575f80fd5b50565b5f813590506108fc816108d8565b92915050565b5f806040838503121561091857610917610871565b5b5f610925858286016108bb565b9250506020610936858286016108ee565b9150509250929050565b5f8115159050919050565b61095481610940565b82525050565b5f60208201905061096d5f83018461094b565b92915050565b61097c816108cf565b82525050565b5f6020820190506109955f830184610973565b92915050565b5f805f606084860312156109b2576109b1610871565b5b5f6109bf868287016108bb565b93505060206109d0868287016108bb565b92505060406109e1868287016108ee565b9150509250925092565b5f60ff82169050919050565b610a00816109eb565b82525050565b5f602082019050610a195f8301846109f7565b92915050565b5f819050919050565b610a3181610a1f565b82525050565b5f602082019050610a4a5f830184610a28565b92915050565b5f60208284031215610a6557610a64610871565b5b5f610a72848285016108bb565b91505092915050565b610a84816109eb565b8114610a8e575f80fd5b50565b5f81359050610a9f81610a7b565b92915050565b610aae81610a1f565b8114610ab8575f80fd5b50565b5f81359050610ac981610aa5565b92915050565b5f805f805f805f60e0888a031215610aea57610ae9610871565b5b5f610af78a828b016108bb565b9750506020610b088a828b016108bb565b9650506040610b198a828b016108ee565b9550506060610b2a8a828b016108ee565b9450506080610b3b8a828b01610a91565b93505060a0610b4c8a828b01610abb565b92505060c0610b5d8a828b01610abb565b91505092959891949750929550565b5f8060408385031215610b8257610b81610871565b5b5f610b8f858286016108bb565b9250506020610ba0858286016108bb565b9150509250929050565b5f81905092915050565b5f610bbe826107c7565b610bc88185610baa565b9350610bd88185602086016107e1565b80840191505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610c2857607f821691505b602082108103610c3b57610c3a610be4565b5b50919050565b5f819050815f5260205f209050919050565b5f8154610c5f81610c11565b610c698186610baa565b9450600182165f8114610c835760018114610c9857610cca565b60ff1983168652811515820286019350610cca565b610ca185610c41565b5f5b83811015610cc257815481890152600182019150602081019050610ca3565b838801955050505b50505092915050565b5f610cde8285610bb4565b9150610cea8284610c53565b9150819050939250505056fea26469706673582212204521ebb049dbcbfa50b067da5c7177c3e375a0f79c2f7e1dda03ec1dc3abbca164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1277 CODESIZE SUB DUP1 PUSH3 0x1277 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x1D3 JUMP JUMPDEST DUP1 PUSH0 SWAP1 DUP2 PUSH3 0x46 SWAP2 SWAP1 PUSH3 0x459 JUMP JUMPDEST POP POP PUSH3 0x53D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0xAF DUP3 PUSH3 0x67 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xD1 JUMPI PUSH3 0xD0 PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xE5 PUSH3 0x4E JUMP JUMPDEST SWAP1 POP PUSH3 0xF3 DUP3 DUP3 PUSH3 0xA4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH3 0x114 PUSH3 0x77 JUMP JUMPDEST JUMPDEST PUSH3 0x120 DUP3 PUSH3 0x67 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x14C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x12F JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x16D PUSH3 0x167 DUP5 PUSH3 0xF8 JUMP JUMPDEST PUSH3 0xDA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x18C JUMPI PUSH3 0x18B PUSH3 0x63 JUMP JUMPDEST JUMPDEST PUSH3 0x199 DUP5 DUP3 DUP6 PUSH3 0x12D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1B8 JUMPI PUSH3 0x1B7 PUSH3 0x5F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1CA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x157 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1EB JUMPI PUSH3 0x1EA PUSH3 0x57 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x20B JUMPI PUSH3 0x20A PUSH3 0x5B JUMP JUMPDEST JUMPDEST PUSH3 0x219 DUP5 DUP3 DUP6 ADD PUSH3 0x1A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x271 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x287 JUMPI PUSH3 0x286 PUSH3 0x22C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x2EB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2AE JUMP JUMPDEST PUSH3 0x2F7 DUP7 DUP4 PUSH3 0x2AE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x341 PUSH3 0x33B PUSH3 0x335 DUP5 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x318 JUMP JUMPDEST PUSH3 0x30F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x35C DUP4 PUSH3 0x321 JUMP JUMPDEST PUSH3 0x374 PUSH3 0x36B DUP3 PUSH3 0x348 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2BA JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x38A PUSH3 0x37C JUMP JUMPDEST PUSH3 0x397 DUP2 DUP5 DUP5 PUSH3 0x351 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3BE JUMPI PUSH3 0x3B2 PUSH0 DUP3 PUSH3 0x380 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x39D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x40D JUMPI PUSH3 0x3D7 DUP2 PUSH3 0x28D JUMP JUMPDEST PUSH3 0x3E2 DUP5 PUSH3 0x29F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x3F2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x40A PUSH3 0x401 DUP6 PUSH3 0x29F JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x39C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x42F PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x412 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x449 DUP4 DUP4 PUSH3 0x41E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x464 DUP3 PUSH3 0x222 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x480 JUMPI PUSH3 0x47F PUSH3 0x77 JUMP JUMPDEST JUMPDEST PUSH3 0x48C DUP3 SLOAD PUSH3 0x259 JUMP JUMPDEST PUSH3 0x499 DUP3 DUP3 DUP6 PUSH3 0x3C2 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4CF JUMPI PUSH0 DUP5 ISZERO PUSH3 0x4BA JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x4C6 DUP6 DUP3 PUSH3 0x43C JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x535 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x4DF DUP7 PUSH3 0x28D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x508 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4E1 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x528 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x524 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x41E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD2C DUP1 PUSH3 0x54B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x258 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x288 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x902 JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x95A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x336 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x99B JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x95A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x418 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xA06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xA37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x902 JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x95A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0xACF JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D494E492D000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2D2 SWAP3 SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 PUSH1 0xC MSTORE CALLER PUSH0 MSTORE DUP2 PUSH1 0x34 PUSH1 0xC KECCAK256 SSTORE DUP2 PUSH0 MSTORE PUSH1 0x2C MLOAD PUSH1 0x60 SHR CALLER PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 PUSH0 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH9 0x5345CDF77EB68F44C SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x353 DUP5 DUP5 DUP5 PUSH2 0x7B9 JUMP JUMPDEST DUP4 PUSH1 0x60 SHL CALLER PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 DUP2 OR PUSH1 0xC MSTORE PUSH1 0x34 PUSH1 0xC KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD ISZERO PUSH2 0x390 JUMPI DUP1 DUP6 GT ISZERO PUSH2 0x38A JUMPI PUSH4 0x13BE252B PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP5 DUP2 SUB DUP3 SSTORE JUMPDEST PUSH4 0x87A211A2 DUP4 OR PUSH1 0xC MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP1 DUP8 GT ISZERO PUSH2 0x3B6 JUMPI PUSH4 0xF4D678B8 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP7 DUP2 SUB DUP3 SSTORE DUP8 PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP8 DUP2 SLOAD ADD DUP2 SSTORE DUP8 PUSH1 0x20 MSTORE PUSH1 0xC MLOAD PUSH1 0x60 SHR DUP7 PUSH1 0x60 SHR PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP1 LOG3 POP POP POP POP POP POP PUSH2 0x40D DUP5 DUP5 DUP5 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x42A PUSH2 0x7C3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 SHL DUP2 SUB PUSH2 0x447 JUMPI PUSH2 0x43D PUSH2 0x288 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x40 DUP3 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 KECCAK256 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH4 0x87A211A2 PUSH1 0xC MSTORE DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH4 0x38377508 PUSH1 0xC MSTORE DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x4F0 SWAP1 PUSH2 0xC11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x51C SWAP1 PUSH2 0xC11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x567 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x53E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x567 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x54A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x57D CALLER DUP5 DUP5 PUSH2 0x7B9 JUMP JUMPDEST PUSH4 0x87A211A2 PUSH1 0xC MSTORE CALLER PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP1 DUP5 GT ISZERO PUSH2 0x5A4 JUMPI PUSH4 0xF4D678B8 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP4 DUP2 SUB DUP3 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP5 DUP2 SLOAD ADD DUP2 SSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0xC MLOAD PUSH1 0x60 SHR CALLER PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP1 LOG3 POP POP POP PUSH2 0x5F5 CALLER DUP5 DUP5 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x608 PUSH2 0x7C3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 SHL DUP2 SUB PUSH2 0x625 JUMPI PUSH2 0x61B PUSH2 0x288 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP JUMPDEST DUP5 TIMESTAMP GT ISZERO PUSH2 0x63A JUMPI PUSH4 0x1A15A3CC PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST PUSH1 0x40 MLOAD DUP9 PUSH1 0x60 SHL PUSH1 0x60 SHR SWAP9 POP DUP8 PUSH1 0x60 SHL PUSH1 0x60 SHR SWAP8 POP PUSH6 0x383775081901 PUSH1 0xE MSTORE DUP9 PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP4 MSTORE DUP4 PUSH1 0x20 DUP5 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x40 DUP5 ADD MSTORE CHAINID PUSH1 0x60 DUP5 ADD MSTORE ADDRESS PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 KECCAK256 PUSH1 0x2E MSTORE PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP4 MSTORE DUP11 PUSH1 0x20 DUP5 ADD MSTORE DUP10 PUSH1 0x40 DUP5 ADD MSTORE DUP9 PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP5 ADD MSTORE DUP8 PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 KECCAK256 PUSH1 0x4E MSTORE PUSH1 0x42 PUSH1 0x2C KECCAK256 PUSH0 MSTORE DUP7 PUSH1 0xFF AND PUSH1 0x20 MSTORE DUP6 PUSH1 0x40 MSTORE DUP5 PUSH1 0x60 MSTORE PUSH1 0x20 DUP1 PUSH1 0x80 PUSH0 PUSH1 0x1 GAS STATICCALL DUP12 RETURNDATASIZE MLOAD EQ PUSH2 0x742 JUMPI PUSH4 0xDDAFBAEF PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP1 DUP3 ADD DUP4 SSTORE DUP11 PUSH4 0x7F5E9F20 PUSH1 0xA0 SHL OR PUSH1 0x40 MSTORE DUP10 PUSH1 0x34 PUSH1 0x2C KECCAK256 SSTORE DUP11 DUP13 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 PUSH1 0x60 DUP9 ADD LOG3 DUP4 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x60 MSTORE POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 PUSH1 0xC MSTORE DUP3 PUSH0 MSTORE PUSH1 0x34 PUSH1 0xC KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7FE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7E3 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x823 DUP3 PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x82D DUP2 DUP6 PUSH2 0x7D1 JUMP JUMPDEST SWAP4 POP PUSH2 0x83D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x846 DUP2 PUSH2 0x809 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x869 DUP2 DUP5 PUSH2 0x819 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x89E DUP3 PUSH2 0x875 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AE DUP2 PUSH2 0x894 JUMP JUMPDEST DUP2 EQ PUSH2 0x8B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8C9 DUP2 PUSH2 0x8A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8E1 DUP2 PUSH2 0x8CF JUMP JUMPDEST DUP2 EQ PUSH2 0x8EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8FC DUP2 PUSH2 0x8D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x918 JUMPI PUSH2 0x917 PUSH2 0x871 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x925 DUP6 DUP3 DUP7 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x936 DUP6 DUP3 DUP7 ADD PUSH2 0x8EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x954 DUP2 PUSH2 0x940 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x96D PUSH0 DUP4 ADD DUP5 PUSH2 0x94B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x97C DUP2 PUSH2 0x8CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x995 PUSH0 DUP4 ADD DUP5 PUSH2 0x973 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9B2 JUMPI PUSH2 0x9B1 PUSH2 0x871 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9BF DUP7 DUP3 DUP8 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x9D0 DUP7 DUP3 DUP8 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x9E1 DUP7 DUP3 DUP8 ADD PUSH2 0x8EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA00 DUP2 PUSH2 0x9EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA19 PUSH0 DUP4 ADD DUP5 PUSH2 0x9F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA31 DUP2 PUSH2 0xA1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA4A PUSH0 DUP4 ADD DUP5 PUSH2 0xA28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA65 JUMPI PUSH2 0xA64 PUSH2 0x871 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA72 DUP5 DUP3 DUP6 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA84 DUP2 PUSH2 0x9EB JUMP JUMPDEST DUP2 EQ PUSH2 0xA8E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA9F DUP2 PUSH2 0xA7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAAE DUP2 PUSH2 0xA1F JUMP JUMPDEST DUP2 EQ PUSH2 0xAB8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAC9 DUP2 PUSH2 0xAA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xAEA JUMPI PUSH2 0xAE9 PUSH2 0x871 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAF7 DUP11 DUP3 DUP12 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0xB08 DUP11 DUP3 DUP12 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0xB19 DUP11 DUP3 DUP12 ADD PUSH2 0x8EE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0xB2A DUP11 DUP3 DUP12 ADD PUSH2 0x8EE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0xB3B DUP11 DUP3 DUP12 ADD PUSH2 0xA91 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0xB4C DUP11 DUP3 DUP12 ADD PUSH2 0xABB JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0xB5D DUP11 DUP3 DUP12 ADD PUSH2 0xABB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB82 JUMPI PUSH2 0xB81 PUSH2 0x871 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB8F DUP6 DUP3 DUP7 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBA0 DUP6 DUP3 DUP7 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBBE DUP3 PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0xBC8 DUP2 DUP6 PUSH2 0xBAA JUMP JUMPDEST SWAP4 POP PUSH2 0xBD8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7E1 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xC28 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC3B JUMPI PUSH2 0xC3A PUSH2 0xBE4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0xC5F DUP2 PUSH2 0xC11 JUMP JUMPDEST PUSH2 0xC69 DUP2 DUP7 PUSH2 0xBAA JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0xC83 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xC98 JUMPI PUSH2 0xCCA JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0xCCA JUMP JUMPDEST PUSH2 0xCA1 DUP6 PUSH2 0xC41 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCC2 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCA3 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCDE DUP3 DUP6 PUSH2 0xBB4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCEA DUP3 DUP5 PUSH2 0xC53 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0x21 0xEB 0xB0 0x49 0xDB 0xCB STATICCALL POP 0xB0 PUSH8 0xDA5C7177C3E375A0 0xF7 SWAP13 0x2F PUSH31 0x1DDA03EC1DC3ABBCA164736F6C634300081400330000000000000000000000 ",
							"sourceMap": "177:432:0:-:0;;;318:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;370:5;361:6;:14;;;;;;:::i;:::-;;318:65;177:432;;7:75:2;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:524::-;2757:6;2806:2;2794:9;2785:7;2781:23;2777:32;2774:119;;;2812:79;;:::i;:::-;2774:119;2953:1;2942:9;2938:17;2932:24;2983:18;2975:6;2972:30;2969:117;;;3005:79;;:::i;:::-;2969:117;3110:74;3176:7;3167:6;3156:9;3152:22;3110:74;:::i;:::-;3100:84;;2903:291;2677:524;;;;:::o;3207:99::-;3259:6;3293:5;3287:12;3277:22;;3207:99;;;:::o;3312:180::-;3360:77;3357:1;3350:88;3457:4;3454:1;3447:15;3481:4;3478:1;3471:15;3498:320;3542:6;3579:1;3573:4;3569:12;3559:22;;3626:1;3620:4;3616:12;3647:18;3637:81;;3703:4;3695:6;3691:17;3681:27;;3637:81;3765:2;3757:6;3754:14;3734:18;3731:38;3728:84;;3784:18;;:::i;:::-;3728:84;3549:269;3498:320;;;:::o;3824:141::-;3873:4;3896:3;3888:11;;3919:3;3916:1;3909:14;3953:4;3950:1;3940:18;3932:26;;3824:141;;;:::o;3971:93::-;4008:6;4055:2;4050;4043:5;4039:14;4035:23;4025:33;;3971:93;;;:::o;4070:107::-;4114:8;4164:5;4158:4;4154:16;4133:37;;4070:107;;;;:::o;4183:393::-;4252:6;4302:1;4290:10;4286:18;4325:97;4355:66;4344:9;4325:97;:::i;:::-;4443:39;4473:8;4462:9;4443:39;:::i;:::-;4431:51;;4515:4;4511:9;4504:5;4500:21;4491:30;;4564:4;4554:8;4550:19;4543:5;4540:30;4530:40;;4259:317;;4183:393;;;;;:::o;4582:77::-;4619:7;4648:5;4637:16;;4582:77;;;:::o;4665:60::-;4693:3;4714:5;4707:12;;4665:60;;;:::o;4731:142::-;4781:9;4814:53;4832:34;4841:24;4859:5;4841:24;:::i;:::-;4832:34;:::i;:::-;4814:53;:::i;:::-;4801:66;;4731:142;;;:::o;4879:75::-;4922:3;4943:5;4936:12;;4879:75;;;:::o;4960:269::-;5070:39;5101:7;5070:39;:::i;:::-;5131:91;5180:41;5204:16;5180:41;:::i;:::-;5172:6;5165:4;5159:11;5131:91;:::i;:::-;5125:4;5118:105;5036:193;4960:269;;;:::o;5235:73::-;5280:3;5235:73;:::o;5314:189::-;5391:32;;:::i;:::-;5432:65;5490:6;5482;5476:4;5432:65;:::i;:::-;5367:136;5314:189;;:::o;5509:186::-;5569:120;5586:3;5579:5;5576:14;5569:120;;;5640:39;5677:1;5670:5;5640:39;:::i;:::-;5613:1;5606:5;5602:13;5593:22;;5569:120;;;5509:186;;:::o;5701:543::-;5802:2;5797:3;5794:11;5791:446;;;5836:38;5868:5;5836:38;:::i;:::-;5920:29;5938:10;5920:29;:::i;:::-;5910:8;5906:44;6103:2;6091:10;6088:18;6085:49;;;6124:8;6109:23;;6085:49;6147:80;6203:22;6221:3;6203:22;:::i;:::-;6193:8;6189:37;6176:11;6147:80;:::i;:::-;5806:431;;5791:446;5701:543;;;:::o;6250:117::-;6304:8;6354:5;6348:4;6344:16;6323:37;;6250:117;;;;:::o;6373:169::-;6417:6;6450:51;6498:1;6494:6;6486:5;6483:1;6479:13;6450:51;:::i;:::-;6446:56;6531:4;6525;6521:15;6511:25;;6424:118;6373:169;;;;:::o;6547:295::-;6623:4;6769:29;6794:3;6788:4;6769:29;:::i;:::-;6761:37;;6831:3;6828:1;6824:11;6818:4;6815:21;6807:29;;6547:295;;;;:::o;6847:1395::-;6964:37;6997:3;6964:37;:::i;:::-;7066:18;7058:6;7055:30;7052:56;;;7088:18;;:::i;:::-;7052:56;7132:38;7164:4;7158:11;7132:38;:::i;:::-;7217:67;7277:6;7269;7263:4;7217:67;:::i;:::-;7311:1;7335:4;7322:17;;7367:2;7359:6;7356:14;7384:1;7379:618;;;;8041:1;8058:6;8055:77;;;8107:9;8102:3;8098:19;8092:26;8083:35;;8055:77;8158:67;8218:6;8211:5;8158:67;:::i;:::-;8152:4;8145:81;8014:222;7349:887;;7379:618;7431:4;7427:9;7419:6;7415:22;7465:37;7497:4;7465:37;:::i;:::-;7524:1;7538:208;7552:7;7549:1;7546:14;7538:208;;;7631:9;7626:3;7622:19;7616:26;7608:6;7601:42;7682:1;7674:6;7670:14;7660:24;;7729:2;7718:9;7714:18;7701:31;;7575:4;7572:1;7568:12;7563:17;;7538:208;;;7774:6;7765:7;7762:19;7759:179;;;7832:9;7827:3;7823:19;7817:26;7875:48;7917:4;7909:6;7905:17;7894:9;7875:48;:::i;:::-;7867:6;7860:64;7782:156;7759:179;7984:1;7980;7972:6;7968:14;7964:22;7958:4;7951:36;7386:611;;;7349:887;;6939:1303;;;6847:1395;;:::o;177:432:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_340": {
									"entryPoint": 1056,
									"id": 340,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_afterTokenTransfer_466": {
									"entryPoint": 1982,
									"id": 466,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_455": {
									"entryPoint": 1977,
									"id": 455,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_constantNameHash_258": {
									"entryPoint": 1987,
									"id": 258,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@allowance_181": {
									"entryPoint": 1947,
									"id": 181,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_195": {
									"entryPoint": 742,
									"id": 195,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_169": {
									"entryPoint": 1200,
									"id": 169,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_151": {
									"entryPoint": 1048,
									"id": 151,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_38": {
									"entryPoint": 648,
									"id": 38,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_268": {
									"entryPoint": 1225,
									"id": 268,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@permit_310": {
									"entryPoint": 1535,
									"id": 310,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@symbol_47": {
									"entryPoint": 1250,
									"id": 47,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_159": {
									"entryPoint": 822,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_251": {
									"entryPoint": 839,
									"id": 251,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_223": {
									"entryPoint": 1393,
									"id": 223,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 2747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 2705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 2767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 2551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3283,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 2615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 2566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 3137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2017,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 3044,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2161,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 2725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 2683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10391:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:2",
														"type": ""
													}
												],
												"src": "7:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:2",
														"type": ""
													}
												],
												"src": "112:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:2",
																"statements": []
															},
															"src": "378:113:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:2"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:2",
														"type": ""
													}
												],
												"src": "287:246:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:2",
														"type": ""
													}
												],
												"src": "539:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:2",
														"type": ""
													}
												],
												"src": "647:377:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:2",
														"type": ""
													}
												],
												"src": "1030:313:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:2",
														"type": ""
													}
												],
												"src": "1349:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:2",
														"type": ""
													}
												],
												"src": "1676:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:2",
														"type": ""
													}
												],
												"src": "1808:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:2"
															},
															"nodeType": "YulIf",
															"src": "1963:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:2",
														"type": ""
													}
												],
												"src": "1910:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:2",
														"type": ""
													}
												],
												"src": "2038:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:2",
														"type": ""
													}
												],
												"src": "2183:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:2"
															},
															"nodeType": "YulIf",
															"src": "2319:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:2",
														"type": ""
													}
												],
												"src": "2266:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:2",
														"type": ""
													}
												],
												"src": "2394:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:2"
															},
															"nodeType": "YulIf",
															"src": "2632:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:2",
														"type": ""
													}
												],
												"src": "2539:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:2",
														"type": ""
													}
												],
												"src": "3019:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:2",
														"type": ""
													}
												],
												"src": "3115:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:2",
														"type": ""
													}
												],
												"src": "3230:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:2",
														"type": ""
													}
												],
												"src": "3446:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:2",
														"type": ""
													}
												],
												"src": "3570:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:2"
															},
															"nodeType": "YulIf",
															"src": "3908:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:2",
														"type": ""
													}
												],
												"src": "3798:619:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:2",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:2",
														"type": ""
													}
												],
												"src": "4423:86:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:2"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:2",
														"type": ""
													}
												],
												"src": "4515:112:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:2",
														"type": ""
													}
												],
												"src": "4633:214:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4898:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4908:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4919:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4908:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4880:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4890:7:2",
														"type": ""
													}
												],
												"src": "4853:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5001:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5018:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5041:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5023:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5023:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5011:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5011:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5011:37:2"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4989:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4996:3:2",
														"type": ""
													}
												],
												"src": "4936:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5158:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5168:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5180:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5191:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5176:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5176:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5168:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5248:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5261:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5272:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5257:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5257:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5204:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5204:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5204:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5130:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5142:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5153:4:2",
														"type": ""
													}
												],
												"src": "5060:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5354:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5400:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5402:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5402:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5402:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5375:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5384:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5371:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5371:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5396:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5367:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:32:2"
															},
															"nodeType": "YulIf",
															"src": "5364:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "5493:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5508:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5522:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5512:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5537:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5572:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5583:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5568:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5568:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5592:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5547:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5547:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5537:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5324:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5335:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5347:6:2",
														"type": ""
													}
												],
												"src": "5288:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5664:77:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5719:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5728:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5731:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5721:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5721:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5721:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5687:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5710:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "5694:15:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5694:22:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5684:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5684:33:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5677:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5677:41:2"
															},
															"nodeType": "YulIf",
															"src": "5674:61:2"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5657:5:2",
														"type": ""
													}
												],
												"src": "5623:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5797:85:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5807:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5829:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5816:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5816:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5807:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5870:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "5845:24:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5845:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5845:31:2"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5775:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5783:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5791:5:2",
														"type": ""
													}
												],
												"src": "5747:135:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5931:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5988:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5997:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6000:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5990:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5990:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5990:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5954:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5979:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "5961:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5961:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5951:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5951:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5944:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5944:43:2"
															},
															"nodeType": "YulIf",
															"src": "5941:63:2"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5924:5:2",
														"type": ""
													}
												],
												"src": "5888:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6068:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6078:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6100:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6087:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6087:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6078:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6143:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "6116:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6116:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6116:33:2"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6046:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6054:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6062:5:2",
														"type": ""
													}
												],
												"src": "6016:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6327:1033:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6374:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6376:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6376:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6376:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6348:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6357:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6344:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6344:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6369:3:2",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6340:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6340:33:2"
															},
															"nodeType": "YulIf",
															"src": "6337:120:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "6467:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6482:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6496:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6486:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6511:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6546:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6557:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6542:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6542:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6566:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6521:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6521:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6511:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6594:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6609:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6623:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6613:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6639:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6674:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6685:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6670:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6670:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6694:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6649:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6649:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6639:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6722:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6737:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6751:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6741:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6767:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6802:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6813:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6798:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6798:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6822:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6777:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6777:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6767:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6850:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6865:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6879:2:2",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6869:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6895:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6930:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6941:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6926:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6926:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6950:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6905:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6905:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "6895:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6978:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6993:17:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7007:3:2",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6997:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7024:61:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7057:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7068:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7053:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7053:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7077:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "7034:18:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7034:51:2"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "7024:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7105:119:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7120:17:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7134:3:2",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7124:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7151:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7186:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7197:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7182:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7182:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7206:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "7161:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7161:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "7151:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7234:119:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7249:17:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7263:3:2",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7253:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7280:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7315:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7326:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7311:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7311:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7335:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "7290:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7290:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "7280:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6249:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6260:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6272:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6280:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6288:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6296:6:2",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6304:6:2",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "6312:6:2",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "6320:6:2",
														"type": ""
													}
												],
												"src": "6161:1199:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7449:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7495:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7497:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7497:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7497:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7470:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7479:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7466:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7466:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7491:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7462:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7462:32:2"
															},
															"nodeType": "YulIf",
															"src": "7459:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "7588:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7603:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7617:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7607:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7632:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7667:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7678:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7663:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7663:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7687:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7642:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7642:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7632:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7715:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7730:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7744:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7734:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7760:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7795:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7806:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7791:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7791:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7815:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7770:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7770:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7760:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7411:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7422:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7434:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7442:6:2",
														"type": ""
													}
												],
												"src": "7366:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7960:34:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7970:18:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7985:3:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7970:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7932:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7937:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7948:11:2",
														"type": ""
													}
												],
												"src": "7846:148:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8110:280:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8120:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8167:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8134:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8134:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8124:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8182:96:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8266:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8271:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8189:76:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8189:89:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8182:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8326:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8333:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8322:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8322:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8340:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8345:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8287:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8287:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8287:65:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8361:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8372:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8377:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8368:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8368:16:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8361:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8091:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8098:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8106:3:2",
														"type": ""
													}
												],
												"src": "8000:390:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8424:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8441:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8444:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8434:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8434:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8434:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8538:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8541:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8531:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8531:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8531:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8562:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8565:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8555:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8555:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8555:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "8396:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8633:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8643:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8657:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8663:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8653:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8653:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8643:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8674:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8704:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8710:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8700:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8700:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8678:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8751:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8765:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8779:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8787:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8775:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8775:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8765:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8731:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8724:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8724:26:2"
															},
															"nodeType": "YulIf",
															"src": "8721:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8854:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "8868:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8868:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8868:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8818:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8841:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8849:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8838:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8838:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8815:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8815:38:2"
															},
															"nodeType": "YulIf",
															"src": "8812:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8617:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8626:6:2",
														"type": ""
													}
												],
												"src": "8582:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8962:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8972:11:2",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "8980:3:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8972:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9000:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "9003:3:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8993:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8993:14:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8993:14:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9016:26:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9034:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9037:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "9024:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9024:18:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9016:4:2"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "8949:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8957:4:2",
														"type": ""
													}
												],
												"src": "8908:141:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9186:767:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9196:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9219:5:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "9213:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9213:12:2"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "9200:9:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9234:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "9274:9:2"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "9248:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9248:36:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9238:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9293:96:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9377:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9382:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9300:76:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9300:89:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9293:3:2"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9438:159:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "9491:3:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "9500:9:2"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "9515:4:2",
																											"type": "",
																											"value": "0xff"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "9511:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "9511:9:2"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "9496:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9496:25:2"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "9484:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9484:38:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9484:38:2"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "9535:52:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "9546:3:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "9555:6:2"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nodeType": "YulIdentifier",
																													"src": "9577:6:2"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nodeType": "YulIdentifier",
																												"src": "9570:6:2"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "9570:14:2"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "9563:6:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "9563:22:2"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nodeType": "YulIdentifier",
																								"src": "9551:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9551:35:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9542:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9542:45:2"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "9535:3:2"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "9431:166:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9436:1:2",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9613:334:2",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "9658:53:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "9705:5:2"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "9673:31:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9673:38:2"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "9662:7:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "9724:10:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9733:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "9728:1:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "9791:110:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "9820:3:2"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "9825:1:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "9816:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "9816:11:2"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "9835:7:2"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "9829:5:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "9829:14:2"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "9809:6:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9809:35:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "9809:35:2"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "9861:26:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "9876:7:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "9885:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "9872:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9872:15:2"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "9861:7:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9758:1:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "9761:6:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "9755:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9755:13:2"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "9769:21:2",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "9771:17:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "9780:1:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "9783:4:2",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "9776:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9776:12:2"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "9771:1:2"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "9751:3:2",
																					"statements": []
																				},
																				"src": "9747:154:2"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "9914:23:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "9925:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "9930:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9921:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9921:16:2"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "9914:3:2"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "9606:341:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9611:1:2",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "9409:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9420:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9405:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9405:17:2"
															},
															"nodeType": "YulSwitch",
															"src": "9398:549:2"
														}
													]
												},
												"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9167:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9174:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9182:3:2",
														"type": ""
													}
												],
												"src": "9079:874:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10140:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10151:102:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10240:6:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10249:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10158:81:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10158:95:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10151:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10263:99:2",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10349:6:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10358:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10270:78:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10270:92:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10263:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10372:10:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10379:3:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10372:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10111:3:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10117:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10125:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10136:3:2",
														"type": ""
													}
												],
												"src": "9959:429:2"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100b2575f3560e01c806370a082311161006f57806370a082311461018e5780637ecebe00146101be57806395d89b41146101ee578063a9059cbb1461020c578063d505accf1461023c578063dd62ed3e14610258576100b2565b806306fdde03146100b6578063095ea7b3146100d457806318160ddd1461010457806323b872dd14610122578063313ce567146101525780633644e51514610170575b5f80fd5b6100be610288565b6040516100cb9190610851565b60405180910390f35b6100ee60048036038101906100e99190610902565b6102e6565b6040516100fb919061095a565b60405180910390f35b61010c610336565b6040516101199190610982565b60405180910390f35b61013c6004803603810190610137919061099b565b610347565b604051610149919061095a565b60405180910390f35b61015a610418565b6040516101679190610a06565b60405180910390f35b610178610420565b6040516101859190610a37565b60405180910390f35b6101a860048036038101906101a39190610a50565b6104b0565b6040516101b59190610982565b60405180910390f35b6101d860048036038101906101d39190610a50565b6104c9565b6040516101e59190610982565b60405180910390f35b6101f66104e2565b6040516102039190610851565b60405180910390f35b61022660048036038101906102219190610902565b610571565b604051610233919061095a565b60405180910390f35b61025660048036038101906102519190610acf565b6105ff565b005b610272600480360381019061026d9190610b6c565b61079b565b60405161027f9190610982565b60405180910390f35b60606040518060400160405280600581526020017f4d494e492d0000000000000000000000000000000000000000000000000000008152505f6040516020016102d2929190610cd3565b604051602081830303815290604052905090565b5f82602052637f5e9f20600c52335f52816034600c2055815f52602c5160601c337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560205fa36001905092915050565b5f6805345cdf77eb68f44c54905090565b5f6103538484846107b9565b8360601b33602052637f5e9f208117600c526034600c2080546001810115610390578085111561038a576313be252b5f526004601cfd5b84810382555b6387a211a28317600c526020600c208054808711156103b65763f4d678b85f526004601cfd5b8681038255875f526020600c2087815401815587602052600c5160601c8660601c7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602080a350505050505061040d8484846107be565b600190509392505050565b5f6012905090565b5f8061042a6107c3565b90505f801b81036104475761043d610288565b8051906020012090505b6040517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81528160208201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6604082015246606082015230608082015260a081209250505090565b5f6387a211a2600c52815f526020600c20549050919050565b5f6338377508600c52815f526020600c20549050919050565b60605f80546104f090610c11565b80601f016020809104026020016040519081016040528092919081815260200182805461051c90610c11565b80156105675780601f1061053e57610100808354040283529160200191610567565b820191905f5260205f20905b81548152906001019060200180831161054a57829003601f168201915b5050505050905090565b5f61057d3384846107b9565b6387a211a2600c52335f526020600c208054808411156105a45763f4d678b85f526004601cfd5b8381038255845f526020600c2084815401815584602052600c5160601c337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602080a35050506105f53384846107be565b6001905092915050565b5f6106086107c3565b90505f801b81036106255761061b610288565b8051906020012090505b8442111561063a57631a15a3cc5f526004601cfd5b6040518860601b60601c98508760601b60601c975065383775081901600e52885f526020600c2080547f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f83528360208401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6604084015246606084015230608084015260a08320602e527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c983528a60208401528960408401528860608401528060808401528760a084015260c08320604e526042602c205f528660ff16602052856040528460605260208060805f60015afa8b3d51146107425763ddafbaef5f526004601cfd5b80820183558a637f5e9f2060a01b17604052896034602c20558a8c7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925602060608801a3836040525f606052505050505050505050505050565b5f81602052637f5e9f20600c52825f526034600c2054905092915050565b505050565b505050565b5f90565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156107fe5780820151818401526020810190506107e3565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610823826107c7565b61082d81856107d1565b935061083d8185602086016107e1565b61084681610809565b840191505092915050565b5f6020820190508181035f8301526108698184610819565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61089e82610875565b9050919050565b6108ae81610894565b81146108b8575f80fd5b50565b5f813590506108c9816108a5565b92915050565b5f819050919050565b6108e1816108cf565b81146108eb575f80fd5b50565b5f813590506108fc816108d8565b92915050565b5f806040838503121561091857610917610871565b5b5f610925858286016108bb565b9250506020610936858286016108ee565b9150509250929050565b5f8115159050919050565b61095481610940565b82525050565b5f60208201905061096d5f83018461094b565b92915050565b61097c816108cf565b82525050565b5f6020820190506109955f830184610973565b92915050565b5f805f606084860312156109b2576109b1610871565b5b5f6109bf868287016108bb565b93505060206109d0868287016108bb565b92505060406109e1868287016108ee565b9150509250925092565b5f60ff82169050919050565b610a00816109eb565b82525050565b5f602082019050610a195f8301846109f7565b92915050565b5f819050919050565b610a3181610a1f565b82525050565b5f602082019050610a4a5f830184610a28565b92915050565b5f60208284031215610a6557610a64610871565b5b5f610a72848285016108bb565b91505092915050565b610a84816109eb565b8114610a8e575f80fd5b50565b5f81359050610a9f81610a7b565b92915050565b610aae81610a1f565b8114610ab8575f80fd5b50565b5f81359050610ac981610aa5565b92915050565b5f805f805f805f60e0888a031215610aea57610ae9610871565b5b5f610af78a828b016108bb565b9750506020610b088a828b016108bb565b9650506040610b198a828b016108ee565b9550506060610b2a8a828b016108ee565b9450506080610b3b8a828b01610a91565b93505060a0610b4c8a828b01610abb565b92505060c0610b5d8a828b01610abb565b91505092959891949750929550565b5f8060408385031215610b8257610b81610871565b5b5f610b8f858286016108bb565b9250506020610ba0858286016108bb565b9150509250929050565b5f81905092915050565b5f610bbe826107c7565b610bc88185610baa565b9350610bd88185602086016107e1565b80840191505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610c2857607f821691505b602082108103610c3b57610c3a610be4565b5b50919050565b5f819050815f5260205f209050919050565b5f8154610c5f81610c11565b610c698186610baa565b9450600182165f8114610c835760018114610c9857610cca565b60ff1983168652811515820286019350610cca565b610ca185610c41565b5f5b83811015610cc257815481890152600182019150602081019050610ca3565b838801955050505b50505092915050565b5f610cde8285610bb4565b9150610cea8284610c53565b9150819050939250505056fea26469706673582212204521ebb049dbcbfa50b067da5c7177c3e375a0f79c2f7e1dda03ec1dc3abbca164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x258 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x288 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x902 JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x95A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x336 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x99B JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x95A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x418 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xA06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xA37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x902 JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x95A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0xACF JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xB6C JUMP JUMPDEST PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D494E492D000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2D2 SWAP3 SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 PUSH1 0xC MSTORE CALLER PUSH0 MSTORE DUP2 PUSH1 0x34 PUSH1 0xC KECCAK256 SSTORE DUP2 PUSH0 MSTORE PUSH1 0x2C MLOAD PUSH1 0x60 SHR CALLER PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 PUSH0 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH9 0x5345CDF77EB68F44C SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x353 DUP5 DUP5 DUP5 PUSH2 0x7B9 JUMP JUMPDEST DUP4 PUSH1 0x60 SHL CALLER PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 DUP2 OR PUSH1 0xC MSTORE PUSH1 0x34 PUSH1 0xC KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD ISZERO PUSH2 0x390 JUMPI DUP1 DUP6 GT ISZERO PUSH2 0x38A JUMPI PUSH4 0x13BE252B PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP5 DUP2 SUB DUP3 SSTORE JUMPDEST PUSH4 0x87A211A2 DUP4 OR PUSH1 0xC MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP1 DUP8 GT ISZERO PUSH2 0x3B6 JUMPI PUSH4 0xF4D678B8 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP7 DUP2 SUB DUP3 SSTORE DUP8 PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP8 DUP2 SLOAD ADD DUP2 SSTORE DUP8 PUSH1 0x20 MSTORE PUSH1 0xC MLOAD PUSH1 0x60 SHR DUP7 PUSH1 0x60 SHR PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP1 LOG3 POP POP POP POP POP POP PUSH2 0x40D DUP5 DUP5 DUP5 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x42A PUSH2 0x7C3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 SHL DUP2 SUB PUSH2 0x447 JUMPI PUSH2 0x43D PUSH2 0x288 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x40 DUP3 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 KECCAK256 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH4 0x87A211A2 PUSH1 0xC MSTORE DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH4 0x38377508 PUSH1 0xC MSTORE DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x4F0 SWAP1 PUSH2 0xC11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x51C SWAP1 PUSH2 0xC11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x567 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x53E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x567 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x54A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x57D CALLER DUP5 DUP5 PUSH2 0x7B9 JUMP JUMPDEST PUSH4 0x87A211A2 PUSH1 0xC MSTORE CALLER PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP1 DUP5 GT ISZERO PUSH2 0x5A4 JUMPI PUSH4 0xF4D678B8 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP4 DUP2 SUB DUP3 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP5 DUP2 SLOAD ADD DUP2 SSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0xC MLOAD PUSH1 0x60 SHR CALLER PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP1 LOG3 POP POP POP PUSH2 0x5F5 CALLER DUP5 DUP5 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x608 PUSH2 0x7C3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 SHL DUP2 SUB PUSH2 0x625 JUMPI PUSH2 0x61B PUSH2 0x288 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP JUMPDEST DUP5 TIMESTAMP GT ISZERO PUSH2 0x63A JUMPI PUSH4 0x1A15A3CC PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST PUSH1 0x40 MLOAD DUP9 PUSH1 0x60 SHL PUSH1 0x60 SHR SWAP9 POP DUP8 PUSH1 0x60 SHL PUSH1 0x60 SHR SWAP8 POP PUSH6 0x383775081901 PUSH1 0xE MSTORE DUP9 PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP4 MSTORE DUP4 PUSH1 0x20 DUP5 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x40 DUP5 ADD MSTORE CHAINID PUSH1 0x60 DUP5 ADD MSTORE ADDRESS PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 KECCAK256 PUSH1 0x2E MSTORE PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP4 MSTORE DUP11 PUSH1 0x20 DUP5 ADD MSTORE DUP10 PUSH1 0x40 DUP5 ADD MSTORE DUP9 PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP5 ADD MSTORE DUP8 PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 KECCAK256 PUSH1 0x4E MSTORE PUSH1 0x42 PUSH1 0x2C KECCAK256 PUSH0 MSTORE DUP7 PUSH1 0xFF AND PUSH1 0x20 MSTORE DUP6 PUSH1 0x40 MSTORE DUP5 PUSH1 0x60 MSTORE PUSH1 0x20 DUP1 PUSH1 0x80 PUSH0 PUSH1 0x1 GAS STATICCALL DUP12 RETURNDATASIZE MLOAD EQ PUSH2 0x742 JUMPI PUSH4 0xDDAFBAEF PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP1 DUP3 ADD DUP4 SSTORE DUP11 PUSH4 0x7F5E9F20 PUSH1 0xA0 SHL OR PUSH1 0x40 MSTORE DUP10 PUSH1 0x34 PUSH1 0x2C KECCAK256 SSTORE DUP11 DUP13 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 PUSH1 0x60 DUP9 ADD LOG3 DUP4 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x60 MSTORE POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 PUSH1 0xC MSTORE DUP3 PUSH0 MSTORE PUSH1 0x34 PUSH1 0xC KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7FE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7E3 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x823 DUP3 PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x82D DUP2 DUP6 PUSH2 0x7D1 JUMP JUMPDEST SWAP4 POP PUSH2 0x83D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x846 DUP2 PUSH2 0x809 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x869 DUP2 DUP5 PUSH2 0x819 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x89E DUP3 PUSH2 0x875 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AE DUP2 PUSH2 0x894 JUMP JUMPDEST DUP2 EQ PUSH2 0x8B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8C9 DUP2 PUSH2 0x8A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8E1 DUP2 PUSH2 0x8CF JUMP JUMPDEST DUP2 EQ PUSH2 0x8EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8FC DUP2 PUSH2 0x8D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x918 JUMPI PUSH2 0x917 PUSH2 0x871 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x925 DUP6 DUP3 DUP7 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x936 DUP6 DUP3 DUP7 ADD PUSH2 0x8EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x954 DUP2 PUSH2 0x940 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x96D PUSH0 DUP4 ADD DUP5 PUSH2 0x94B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x97C DUP2 PUSH2 0x8CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x995 PUSH0 DUP4 ADD DUP5 PUSH2 0x973 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9B2 JUMPI PUSH2 0x9B1 PUSH2 0x871 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9BF DUP7 DUP3 DUP8 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x9D0 DUP7 DUP3 DUP8 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x9E1 DUP7 DUP3 DUP8 ADD PUSH2 0x8EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA00 DUP2 PUSH2 0x9EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA19 PUSH0 DUP4 ADD DUP5 PUSH2 0x9F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA31 DUP2 PUSH2 0xA1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA4A PUSH0 DUP4 ADD DUP5 PUSH2 0xA28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA65 JUMPI PUSH2 0xA64 PUSH2 0x871 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA72 DUP5 DUP3 DUP6 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA84 DUP2 PUSH2 0x9EB JUMP JUMPDEST DUP2 EQ PUSH2 0xA8E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA9F DUP2 PUSH2 0xA7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAAE DUP2 PUSH2 0xA1F JUMP JUMPDEST DUP2 EQ PUSH2 0xAB8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAC9 DUP2 PUSH2 0xAA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xAEA JUMPI PUSH2 0xAE9 PUSH2 0x871 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAF7 DUP11 DUP3 DUP12 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0xB08 DUP11 DUP3 DUP12 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0xB19 DUP11 DUP3 DUP12 ADD PUSH2 0x8EE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0xB2A DUP11 DUP3 DUP12 ADD PUSH2 0x8EE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0xB3B DUP11 DUP3 DUP12 ADD PUSH2 0xA91 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0xB4C DUP11 DUP3 DUP12 ADD PUSH2 0xABB JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0xB5D DUP11 DUP3 DUP12 ADD PUSH2 0xABB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB82 JUMPI PUSH2 0xB81 PUSH2 0x871 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB8F DUP6 DUP3 DUP7 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBA0 DUP6 DUP3 DUP7 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBBE DUP3 PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0xBC8 DUP2 DUP6 PUSH2 0xBAA JUMP JUMPDEST SWAP4 POP PUSH2 0xBD8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7E1 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xC28 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC3B JUMPI PUSH2 0xC3A PUSH2 0xBE4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0xC5F DUP2 PUSH2 0xC11 JUMP JUMPDEST PUSH2 0xC69 DUP2 DUP7 PUSH2 0xBAA JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0xC83 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xC98 JUMPI PUSH2 0xCCA JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0xCCA JUMP JUMPDEST PUSH2 0xCA1 DUP6 PUSH2 0xC41 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCC2 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCA3 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCDE DUP3 DUP6 PUSH2 0xBB4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCEA DUP3 DUP5 PUSH2 0xC53 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0x21 0xEB 0xB0 0x49 0xDB 0xCB STATICCALL POP 0xB0 PUSH8 0xDA5C7177C3E375A0 0xF7 SWAP13 0x2F PUSH31 0x1DDA03EC1DC3ABBCA164736F6C634300081400330000000000000000000000 ",
							"sourceMap": "177:432:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;391:115;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7435:573:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6287:195;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9969:2191;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5860:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16620:693;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6548:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12800:340;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;512:94:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8195:1406:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13324:3215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6929:375;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;391:115:0;436:13;483:6;;;;;;;;;;;;;;;;;491;469:29;;;;;;;;;:::i;:::-;;;;;;;;;;;;;462:36;;391:115;:::o;7435:573:1:-;7509:4;7668:7;7662:4;7655:21;7702:20;7696:4;7689:34;7749:8;7743:4;7736:22;7801:6;7794:4;7788;7778:21;7771:37;7876:6;7870:4;7863:20;7964:4;7958:11;7954:2;7950:20;7940:8;7913:25;7907:4;7901;7896:75;7997:4;7990:11;;7435:573;;;;:::o;6287:195::-;6339:14;6447:18;6441:25;6431:35;;6287:195;:::o;9969:2191::-;10057:4;10073:38;10094:4;10100:2;10104:6;10073:20;:38::i;:::-;10208:4;10204:2;10200:13;10301:8;10295:4;10288:22;10346:20;10339:5;10336:31;10330:4;10323:45;10418:4;10412;10402:21;10460:13;10454:20;10572:1;10560:10;10556:18;10553:418;;;10688:10;10680:6;10677:22;10674:159;;;10735:10;10729:4;10722:24;10810:4;10804;10797:18;10674:159;10949:6;10937:10;10933:23;10918:13;10911:46;10553:418;11067:18;11060:5;11057:29;11051:4;11044:43;11139:4;11133;11123:21;11182:15;11176:22;11272:11;11264:6;11261:23;11258:146;;;11316:10;11310:4;11303:24;11385:4;11379;11372:18;11258:146;11513:6;11500:11;11496:24;11479:15;11472:49;11596:2;11590:4;11583:16;11649:4;11643;11633:21;11899:6;11883:13;11877:20;11873:33;11858:13;11851:56;11975:6;11969:4;11962:20;12069:4;12063:11;12059:2;12055:20;12047:5;12043:2;12039:14;12012:25;12006:4;12000;11995:81;10173:1913;;;;;;12095:37;12115:4;12121:2;12125:6;12095:19;:37::i;:::-;12149:4;12142:11;;9969:2191;;;;;:::o;5860:82::-;5909:5;5933:2;5926:9;;5860:82;:::o;16620:693::-;16677:14;16703:16;16722:19;:17;:19::i;:::-;16703:38;;16869:1;16861:10;;16849:8;:22;16845:63;;16900:6;:4;:6::i;:::-;16884:24;;;;;;16873:35;;16845:63;16999:4;16993:11;17060:16;17057:1;17050:27;17111:8;17104:4;17101:1;17097:12;17090:30;17154:13;17147:4;17144:1;17140:12;17133:35;17202:9;17195:4;17192:1;17188:12;17181:31;17246:9;17239:4;17236:1;17232:12;17225:31;17292:4;17289:1;17279:18;17269:28;;16970:337;;16620:693;:::o;6548:286::-;6611:14;6716:18;6710:4;6703:32;6761:5;6755:4;6748:19;6812:4;6806;6796:21;6790:28;6780:38;;6548:286;;;:::o;12800:340::-;12860:14;13023:17;13017:4;13010:31;13067:5;13061:4;13054:19;13118:4;13112;13102:21;13096:28;13086:38;;12800:340;;;:::o;512:94:0:-;559:13;592:6;585:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;512:94;:::o;8195:1406:1:-;8265:4;8281:44;8302:10;8314:2;8318:6;8281:20;:44::i;:::-;8474:18;8468:4;8461:32;8519:8;8513:4;8506:22;8580:4;8574;8564:21;8623:15;8617:22;8713:11;8705:6;8702:23;8699:146;;;8757:10;8751:4;8744:24;8826:4;8820;8813:18;8699:146;8954:6;8941:11;8937:24;8920:15;8913:49;9037:2;9031:4;9024:16;9090:4;9084;9074:21;9340:6;9324:13;9318:20;9314:33;9299:13;9292:56;9416:6;9410:4;9403:20;9504:4;9498:11;9494:2;9490:20;9480:8;9453:25;9447:4;9441;9436:75;8387:1134;;;9530:43;9550:10;9562:2;9566:6;9530:19;:43::i;:::-;9590:4;9583:11;;8195:1406;;;;:::o;13324:3215::-;13523:16;13542:19;:17;:19::i;:::-;13523:38;;13689:1;13681:10;;13669:8;:22;13665:63;;13720:6;:4;:6::i;:::-;13704:24;;;;;;13693:35;;13665:63;13896:8;13883:11;13880:25;13877:142;;;13937:10;13931:4;13924:24;14000:4;13994;13987:18;13877:142;14047:4;14041:11;14163:5;14159:2;14155:14;14151:2;14147:23;14138:32;;14210:7;14206:2;14202:16;14198:2;14194:25;14183:36;;14303:39;14297:4;14290:53;14369:5;14363:4;14356:19;14421:4;14415;14405:21;14463:9;14457:16;14541;14538:1;14531:27;14592:8;14585:4;14582:1;14578:12;14571:30;14635:13;14628:4;14625:1;14621:12;14614:35;14683:9;14676:4;14673:1;14669:12;14662:31;14727:9;14720:4;14717:1;14713:12;14706:31;14776:4;14773:1;14763:18;14757:4;14750:32;14845:16;14842:1;14835:27;14896:5;14889:4;14886:1;14882:12;14875:27;14936:7;14929:4;14926:1;14922:12;14915:29;14978:5;14971:4;14968:1;14964:12;14957:27;15018:10;15011:4;15008:1;15004:12;14997:32;15063:8;15056:4;15053:1;15049:12;15042:30;15111:4;15108:1;15098:18;15092:4;15085:32;15206:4;15200;15190:21;15184:4;15177:35;15248:1;15242:4;15238:12;15232:4;15225:26;15277:1;15271:4;15264:15;15305:1;15299:4;15292:15;15365:4;15359;15353;15350:1;15347;15340:5;15329:41;15786:5;15767:16;15761:23;15758:34;15748:159;;15825:10;15819:4;15812:24;15888:4;15882;15875:18;15748:159;16008:1;15996:10;15992:18;15981:9;15974:37;16222:7;16199:20;16194:3;16190:30;16187:43;16181:4;16174:57;16274:5;16267:4;16261;16251:21;16244:36;16394:7;16387:5;16360:25;16354:4;16347;16344:1;16340:12;16335:67;16428:1;16422:4;16415:15;16492:1;16486:4;16479:15;13790:2743;;;;;13324:3215;;;;;;;:::o;6929:375::-;7041:14;7150:7;7144:4;7137:21;7184:20;7178:4;7171:34;7231:5;7225:4;7218:19;7282:4;7276;7266:21;7260:28;7250:38;;6929:375;;;;:::o;24588:91::-;;;;:::o;24791:90::-;;;;:::o;12591:78::-;12651:14;12591:78;:::o;7:99:2:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:118::-;5694:22;5710:5;5694:22;:::i;:::-;5687:5;5684:33;5674:61;;5731:1;5728;5721:12;5674:61;5623:118;:::o;5747:135::-;5791:5;5829:6;5816:20;5807:29;;5845:31;5870:5;5845:31;:::i;:::-;5747:135;;;;:::o;5888:122::-;5961:24;5979:5;5961:24;:::i;:::-;5954:5;5951:35;5941:63;;6000:1;5997;5990:12;5941:63;5888:122;:::o;6016:139::-;6062:5;6100:6;6087:20;6078:29;;6116:33;6143:5;6116:33;:::i;:::-;6016:139;;;;:::o;6161:1199::-;6272:6;6280;6288;6296;6304;6312;6320;6369:3;6357:9;6348:7;6344:23;6340:33;6337:120;;;6376:79;;:::i;:::-;6337:120;6496:1;6521:53;6566:7;6557:6;6546:9;6542:22;6521:53;:::i;:::-;6511:63;;6467:117;6623:2;6649:53;6694:7;6685:6;6674:9;6670:22;6649:53;:::i;:::-;6639:63;;6594:118;6751:2;6777:53;6822:7;6813:6;6802:9;6798:22;6777:53;:::i;:::-;6767:63;;6722:118;6879:2;6905:53;6950:7;6941:6;6930:9;6926:22;6905:53;:::i;:::-;6895:63;;6850:118;7007:3;7034:51;7077:7;7068:6;7057:9;7053:22;7034:51;:::i;:::-;7024:61;;6978:117;7134:3;7161:53;7206:7;7197:6;7186:9;7182:22;7161:53;:::i;:::-;7151:63;;7105:119;7263:3;7290:53;7335:7;7326:6;7315:9;7311:22;7290:53;:::i;:::-;7280:63;;7234:119;6161:1199;;;;;;;;;;:::o;7366:474::-;7434:6;7442;7491:2;7479:9;7470:7;7466:23;7462:32;7459:119;;;7497:79;;:::i;:::-;7459:119;7617:1;7642:53;7687:7;7678:6;7667:9;7663:22;7642:53;:::i;:::-;7632:63;;7588:117;7744:2;7770:53;7815:7;7806:6;7795:9;7791:22;7770:53;:::i;:::-;7760:63;;7715:118;7366:474;;;;;:::o;7846:148::-;7948:11;7985:3;7970:18;;7846:148;;;;:::o;8000:390::-;8106:3;8134:39;8167:5;8134:39;:::i;:::-;8189:89;8271:6;8266:3;8189:89;:::i;:::-;8182:96;;8287:65;8345:6;8340:3;8333:4;8326:5;8322:16;8287:65;:::i;:::-;8377:6;8372:3;8368:16;8361:23;;8110:280;8000:390;;;;:::o;8396:180::-;8444:77;8441:1;8434:88;8541:4;8538:1;8531:15;8565:4;8562:1;8555:15;8582:320;8626:6;8663:1;8657:4;8653:12;8643:22;;8710:1;8704:4;8700:12;8731:18;8721:81;;8787:4;8779:6;8775:17;8765:27;;8721:81;8849:2;8841:6;8838:14;8818:18;8815:38;8812:84;;8868:18;;:::i;:::-;8812:84;8633:269;8582:320;;;:::o;8908:141::-;8957:4;8980:3;8972:11;;9003:3;9000:1;8993:14;9037:4;9034:1;9024:18;9016:26;;8908:141;;;:::o;9079:874::-;9182:3;9219:5;9213:12;9248:36;9274:9;9248:36;:::i;:::-;9300:89;9382:6;9377:3;9300:89;:::i;:::-;9293:96;;9420:1;9409:9;9405:17;9436:1;9431:166;;;;9611:1;9606:341;;;;9398:549;;9431:166;9515:4;9511:9;9500;9496:25;9491:3;9484:38;9577:6;9570:14;9563:22;9555:6;9551:35;9546:3;9542:45;9535:52;;9431:166;;9606:341;9673:38;9705:5;9673:38;:::i;:::-;9733:1;9747:154;9761:6;9758:1;9755:13;9747:154;;;9835:7;9829:14;9825:1;9820:3;9816:11;9809:35;9885:1;9876:7;9872:15;9861:26;;9783:4;9780:1;9776:12;9771:17;;9747:154;;;9930:6;9925:3;9921:16;9914:23;;9613:334;;9398:549;;9186:767;;9079:874;;;;:::o;9959:429::-;10136:3;10158:95;10249:3;10240:6;10158:95;:::i;:::-;10151:102;;10270:92;10358:3;10349:6;10270:92;:::i;:::-;10263:99;;10379:3;10372:10;;9959:429;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "674400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24803",
								"balanceOf(address)": "2797",
								"decimals()": "427",
								"name()": "infinite",
								"nonces(address)": "2819",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "51315",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 177,
									"end": 609,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 177,
									"end": 609,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 177,
									"end": 609,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 318,
									"end": 383,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 318,
									"end": 383,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 318,
									"end": 383,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 318,
									"end": 383,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 318,
									"end": 383,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 318,
									"end": 383,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 318,
									"end": 383,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 370,
									"end": 375,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 361,
									"end": 367,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 361,
									"end": 375,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 361,
									"end": 375,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 361,
									"end": 375,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 361,
									"end": 375,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 361,
									"end": 375,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 361,
									"end": 375,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 361,
									"end": 375,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 361,
									"end": 375,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 361,
									"end": 375,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 361,
									"end": 375,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 318,
									"end": 383,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 177,
									"end": 609,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 177,
									"end": 609,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2757,
									"end": 2763,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2806,
									"end": 2808,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2794,
									"end": 2803,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2785,
									"end": 2792,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2781,
									"end": 2804,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2777,
									"end": 2809,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 2774,
									"end": 2893,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2774,
									"end": 2893,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 2774,
									"end": 2893,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2812,
									"end": 2891,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 2812,
									"end": 2891,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2812,
									"end": 2891,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2812,
									"end": 2891,
									"name": "tag",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 2812,
									"end": 2891,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2774,
									"end": 2893,
									"name": "tag",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 2774,
									"end": 2893,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2953,
									"end": 2954,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2942,
									"end": 2951,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2938,
									"end": 2955,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2932,
									"end": 2956,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2983,
									"end": 3001,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2975,
									"end": 2981,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2972,
									"end": 3002,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2969,
									"end": 3086,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2969,
									"end": 3086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "77"
								},
								{
									"begin": 2969,
									"end": 3086,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3005,
									"end": 3084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 3005,
									"end": 3084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 3005,
									"end": 3084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3005,
									"end": 3084,
									"name": "tag",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 3005,
									"end": 3084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2969,
									"end": 3086,
									"name": "tag",
									"source": 2,
									"value": "77"
								},
								{
									"begin": 2969,
									"end": 3086,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3110,
									"end": 3184,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 3176,
									"end": 3183,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 3167,
									"end": 3173,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3156,
									"end": 3165,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3152,
									"end": 3174,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3110,
									"end": 3184,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 3110,
									"end": 3184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3110,
									"end": 3184,
									"name": "tag",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 3110,
									"end": 3184,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3100,
									"end": 3184,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3100,
									"end": 3184,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2903,
									"end": 3194,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3201,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3207,
									"end": 3306,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 3207,
									"end": 3306,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3259,
									"end": 3265,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3293,
									"end": 3298,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3287,
									"end": 3299,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3277,
									"end": 3299,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3277,
									"end": 3299,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3207,
									"end": 3306,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3207,
									"end": 3306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3207,
									"end": 3306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3207,
									"end": 3306,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3312,
									"end": 3492,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 3312,
									"end": 3492,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3360,
									"end": 3437,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3357,
									"end": 3358,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3350,
									"end": 3438,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3457,
									"end": 3461,
									"name": "PUSH",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 3454,
									"end": 3455,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 3447,
									"end": 3462,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3481,
									"end": 3485,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 3478,
									"end": 3479,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3471,
									"end": 3486,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3498,
									"end": 3818,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 3498,
									"end": 3818,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3542,
									"end": 3548,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3579,
									"end": 3580,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3573,
									"end": 3577,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3569,
									"end": 3581,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 3559,
									"end": 3581,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3559,
									"end": 3581,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3626,
									"end": 3627,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 3620,
									"end": 3624,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3647,
									"end": 3665,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3637,
									"end": 3718,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 3637,
									"end": 3718,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3703,
									"end": 3707,
									"name": "PUSH",
									"source": 2,
									"value": "7F"
								},
								{
									"begin": 3695,
									"end": 3701,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3691,
									"end": 3708,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3681,
									"end": 3708,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3681,
									"end": 3708,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3637,
									"end": 3718,
									"name": "tag",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 3637,
									"end": 3718,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3765,
									"end": 3767,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3757,
									"end": 3763,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3754,
									"end": 3768,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 3734,
									"end": 3752,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3731,
									"end": 3769,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3728,
									"end": 3812,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "84"
								},
								{
									"begin": 3728,
									"end": 3812,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3784,
									"end": 3802,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 3784,
									"end": 3802,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 3784,
									"end": 3802,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3784,
									"end": 3802,
									"name": "tag",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 3784,
									"end": 3802,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3728,
									"end": 3812,
									"name": "tag",
									"source": 2,
									"value": "84"
								},
								{
									"begin": 3728,
									"end": 3812,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3549,
									"end": 3818,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3498,
									"end": 3818,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3498,
									"end": 3818,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3498,
									"end": 3818,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3498,
									"end": 3818,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3824,
									"end": 3965,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 3824,
									"end": 3965,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3873,
									"end": 3877,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3896,
									"end": 3899,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3888,
									"end": 3899,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3888,
									"end": 3899,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3919,
									"end": 3922,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3916,
									"end": 3917,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3909,
									"end": 3923,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3953,
									"end": 3957,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3950,
									"end": 3951,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3940,
									"end": 3958,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 3932,
									"end": 3958,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3932,
									"end": 3958,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3824,
									"end": 3965,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3824,
									"end": 3965,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3824,
									"end": 3965,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3824,
									"end": 3965,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3971,
									"end": 4064,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 3971,
									"end": 4064,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4008,
									"end": 4014,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4055,
									"end": 4057,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4050,
									"end": 4052,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4043,
									"end": 4048,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4039,
									"end": 4053,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4035,
									"end": 4058,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 4025,
									"end": 4058,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4025,
									"end": 4058,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3971,
									"end": 4064,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3971,
									"end": 4064,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3971,
									"end": 4064,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3971,
									"end": 4064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4114,
									"end": 4122,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4164,
									"end": 4169,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4158,
									"end": 4162,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4154,
									"end": 4170,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 4133,
									"end": 4170,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4133,
									"end": 4170,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4070,
									"end": 4177,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4252,
									"end": 4258,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4302,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 4290,
									"end": 4300,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4286,
									"end": 4304,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 4325,
									"end": 4422,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "90"
								},
								{
									"begin": 4355,
									"end": 4421,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4344,
									"end": 4353,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4325,
									"end": 4422,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 4325,
									"end": 4422,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4325,
									"end": 4422,
									"name": "tag",
									"source": 2,
									"value": "90"
								},
								{
									"begin": 4325,
									"end": 4422,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4443,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "91"
								},
								{
									"begin": 4473,
									"end": 4481,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 4462,
									"end": 4471,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4443,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 4443,
									"end": 4482,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4443,
									"end": 4482,
									"name": "tag",
									"source": 2,
									"value": "91"
								},
								{
									"begin": 4443,
									"end": 4482,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4431,
									"end": 4482,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 4431,
									"end": 4482,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4515,
									"end": 4519,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4511,
									"end": 4520,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 4504,
									"end": 4509,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4500,
									"end": 4521,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4491,
									"end": 4521,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 4491,
									"end": 4521,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4564,
									"end": 4568,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4554,
									"end": 4562,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 4550,
									"end": 4569,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4543,
									"end": 4548,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4540,
									"end": 4570,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 4530,
									"end": 4570,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4530,
									"end": 4570,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4259,
									"end": 4576,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4259,
									"end": 4576,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4183,
									"end": 4576,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4582,
									"end": 4659,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 4582,
									"end": 4659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4619,
									"end": 4626,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4648,
									"end": 4653,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4637,
									"end": 4653,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4637,
									"end": 4653,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4582,
									"end": 4659,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4582,
									"end": 4659,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4582,
									"end": 4659,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4582,
									"end": 4659,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4665,
									"end": 4725,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 4665,
									"end": 4725,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4693,
									"end": 4696,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4714,
									"end": 4719,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4707,
									"end": 4719,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4707,
									"end": 4719,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4665,
									"end": 4725,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4665,
									"end": 4725,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4665,
									"end": 4725,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4665,
									"end": 4725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4731,
									"end": 4873,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 4731,
									"end": 4873,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4781,
									"end": 4790,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4814,
									"end": 4867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "95"
								},
								{
									"begin": 4832,
									"end": 4866,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "96"
								},
								{
									"begin": 4841,
									"end": 4865,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "97"
								},
								{
									"begin": 4859,
									"end": 4864,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4841,
									"end": 4865,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 4841,
									"end": 4865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4841,
									"end": 4865,
									"name": "tag",
									"source": 2,
									"value": "97"
								},
								{
									"begin": 4841,
									"end": 4865,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4832,
									"end": 4866,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 4832,
									"end": 4866,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4832,
									"end": 4866,
									"name": "tag",
									"source": 2,
									"value": "96"
								},
								{
									"begin": 4832,
									"end": 4866,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4814,
									"end": 4867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 4814,
									"end": 4867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4814,
									"end": 4867,
									"name": "tag",
									"source": 2,
									"value": "95"
								},
								{
									"begin": 4814,
									"end": 4867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4801,
									"end": 4867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4801,
									"end": 4867,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4731,
									"end": 4873,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4731,
									"end": 4873,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4731,
									"end": 4873,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4731,
									"end": 4873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4879,
									"end": 4954,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 4879,
									"end": 4954,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4922,
									"end": 4925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4943,
									"end": 4948,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4936,
									"end": 4948,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4936,
									"end": 4948,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4879,
									"end": 4954,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4879,
									"end": 4954,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4879,
									"end": 4954,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4879,
									"end": 4954,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4960,
									"end": 5229,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 4960,
									"end": 5229,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5070,
									"end": 5109,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 5101,
									"end": 5108,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5070,
									"end": 5109,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 5070,
									"end": 5109,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5070,
									"end": 5109,
									"name": "tag",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 5070,
									"end": 5109,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5131,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "101"
								},
								{
									"begin": 5180,
									"end": 5221,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "102"
								},
								{
									"begin": 5204,
									"end": 5220,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5180,
									"end": 5221,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 5180,
									"end": 5221,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5180,
									"end": 5221,
									"name": "tag",
									"source": 2,
									"value": "102"
								},
								{
									"begin": 5180,
									"end": 5221,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5172,
									"end": 5178,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5165,
									"end": 5169,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5159,
									"end": 5170,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 5131,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 5131,
									"end": 5222,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5131,
									"end": 5222,
									"name": "tag",
									"source": 2,
									"value": "101"
								},
								{
									"begin": 5131,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5125,
									"end": 5129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5118,
									"end": 5223,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 5036,
									"end": 5229,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4960,
									"end": 5229,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4960,
									"end": 5229,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4960,
									"end": 5229,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4960,
									"end": 5229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5235,
									"end": 5308,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 5235,
									"end": 5308,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5280,
									"end": 5283,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5235,
									"end": 5308,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5235,
									"end": 5308,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5314,
									"end": 5503,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 5314,
									"end": 5503,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5391,
									"end": 5423,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "105"
								},
								{
									"begin": 5391,
									"end": 5423,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 5391,
									"end": 5423,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5391,
									"end": 5423,
									"name": "tag",
									"source": 2,
									"value": "105"
								},
								{
									"begin": 5391,
									"end": 5423,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5432,
									"end": 5497,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "106"
								},
								{
									"begin": 5490,
									"end": 5496,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5482,
									"end": 5488,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5476,
									"end": 5480,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5432,
									"end": 5497,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 5432,
									"end": 5497,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5432,
									"end": 5497,
									"name": "tag",
									"source": 2,
									"value": "106"
								},
								{
									"begin": 5432,
									"end": 5497,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5367,
									"end": 5503,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5314,
									"end": 5503,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5314,
									"end": 5503,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5314,
									"end": 5503,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5509,
									"end": 5695,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 5509,
									"end": 5695,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "tag",
									"source": 2,
									"value": "108"
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5586,
									"end": 5589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5579,
									"end": 5584,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5576,
									"end": 5590,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "110"
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5640,
									"end": 5679,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "111"
								},
								{
									"begin": 5677,
									"end": 5678,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5670,
									"end": 5675,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5640,
									"end": 5679,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 5640,
									"end": 5679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5640,
									"end": 5679,
									"name": "tag",
									"source": 2,
									"value": "111"
								},
								{
									"begin": 5640,
									"end": 5679,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5613,
									"end": 5614,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 5606,
									"end": 5611,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5602,
									"end": 5615,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5593,
									"end": 5615,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5593,
									"end": 5615,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "108"
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "tag",
									"source": 2,
									"value": "110"
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5509,
									"end": 5695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5509,
									"end": 5695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5509,
									"end": 5695,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5701,
									"end": 6244,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 5701,
									"end": 6244,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5802,
									"end": 5804,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 5797,
									"end": 5800,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5794,
									"end": 5805,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 5791,
									"end": 6237,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5791,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "113"
								},
								{
									"begin": 5791,
									"end": 6237,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5836,
									"end": 5874,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "114"
								},
								{
									"begin": 5868,
									"end": 5873,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5836,
									"end": 5874,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 5836,
									"end": 5874,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5836,
									"end": 5874,
									"name": "tag",
									"source": 2,
									"value": "114"
								},
								{
									"begin": 5836,
									"end": 5874,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5920,
									"end": 5949,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "115"
								},
								{
									"begin": 5938,
									"end": 5948,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5920,
									"end": 5949,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 5920,
									"end": 5949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5920,
									"end": 5949,
									"name": "tag",
									"source": 2,
									"value": "115"
								},
								{
									"begin": 5920,
									"end": 5949,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5910,
									"end": 5918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5906,
									"end": 5950,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6103,
									"end": 6105,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6091,
									"end": 6101,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6088,
									"end": 6106,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6085,
									"end": 6134,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6085,
									"end": 6134,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "116"
								},
								{
									"begin": 6085,
									"end": 6134,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6124,
									"end": 6132,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6109,
									"end": 6132,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6109,
									"end": 6132,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6085,
									"end": 6134,
									"name": "tag",
									"source": 2,
									"value": "116"
								},
								{
									"begin": 6085,
									"end": 6134,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6147,
									"end": 6227,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "117"
								},
								{
									"begin": 6203,
									"end": 6225,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "118"
								},
								{
									"begin": 6221,
									"end": 6224,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6203,
									"end": 6225,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6203,
									"end": 6225,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6203,
									"end": 6225,
									"name": "tag",
									"source": 2,
									"value": "118"
								},
								{
									"begin": 6203,
									"end": 6225,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6193,
									"end": 6201,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6176,
									"end": 6187,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6147,
									"end": 6227,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6147,
									"end": 6227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6147,
									"end": 6227,
									"name": "tag",
									"source": 2,
									"value": "117"
								},
								{
									"begin": 6147,
									"end": 6227,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5806,
									"end": 6237,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5806,
									"end": 6237,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5791,
									"end": 6237,
									"name": "tag",
									"source": 2,
									"value": "113"
								},
								{
									"begin": 5791,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5701,
									"end": 6244,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5701,
									"end": 6244,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5701,
									"end": 6244,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5701,
									"end": 6244,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6304,
									"end": 6312,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6348,
									"end": 6352,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6344,
									"end": 6360,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 6323,
									"end": 6360,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6323,
									"end": 6360,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6250,
									"end": 6367,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6417,
									"end": 6423,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6450,
									"end": 6501,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "121"
								},
								{
									"begin": 6498,
									"end": 6499,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6494,
									"end": 6500,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 6486,
									"end": 6491,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6483,
									"end": 6484,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 6479,
									"end": 6492,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 6450,
									"end": 6501,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6450,
									"end": 6501,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6450,
									"end": 6501,
									"name": "tag",
									"source": 2,
									"value": "121"
								},
								{
									"begin": 6450,
									"end": 6501,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6446,
									"end": 6502,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 6531,
									"end": 6535,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6525,
									"end": 6529,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6521,
									"end": 6536,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6511,
									"end": 6536,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6511,
									"end": 6536,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6424,
									"end": 6542,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6373,
									"end": 6542,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6623,
									"end": 6627,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6769,
									"end": 6798,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "123"
								},
								{
									"begin": 6794,
									"end": 6797,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6788,
									"end": 6792,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6769,
									"end": 6798,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6769,
									"end": 6798,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6769,
									"end": 6798,
									"name": "tag",
									"source": 2,
									"value": "123"
								},
								{
									"begin": 6769,
									"end": 6798,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6761,
									"end": 6798,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6761,
									"end": 6798,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6831,
									"end": 6834,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6828,
									"end": 6829,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6824,
									"end": 6835,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 6818,
									"end": 6822,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6815,
									"end": 6836,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 6836,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 6836,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6842,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6847,
									"end": 8242,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 6847,
									"end": 8242,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6964,
									"end": 7001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "125"
								},
								{
									"begin": 6997,
									"end": 7000,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6964,
									"end": 7001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 6964,
									"end": 7001,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6964,
									"end": 7001,
									"name": "tag",
									"source": 2,
									"value": "125"
								},
								{
									"begin": 6964,
									"end": 7001,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7066,
									"end": 7084,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7058,
									"end": 7064,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7055,
									"end": 7085,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 7052,
									"end": 7108,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7052,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "126"
								},
								{
									"begin": 7052,
									"end": 7108,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7088,
									"end": 7106,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "127"
								},
								{
									"begin": 7088,
									"end": 7106,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 7088,
									"end": 7106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7088,
									"end": 7106,
									"name": "tag",
									"source": 2,
									"value": "127"
								},
								{
									"begin": 7088,
									"end": 7106,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7052,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "126"
								},
								{
									"begin": 7052,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7132,
									"end": 7170,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "128"
								},
								{
									"begin": 7164,
									"end": 7168,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7158,
									"end": 7169,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7132,
									"end": 7170,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7132,
									"end": 7170,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7132,
									"end": 7170,
									"name": "tag",
									"source": 2,
									"value": "128"
								},
								{
									"begin": 7132,
									"end": 7170,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7217,
									"end": 7284,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "129"
								},
								{
									"begin": 7277,
									"end": 7283,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7269,
									"end": 7275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7263,
									"end": 7267,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 7217,
									"end": 7284,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7217,
									"end": 7284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7217,
									"end": 7284,
									"name": "tag",
									"source": 2,
									"value": "129"
								},
								{
									"begin": 7217,
									"end": 7284,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7311,
									"end": 7312,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7335,
									"end": 7339,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7322,
									"end": 7339,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7322,
									"end": 7339,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7367,
									"end": 7369,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 7359,
									"end": 7365,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7356,
									"end": 7370,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 7384,
									"end": 7385,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "131"
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8041,
									"end": 8042,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8058,
									"end": 8064,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8055,
									"end": 8132,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 8055,
									"end": 8132,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "132"
								},
								{
									"begin": 8055,
									"end": 8132,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8107,
									"end": 8116,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8102,
									"end": 8105,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 8098,
									"end": 8117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8118,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8083,
									"end": 8118,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8083,
									"end": 8118,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8055,
									"end": 8132,
									"name": "tag",
									"source": 2,
									"value": "132"
								},
								{
									"begin": 8055,
									"end": 8132,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8225,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "133"
								},
								{
									"begin": 8218,
									"end": 8224,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 8211,
									"end": 8216,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8225,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8158,
									"end": 8225,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8225,
									"name": "tag",
									"source": 2,
									"value": "133"
								},
								{
									"begin": 8158,
									"end": 8225,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8152,
									"end": 8156,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 8145,
									"end": 8226,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8014,
									"end": 8236,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7349,
									"end": 8236,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "130"
								},
								{
									"begin": 7349,
									"end": 8236,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "tag",
									"source": 2,
									"value": "131"
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7431,
									"end": 7435,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 7427,
									"end": 7436,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 7419,
									"end": 7425,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7415,
									"end": 7437,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7465,
									"end": 7502,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "134"
								},
								{
									"begin": 7497,
									"end": 7501,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 7465,
									"end": 7502,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7465,
									"end": 7502,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7465,
									"end": 7502,
									"name": "tag",
									"source": 2,
									"value": "134"
								},
								{
									"begin": 7465,
									"end": 7502,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7525,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "tag",
									"source": 2,
									"value": "135"
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7552,
									"end": 7559,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7549,
									"end": 7550,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7546,
									"end": 7560,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "137"
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7631,
									"end": 7640,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7626,
									"end": 7629,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 7622,
									"end": 7641,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7616,
									"end": 7642,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7608,
									"end": 7614,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7643,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7682,
									"end": 7683,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 7674,
									"end": 7680,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7670,
									"end": 7684,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7660,
									"end": 7684,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7660,
									"end": 7684,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7729,
									"end": 7731,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7718,
									"end": 7727,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 7714,
									"end": 7732,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7701,
									"end": 7732,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 7701,
									"end": 7732,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7575,
									"end": 7579,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7572,
									"end": 7573,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7568,
									"end": 7580,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7563,
									"end": 7580,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7563,
									"end": 7580,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "135"
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "tag",
									"source": 2,
									"value": "137"
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7774,
									"end": 7780,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 7765,
									"end": 7772,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7762,
									"end": 7781,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 7759,
									"end": 7938,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7759,
									"end": 7938,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "138"
								},
								{
									"begin": 7759,
									"end": 7938,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7832,
									"end": 7841,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7827,
									"end": 7830,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 7823,
									"end": 7842,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7817,
									"end": 7843,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7875,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "139"
								},
								{
									"begin": 7917,
									"end": 7921,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 7909,
									"end": 7915,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 7905,
									"end": 7922,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7894,
									"end": 7903,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7875,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 7875,
									"end": 7923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7875,
									"end": 7923,
									"name": "tag",
									"source": 2,
									"value": "139"
								},
								{
									"begin": 7875,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7867,
									"end": 7873,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7860,
									"end": 7924,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7782,
									"end": 7938,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7759,
									"end": 7938,
									"name": "tag",
									"source": 2,
									"value": "138"
								},
								{
									"begin": 7759,
									"end": 7938,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7984,
									"end": 7985,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 7980,
									"end": 7981,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7972,
									"end": 7978,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 7968,
									"end": 7982,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 7964,
									"end": 7986,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7958,
									"end": 7962,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 7951,
									"end": 7987,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7386,
									"end": 7997,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7386,
									"end": 7997,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7386,
									"end": 7997,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7349,
									"end": 8236,
									"name": "tag",
									"source": 2,
									"value": "130"
								},
								{
									"begin": 7349,
									"end": 8236,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7349,
									"end": 8236,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6939,
									"end": 8242,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6939,
									"end": 8242,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6939,
									"end": 8242,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6847,
									"end": 8242,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6847,
									"end": 8242,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6847,
									"end": 8242,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 177,
									"end": 609,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 177,
									"end": 609,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 177,
									"end": 609,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 609,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 177,
									"end": 609,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 609,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 177,
									"end": 609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 609,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204521ebb049dbcbfa50b067da5c7177c3e375a0f79c2f7e1dda03ec1dc3abbca164736f6c63430008140033",
									".code": [
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "D505ACCF"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "3644E515"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 609,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 391,
											"end": 506,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 391,
											"end": 506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 391,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 391,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 391,
											"end": 506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 391,
											"end": 506,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 391,
											"end": 506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 391,
											"end": 506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 391,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 391,
											"end": 506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 391,
											"end": 506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 391,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 391,
											"end": 506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 391,
											"end": 506,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 391,
											"end": 506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 391,
											"end": 506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 391,
											"end": 506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 391,
											"end": 506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 391,
											"end": 506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 391,
											"end": 506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 391,
											"end": 506,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7435,
											"end": 8008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7435,
											"end": 8008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7435,
											"end": 8008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 6287,
											"end": 6482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 6287,
											"end": 6482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 9969,
											"end": 12160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 9969,
											"end": 12160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 9969,
											"end": 12160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5860,
											"end": 5942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5860,
											"end": 5942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16620,
											"end": 17313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 16620,
											"end": 17313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 6548,
											"end": 6834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 6548,
											"end": 6834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 6548,
											"end": 6834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 12800,
											"end": 13140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 12800,
											"end": 13140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 12800,
											"end": 13140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 512,
											"end": 606,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 512,
											"end": 606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 512,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 512,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 512,
											"end": 606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 512,
											"end": 606,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 512,
											"end": 606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 512,
											"end": 606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 512,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 512,
											"end": 606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 512,
											"end": 606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 512,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 512,
											"end": 606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 512,
											"end": 606,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 512,
											"end": 606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 512,
											"end": 606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 512,
											"end": 606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 512,
											"end": 606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 512,
											"end": 606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 512,
											"end": 606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 512,
											"end": 606,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8195,
											"end": 9601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 8195,
											"end": 9601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 8195,
											"end": 9601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 13324,
											"end": 16539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 13324,
											"end": 16539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6929,
											"end": 7304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 6929,
											"end": 7304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 6929,
											"end": 7304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 391,
											"end": 506,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 391,
											"end": 506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 436,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 483,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 483,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 483,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 483,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 483,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 483,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 483,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 483,
											"end": 489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 483,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 483,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "4D494E492D000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 483,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 483,
											"end": 489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 483,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 491,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 498,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 469,
											"end": 498,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 469,
											"end": 498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 469,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 469,
											"end": 498,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 469,
											"end": 498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 469,
											"end": 498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 469,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 469,
											"end": 498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 469,
											"end": 498,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 469,
											"end": 498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 469,
											"end": 498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 498,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 469,
											"end": 498,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 469,
											"end": 498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 469,
											"end": 498,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 469,
											"end": 498,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 469,
											"end": 498,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 469,
											"end": 498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 469,
											"end": 498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 469,
											"end": 498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 469,
											"end": 498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 462,
											"end": 498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 391,
											"end": 506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 391,
											"end": 506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7668,
											"end": 7675,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7662,
											"end": 7666,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7655,
											"end": 7676,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7702,
											"end": 7722,
											"name": "PUSH",
											"source": 1,
											"value": "7F5E9F20"
										},
										{
											"begin": 7696,
											"end": 7700,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 7689,
											"end": 7723,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7749,
											"end": 7757,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 7743,
											"end": 7747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7736,
											"end": 7758,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7794,
											"end": 7798,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 7788,
											"end": 7792,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 7778,
											"end": 7799,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7808,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7876,
											"end": 7882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7863,
											"end": 7883,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7968,
											"name": "PUSH",
											"source": 1,
											"value": "2C"
										},
										{
											"begin": 7958,
											"end": 7969,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7954,
											"end": 7956,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7950,
											"end": 7970,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 7940,
											"end": 7948,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 7913,
											"end": 7938,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7907,
											"end": 7911,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7901,
											"end": 7905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7896,
											"end": 7971,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8001,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7990,
											"end": 8001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7990,
											"end": 8001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 8008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6339,
											"end": 6353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6447,
											"end": 6465,
											"name": "PUSH",
											"source": 1,
											"value": "5345CDF77EB68F44C"
										},
										{
											"begin": 6441,
											"end": 6466,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6466,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10061,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10073,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10094,
											"end": 10098,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10102,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10104,
											"end": 10110,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10073,
											"end": 10093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 10073,
											"end": 10111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10073,
											"end": 10111,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10073,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10212,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10204,
											"end": 10206,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10200,
											"end": 10213,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 10301,
											"end": 10309,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10299,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10346,
											"end": 10366,
											"name": "PUSH",
											"source": 1,
											"value": "7F5E9F20"
										},
										{
											"begin": 10339,
											"end": 10344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 10330,
											"end": 10334,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 10323,
											"end": 10368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10422,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 10412,
											"end": 10416,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 10402,
											"end": 10423,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10473,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10454,
											"end": 10474,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10572,
											"end": 10573,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10560,
											"end": 10570,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10556,
											"end": 10574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10553,
											"end": 10971,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10553,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 10553,
											"end": 10971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10680,
											"end": 10686,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10677,
											"end": 10699,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10674,
											"end": 10833,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10674,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 10674,
											"end": 10833,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10745,
											"name": "PUSH",
											"source": 1,
											"value": "13BE252B"
										},
										{
											"begin": 10729,
											"end": 10733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10722,
											"end": 10746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10810,
											"end": 10814,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10804,
											"end": 10808,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 10797,
											"end": 10815,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10674,
											"end": 10833,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 10674,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10949,
											"end": 10955,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10937,
											"end": 10947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10933,
											"end": 10956,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10918,
											"end": 10931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10911,
											"end": 10957,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10553,
											"end": 10971,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 10553,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11067,
											"end": 11085,
											"name": "PUSH",
											"source": 1,
											"value": "87A211A2"
										},
										{
											"begin": 11060,
											"end": 11065,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11057,
											"end": 11086,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 11051,
											"end": 11055,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 11044,
											"end": 11087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11139,
											"end": 11143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11133,
											"end": 11137,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 11123,
											"end": 11144,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11182,
											"end": 11197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11176,
											"end": 11198,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11272,
											"end": 11283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11264,
											"end": 11270,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11261,
											"end": 11284,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11258,
											"end": 11404,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11258,
											"end": 11404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 11258,
											"end": 11404,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11316,
											"end": 11326,
											"name": "PUSH",
											"source": 1,
											"value": "F4D678B8"
										},
										{
											"begin": 11310,
											"end": 11314,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11303,
											"end": 11327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11385,
											"end": 11389,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11379,
											"end": 11383,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 11372,
											"end": 11390,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11258,
											"end": 11404,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 11258,
											"end": 11404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11513,
											"end": 11519,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11500,
											"end": 11511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11496,
											"end": 11520,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11479,
											"end": 11494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11472,
											"end": 11521,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11596,
											"end": 11598,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11590,
											"end": 11594,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11583,
											"end": 11599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11649,
											"end": 11653,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11643,
											"end": 11647,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 11633,
											"end": 11654,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11899,
											"end": 11905,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11883,
											"end": 11896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11897,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11873,
											"end": 11906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11858,
											"end": 11871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11851,
											"end": 11907,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11975,
											"end": 11981,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11969,
											"end": 11973,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11962,
											"end": 11982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12069,
											"end": 12073,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 12063,
											"end": 12074,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12059,
											"end": 12061,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12055,
											"end": 12075,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 12047,
											"end": 12052,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12043,
											"end": 12045,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12039,
											"end": 12053,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 12012,
											"end": 12037,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12006,
											"end": 12010,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12000,
											"end": 12004,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11995,
											"end": 12076,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10173,
											"end": 12086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10173,
											"end": 12086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10173,
											"end": 12086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10173,
											"end": 12086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10173,
											"end": 12086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10173,
											"end": 12086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12095,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 12115,
											"end": 12119,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12121,
											"end": 12123,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12131,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12095,
											"end": 12114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12095,
											"end": 12132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12095,
											"end": 12132,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 12095,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12149,
											"end": 12153,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12142,
											"end": 12153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12142,
											"end": 12153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 12160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 5914,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5933,
											"end": 5935,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5926,
											"end": 5935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5926,
											"end": 5935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16677,
											"end": 16691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16703,
											"end": 16719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 16722,
											"end": 16741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16741,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 16722,
											"end": 16741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16703,
											"end": 16741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16703,
											"end": 16741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16869,
											"end": 16870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16861,
											"end": 16871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16861,
											"end": 16871,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 16849,
											"end": 16857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16849,
											"end": 16871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16845,
											"end": 16908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 16845,
											"end": 16908,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16900,
											"end": 16906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 16900,
											"end": 16904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 16900,
											"end": 16906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16900,
											"end": 16906,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 16900,
											"end": 16906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16884,
											"end": 16908,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16884,
											"end": 16908,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16884,
											"end": 16908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16884,
											"end": 16908,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16884,
											"end": 16908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16884,
											"end": 16908,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16873,
											"end": 16908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16873,
											"end": 16908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16845,
											"end": 16908,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 16845,
											"end": 16908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16999,
											"end": 17003,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16993,
											"end": 17004,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17060,
											"end": 17076,
											"name": "PUSH",
											"source": 1,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 17057,
											"end": 17058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17050,
											"end": 17077,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17111,
											"end": 17119,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17104,
											"end": 17108,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17101,
											"end": 17102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17097,
											"end": 17109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17090,
											"end": 17120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17154,
											"end": 17167,
											"name": "PUSH",
											"source": 1,
											"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
										},
										{
											"begin": 17147,
											"end": 17151,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17144,
											"end": 17145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17140,
											"end": 17152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17133,
											"end": 17168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17202,
											"end": 17211,
											"name": "CHAINID",
											"source": 1
										},
										{
											"begin": 17195,
											"end": 17199,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17192,
											"end": 17193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17188,
											"end": 17200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17181,
											"end": 17212,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17246,
											"end": 17255,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 17239,
											"end": 17243,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 17236,
											"end": 17237,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17232,
											"end": 17244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17225,
											"end": 17256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17292,
											"end": 17296,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 17289,
											"end": 17290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17279,
											"end": 17297,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17269,
											"end": 17297,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17269,
											"end": 17297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16970,
											"end": 17307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16970,
											"end": 17307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16620,
											"end": 17313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16620,
											"end": 17313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6611,
											"end": 6625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "PUSH",
											"source": 1,
											"value": "87A211A2"
										},
										{
											"begin": 6710,
											"end": 6714,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 6703,
											"end": 6735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6755,
											"end": 6759,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6748,
											"end": 6767,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 6816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6806,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 6796,
											"end": 6817,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6818,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12860,
											"end": 12874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13023,
											"end": 13040,
											"name": "PUSH",
											"source": 1,
											"value": "38377508"
										},
										{
											"begin": 13017,
											"end": 13021,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 13010,
											"end": 13041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13067,
											"end": 13072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13065,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13054,
											"end": 13073,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13118,
											"end": 13122,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13112,
											"end": 13116,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 13102,
											"end": 13123,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13096,
											"end": 13124,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13086,
											"end": 13124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13086,
											"end": 13124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 13140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 512,
											"end": 606,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 512,
											"end": 606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 559,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 592,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 585,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 585,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 585,
											"end": 598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 512,
											"end": 606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 512,
											"end": 606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8265,
											"end": 8269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8281,
											"end": 8325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 8302,
											"end": 8312,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 8314,
											"end": 8316,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8318,
											"end": 8324,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 8281,
											"end": 8325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8325,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 8281,
											"end": 8325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8474,
											"end": 8492,
											"name": "PUSH",
											"source": 1,
											"value": "87A211A2"
										},
										{
											"begin": 8468,
											"end": 8472,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 8461,
											"end": 8493,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8519,
											"end": 8527,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8506,
											"end": 8528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8580,
											"end": 8584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8574,
											"end": 8578,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 8564,
											"end": 8585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8623,
											"end": 8638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8617,
											"end": 8639,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8713,
											"end": 8724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8705,
											"end": 8711,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8702,
											"end": 8725,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8699,
											"end": 8845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8699,
											"end": 8845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 8699,
											"end": 8845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8757,
											"end": 8767,
											"name": "PUSH",
											"source": 1,
											"value": "F4D678B8"
										},
										{
											"begin": 8751,
											"end": 8755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8744,
											"end": 8768,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8826,
											"end": 8830,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8820,
											"end": 8824,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 8813,
											"end": 8831,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8699,
											"end": 8845,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 8699,
											"end": 8845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8954,
											"end": 8960,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8941,
											"end": 8952,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 8961,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8920,
											"end": 8935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8913,
											"end": 8962,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9037,
											"end": 9039,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9024,
											"end": 9040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9084,
											"end": 9088,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 9074,
											"end": 9095,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9340,
											"end": 9346,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9324,
											"end": 9337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9338,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9314,
											"end": 9347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9299,
											"end": 9312,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9292,
											"end": 9348,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9416,
											"end": 9422,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 9414,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9403,
											"end": 9423,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9504,
											"end": 9508,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 9498,
											"end": 9509,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9494,
											"end": 9496,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9490,
											"end": 9510,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 9480,
											"end": 9488,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 9453,
											"end": 9478,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9447,
											"end": 9451,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9441,
											"end": 9445,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9436,
											"end": 9511,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8387,
											"end": 9521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8387,
											"end": 9521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8387,
											"end": 9521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9530,
											"end": 9573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 9550,
											"end": 9560,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 9562,
											"end": 9564,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9566,
											"end": 9572,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9530,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9530,
											"end": 9573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9530,
											"end": 9573,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 9530,
											"end": 9573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9590,
											"end": 9594,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9583,
											"end": 9594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9583,
											"end": 9594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 9601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13523,
											"end": 13539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13542,
											"end": 13561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 13542,
											"end": 13559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13542,
											"end": 13561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13542,
											"end": 13561,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 13542,
											"end": 13561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13523,
											"end": 13561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13523,
											"end": 13561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13689,
											"end": 13690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13681,
											"end": 13691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13681,
											"end": 13691,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 13669,
											"end": 13677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13669,
											"end": 13691,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13665,
											"end": 13728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 13665,
											"end": 13728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13720,
											"end": 13726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 13720,
											"end": 13724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 13720,
											"end": 13726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13720,
											"end": 13726,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 13720,
											"end": 13726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13704,
											"end": 13728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13704,
											"end": 13728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13704,
											"end": 13728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13704,
											"end": 13728,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13704,
											"end": 13728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13704,
											"end": 13728,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13693,
											"end": 13728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13693,
											"end": 13728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13665,
											"end": 13728,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 13665,
											"end": 13728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13896,
											"end": 13904,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13883,
											"end": 13894,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 13880,
											"end": 13905,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13877,
											"end": 14019,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13877,
											"end": 14019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 13877,
											"end": 14019,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13937,
											"end": 13947,
											"name": "PUSH",
											"source": 1,
											"value": "1A15A3CC"
										},
										{
											"begin": 13931,
											"end": 13935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13924,
											"end": 13948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14000,
											"end": 14004,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13994,
											"end": 13998,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 13987,
											"end": 14005,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13877,
											"end": 14019,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 13877,
											"end": 14019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14047,
											"end": 14051,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14041,
											"end": 14052,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14163,
											"end": 14168,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14159,
											"end": 14161,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14155,
											"end": 14169,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14151,
											"end": 14153,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14147,
											"end": 14170,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 14138,
											"end": 14170,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 14138,
											"end": 14170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14210,
											"end": 14217,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14206,
											"end": 14208,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14202,
											"end": 14218,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14198,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14194,
											"end": 14219,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 14183,
											"end": 14219,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 14183,
											"end": 14219,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14303,
											"end": 14342,
											"name": "PUSH",
											"source": 1,
											"value": "383775081901"
										},
										{
											"begin": 14297,
											"end": 14301,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 14290,
											"end": 14343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14369,
											"end": 14374,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14356,
											"end": 14375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14421,
											"end": 14425,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14415,
											"end": 14419,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 14405,
											"end": 14426,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14463,
											"end": 14472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14457,
											"end": 14473,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14541,
											"end": 14557,
											"name": "PUSH",
											"source": 1,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 14538,
											"end": 14539,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14531,
											"end": 14558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14592,
											"end": 14600,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14585,
											"end": 14589,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14582,
											"end": 14583,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14578,
											"end": 14590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14571,
											"end": 14601,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 14648,
											"name": "PUSH",
											"source": 1,
											"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
										},
										{
											"begin": 14628,
											"end": 14632,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14625,
											"end": 14626,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14621,
											"end": 14633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 14649,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14683,
											"end": 14692,
											"name": "CHAINID",
											"source": 1
										},
										{
											"begin": 14676,
											"end": 14680,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14673,
											"end": 14674,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14662,
											"end": 14693,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14727,
											"end": 14736,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 14724,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14717,
											"end": 14718,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14713,
											"end": 14725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14706,
											"end": 14737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14776,
											"end": 14780,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 14773,
											"end": 14774,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14763,
											"end": 14781,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14757,
											"end": 14761,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 14750,
											"end": 14782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14845,
											"end": 14861,
											"name": "PUSH",
											"source": 1,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 14842,
											"end": 14843,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14835,
											"end": 14862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14896,
											"end": 14901,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 14889,
											"end": 14893,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14886,
											"end": 14887,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14882,
											"end": 14894,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14875,
											"end": 14902,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14936,
											"end": 14943,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14929,
											"end": 14933,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14926,
											"end": 14927,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14922,
											"end": 14934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14915,
											"end": 14944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14978,
											"end": 14983,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14971,
											"end": 14975,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14968,
											"end": 14969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14964,
											"end": 14976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14957,
											"end": 14984,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15018,
											"end": 15028,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15011,
											"end": 15015,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15008,
											"end": 15009,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15004,
											"end": 15016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15063,
											"end": 15071,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15056,
											"end": 15060,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 15053,
											"end": 15054,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15049,
											"end": 15061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15042,
											"end": 15072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15111,
											"end": 15115,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 15108,
											"end": 15109,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15098,
											"end": 15116,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15092,
											"end": 15096,
											"name": "PUSH",
											"source": 1,
											"value": "4E"
										},
										{
											"begin": 15085,
											"end": 15117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15210,
											"name": "PUSH",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 15200,
											"end": 15204,
											"name": "PUSH",
											"source": 1,
											"value": "2C"
										},
										{
											"begin": 15190,
											"end": 15211,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15184,
											"end": 15188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15177,
											"end": 15212,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15248,
											"end": 15249,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15242,
											"end": 15246,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 15238,
											"end": 15250,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15232,
											"end": 15236,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15225,
											"end": 15251,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15277,
											"end": 15278,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15271,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15264,
											"end": 15279,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15305,
											"end": 15306,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15299,
											"end": 15303,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15292,
											"end": 15307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15365,
											"end": 15369,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15359,
											"end": 15363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15353,
											"end": 15357,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15350,
											"end": 15351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15347,
											"end": 15348,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15340,
											"end": 15345,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 15329,
											"end": 15370,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 15786,
											"end": 15791,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 15767,
											"end": 15783,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15761,
											"end": 15784,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15758,
											"end": 15792,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15748,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 15748,
											"end": 15907,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15825,
											"end": 15835,
											"name": "PUSH",
											"source": 1,
											"value": "DDAFBAEF"
										},
										{
											"begin": 15819,
											"end": 15823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15812,
											"end": 15836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15888,
											"end": 15892,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15882,
											"end": 15886,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 15875,
											"end": 15893,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15748,
											"end": 15907,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 15748,
											"end": 15907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16008,
											"end": 16009,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15996,
											"end": 16006,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15992,
											"end": 16010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15981,
											"end": 15990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 16011,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 16222,
											"end": 16229,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 16199,
											"end": 16219,
											"name": "PUSH",
											"source": 1,
											"value": "7F5E9F20"
										},
										{
											"begin": 16194,
											"end": 16197,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 16190,
											"end": 16220,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 16187,
											"end": 16230,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 16181,
											"end": 16185,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16174,
											"end": 16231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16274,
											"end": 16279,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16271,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 16261,
											"end": 16265,
											"name": "PUSH",
											"source": 1,
											"value": "2C"
										},
										{
											"begin": 16251,
											"end": 16272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16244,
											"end": 16280,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16401,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 16387,
											"end": 16392,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16385,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16354,
											"end": 16358,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16347,
											"end": 16351,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16344,
											"end": 16345,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 16340,
											"end": 16352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16335,
											"end": 16402,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 16428,
											"end": 16429,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16422,
											"end": 16426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16415,
											"end": 16430,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16492,
											"end": 16493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16486,
											"end": 16490,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16479,
											"end": 16494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13790,
											"end": 16533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13790,
											"end": 16533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13790,
											"end": 16533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13790,
											"end": 16533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13790,
											"end": 16533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 16539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7150,
											"end": 7157,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7148,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7137,
											"end": 7158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7204,
											"name": "PUSH",
											"source": 1,
											"value": "7F5E9F20"
										},
										{
											"begin": 7178,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 7171,
											"end": 7205,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7225,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7286,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 7276,
											"end": 7280,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 7266,
											"end": 7287,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7260,
											"end": 7288,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7288,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 7304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24588,
											"end": 24679,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 24588,
											"end": 24679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24588,
											"end": 24679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24588,
											"end": 24679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24588,
											"end": 24679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24588,
											"end": 24679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24791,
											"end": 24881,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 24791,
											"end": 24881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24791,
											"end": 24881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24791,
											"end": 24881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24791,
											"end": 24881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24791,
											"end": 24881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12591,
											"end": 12669,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12591,
											"end": 12669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12651,
											"end": 12665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12591,
											"end": 12669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12591,
											"end": 12669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 4930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 5041,
											"end": 5046,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5023,
											"end": 5047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5018,
											"end": 5021,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4936,
											"end": 5054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5157,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5189,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5168,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5168,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 5272,
											"end": 5273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5270,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5257,
											"end": 5274,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5248,
											"end": 5254,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5204,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5060,
											"end": 5282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5396,
											"end": 5398,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5384,
											"end": 5393,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5382,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5371,
											"end": 5394,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5399,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5402,
											"end": 5481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5522,
											"end": 5523,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 5592,
											"end": 5599,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5589,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5572,
											"end": 5581,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5568,
											"end": 5590,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 5547,
											"end": 5600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5600,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5600,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5493,
											"end": 5610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5288,
											"end": 5617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5741,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5623,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5694,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 5710,
											"end": 5715,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5694,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5694,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5694,
											"end": 5716,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 5694,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5684,
											"end": 5717,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5674,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 5674,
											"end": 5735,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5731,
											"end": 5732,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5729,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5733,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5674,
											"end": 5735,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 5674,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5741,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5882,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5747,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5791,
											"end": 5796,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5816,
											"end": 5836,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5836,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5836,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5845,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5870,
											"end": 5875,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5845,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5845,
											"end": 5876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5845,
											"end": 5876,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5845,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5882,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5888,
											"end": 6010,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 5888,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5961,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 5979,
											"end": 5984,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5961,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5961,
											"end": 5985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5961,
											"end": 5985,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 5961,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5954,
											"end": 5959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 5941,
											"end": 6004,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6000,
											"end": 6001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5997,
											"end": 5998,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5990,
											"end": 6002,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 6004,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 5941,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5888,
											"end": 6010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5888,
											"end": 6010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6016,
											"end": 6155,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6016,
											"end": 6155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6062,
											"end": 6067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6100,
											"end": 6106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6087,
											"end": 6107,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6107,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6116,
											"end": 6149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6143,
											"end": 6148,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6116,
											"end": 6149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6116,
											"end": 6149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6116,
											"end": 6149,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6116,
											"end": 6149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6016,
											"end": 6155,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6016,
											"end": 6155,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6016,
											"end": 6155,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6016,
											"end": 6155,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6016,
											"end": 6155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6161,
											"end": 7360,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6161,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6272,
											"end": 6278,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6280,
											"end": 6286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6294,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6304,
											"end": 6310,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6318,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6320,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6369,
											"end": 6372,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6357,
											"end": 6366,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6348,
											"end": 6355,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6344,
											"end": 6367,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6373,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 6337,
											"end": 6457,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6337,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 6337,
											"end": 6457,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 6376,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 6376,
											"end": 6455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6455,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 6376,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6337,
											"end": 6457,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 6337,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6497,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6521,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 6566,
											"end": 6573,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6557,
											"end": 6563,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6546,
											"end": 6555,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 6542,
											"end": 6564,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 6521,
											"end": 6574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6574,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 6521,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6511,
											"end": 6574,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 6511,
											"end": 6574,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6623,
											"end": 6625,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6649,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 6694,
											"end": 6701,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6685,
											"end": 6691,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6683,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 6670,
											"end": 6692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 6649,
											"end": 6702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6702,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 6649,
											"end": 6702,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6639,
											"end": 6702,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 6639,
											"end": 6702,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6594,
											"end": 6712,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6751,
											"end": 6753,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6777,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 6822,
											"end": 6829,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6813,
											"end": 6819,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6802,
											"end": 6811,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 6798,
											"end": 6820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6777,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6777,
											"end": 6830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6777,
											"end": 6830,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 6777,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6830,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6879,
											"end": 6881,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6905,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 6950,
											"end": 6957,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6941,
											"end": 6947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6939,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 6926,
											"end": 6948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6905,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6905,
											"end": 6958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6905,
											"end": 6958,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 6905,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6895,
											"end": 6958,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6895,
											"end": 6958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7007,
											"end": 7010,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 7034,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 7077,
											"end": 7084,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7074,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7057,
											"end": 7066,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7053,
											"end": 7075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7034,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 7034,
											"end": 7085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7034,
											"end": 7085,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 7034,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7024,
											"end": 7085,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7024,
											"end": 7085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6978,
											"end": 7095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7134,
											"end": 7137,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 7161,
											"end": 7214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 7206,
											"end": 7213,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 7197,
											"end": 7203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7186,
											"end": 7195,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7182,
											"end": 7204,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7161,
											"end": 7214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 7161,
											"end": 7214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7161,
											"end": 7214,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 7161,
											"end": 7214,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7214,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7214,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7266,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 7290,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 7335,
											"end": 7342,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7332,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7315,
											"end": 7324,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7311,
											"end": 7333,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7290,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 7290,
											"end": 7343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7290,
											"end": 7343,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 7290,
											"end": 7343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7280,
											"end": 7343,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7280,
											"end": 7343,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7234,
											"end": 7353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6161,
											"end": 7360,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6161,
											"end": 7360,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 6161,
											"end": 7360,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 6161,
											"end": 7360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6161,
											"end": 7360,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6161,
											"end": 7360,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 6161,
											"end": 7360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6161,
											"end": 7360,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6161,
											"end": 7360,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 6161,
											"end": 7360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6161,
											"end": 7360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7366,
											"end": 7840,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 7366,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7434,
											"end": 7440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7442,
											"end": 7448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7491,
											"end": 7493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7479,
											"end": 7488,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7477,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7466,
											"end": 7489,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7494,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 7459,
											"end": 7578,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7459,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 7459,
											"end": 7578,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7497,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 7497,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 7497,
											"end": 7576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7497,
											"end": 7576,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 7497,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7459,
											"end": 7578,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 7459,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7617,
											"end": 7618,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7642,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 7687,
											"end": 7694,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7667,
											"end": 7676,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7663,
											"end": 7685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7642,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 7642,
											"end": 7695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7642,
											"end": 7695,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 7642,
											"end": 7695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7632,
											"end": 7695,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7632,
											"end": 7695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7588,
											"end": 7705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7746,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7770,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7815,
											"end": 7822,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7806,
											"end": 7812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7804,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7813,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7770,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 7770,
											"end": 7823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7770,
											"end": 7823,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7770,
											"end": 7823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7760,
											"end": 7823,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7760,
											"end": 7823,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7715,
											"end": 7833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7366,
											"end": 7840,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7366,
											"end": 7840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7366,
											"end": 7840,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7366,
											"end": 7840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7366,
											"end": 7840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7366,
											"end": 7840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7846,
											"end": 7994,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 7846,
											"end": 7994,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7948,
											"end": 7959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7985,
											"end": 7988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7970,
											"end": 7988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7970,
											"end": 7988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7846,
											"end": 7994,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7846,
											"end": 7994,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7846,
											"end": 7994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7846,
											"end": 7994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7846,
											"end": 7994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8000,
											"end": 8390,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 8000,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8134,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 8167,
											"end": 8172,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8134,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 8134,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8134,
											"end": 8173,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 8134,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8189,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8271,
											"end": 8277,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8266,
											"end": 8269,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8189,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 8189,
											"end": 8278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8189,
											"end": 8278,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8189,
											"end": 8278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8182,
											"end": 8278,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8182,
											"end": 8278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8287,
											"end": 8352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8345,
											"end": 8351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8340,
											"end": 8343,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8333,
											"end": 8337,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8326,
											"end": 8331,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8322,
											"end": 8338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8287,
											"end": 8352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 8287,
											"end": 8352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8287,
											"end": 8352,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8287,
											"end": 8352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8372,
											"end": 8375,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8368,
											"end": 8384,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8384,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8384,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8110,
											"end": 8390,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8000,
											"end": 8390,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8000,
											"end": 8390,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8000,
											"end": 8390,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8000,
											"end": 8390,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8000,
											"end": 8390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8396,
											"end": 8576,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 8396,
											"end": 8576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8444,
											"end": 8521,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8441,
											"end": 8442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8434,
											"end": 8522,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8541,
											"end": 8545,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 8538,
											"end": 8539,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8531,
											"end": 8546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8565,
											"end": 8569,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 8562,
											"end": 8563,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8555,
											"end": 8570,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8582,
											"end": 8902,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 8582,
											"end": 8902,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8626,
											"end": 8632,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8663,
											"end": 8664,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8657,
											"end": 8661,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8653,
											"end": 8665,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8643,
											"end": 8665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8643,
											"end": 8665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8710,
											"end": 8711,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8704,
											"end": 8708,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8700,
											"end": 8712,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8749,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8721,
											"end": 8802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 8721,
											"end": 8802,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8787,
											"end": 8791,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 8779,
											"end": 8785,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8775,
											"end": 8792,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8765,
											"end": 8792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8765,
											"end": 8792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8721,
											"end": 8802,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 8721,
											"end": 8802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8849,
											"end": 8851,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8841,
											"end": 8847,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 8852,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8818,
											"end": 8836,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8815,
											"end": 8853,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8812,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8812,
											"end": 8896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8868,
											"end": 8886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 8868,
											"end": 8886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 8868,
											"end": 8886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8868,
											"end": 8886,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 8868,
											"end": 8886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8812,
											"end": 8896,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8812,
											"end": 8896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8633,
											"end": 8902,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8582,
											"end": 8902,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8582,
											"end": 8902,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8582,
											"end": 8902,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8582,
											"end": 8902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8908,
											"end": 9049,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 8908,
											"end": 9049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8957,
											"end": 8961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8980,
											"end": 8983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8972,
											"end": 8983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8972,
											"end": 8983,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9003,
											"end": 9006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8993,
											"end": 9007,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9037,
											"end": 9041,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9034,
											"end": 9035,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9024,
											"end": 9042,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9016,
											"end": 9042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9016,
											"end": 9042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8908,
											"end": 9049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8908,
											"end": 9049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8908,
											"end": 9049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8908,
											"end": 9049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9953,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 9079,
											"end": 9953,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9185,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9219,
											"end": 9224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9213,
											"end": 9225,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9248,
											"end": 9284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 9274,
											"end": 9283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9248,
											"end": 9284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 9248,
											"end": 9284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9248,
											"end": 9284,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 9248,
											"end": 9284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9300,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 9382,
											"end": 9388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9377,
											"end": 9380,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9300,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 9300,
											"end": 9389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9300,
											"end": 9389,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 9300,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9293,
											"end": 9389,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9293,
											"end": 9389,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9420,
											"end": 9421,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9409,
											"end": 9418,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9405,
											"end": 9422,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9436,
											"end": 9437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9431,
											"end": 9597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9431,
											"end": 9597,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9431,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 9431,
											"end": 9597,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9611,
											"end": 9612,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9606,
											"end": 9947,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9606,
											"end": 9947,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9606,
											"end": 9947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 9606,
											"end": 9947,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 9398,
											"end": 9947,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9431,
											"end": 9597,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 9431,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9519,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 9511,
											"end": 9520,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 9500,
											"end": 9509,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9496,
											"end": 9521,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9491,
											"end": 9494,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9484,
											"end": 9522,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9570,
											"end": 9584,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9563,
											"end": 9585,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9555,
											"end": 9561,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9551,
											"end": 9586,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9546,
											"end": 9549,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9542,
											"end": 9587,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9587,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9431,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 9431,
											"end": 9597,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9606,
											"end": 9947,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 9606,
											"end": 9947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9673,
											"end": 9711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 9705,
											"end": 9710,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9673,
											"end": 9711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 9673,
											"end": 9711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9673,
											"end": 9711,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 9673,
											"end": 9711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9733,
											"end": 9734,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9747,
											"end": 9901,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 9747,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9761,
											"end": 9767,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9758,
											"end": 9759,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9755,
											"end": 9768,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9901,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 9747,
											"end": 9901,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9835,
											"end": 9842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9829,
											"end": 9843,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9825,
											"end": 9826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9820,
											"end": 9823,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9816,
											"end": 9827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9885,
											"end": 9886,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9876,
											"end": 9883,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9872,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9861,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9861,
											"end": 9887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9783,
											"end": 9787,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9780,
											"end": 9781,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9776,
											"end": 9788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9771,
											"end": 9788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9771,
											"end": 9788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 9747,
											"end": 9901,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9747,
											"end": 9901,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 9747,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9936,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9925,
											"end": 9928,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9921,
											"end": 9937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9914,
											"end": 9937,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 9914,
											"end": 9937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9947,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 9398,
											"end": 9947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9186,
											"end": 9953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9186,
											"end": 9953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9953,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9953,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 10388,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 9959,
											"end": 10388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10139,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10158,
											"end": 10253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 10249,
											"end": 10252,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10246,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10158,
											"end": 10253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 10158,
											"end": 10253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10158,
											"end": 10253,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 10158,
											"end": 10253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10151,
											"end": 10253,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10151,
											"end": 10253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10270,
											"end": 10362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10358,
											"end": 10361,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10355,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10270,
											"end": 10362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 10270,
											"end": 10362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10270,
											"end": 10362,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10270,
											"end": 10362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10263,
											"end": 10362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10263,
											"end": 10362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10379,
											"end": 10382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10372,
											"end": 10382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10372,
											"end": 10382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 10388,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 10388,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 10388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 10388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 10388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 10388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/LP.sol",
								"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AllowanceOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AllowanceUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PermitExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TotalSupplyOverflow\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"result\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AllowanceOverflow()\":[{\"details\":\"The allowance has overflowed.\"}],\"AllowanceUnderflow()\":[{\"details\":\"The allowance has underflowed.\"}],\"InsufficientAllowance()\":[{\"details\":\"Insufficient allowance.\"}],\"InsufficientBalance()\":[{\"details\":\"Insufficient balance.\"}],\"InvalidPermit()\":[{\"details\":\"The permit is invalid.\"}],\"PermitExpired()\":[{\"details\":\"The permit has expired.\"}],\"TotalSupplyOverflow()\":[{\"details\":\"The total supply has overflowed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `amount` tokens is approved by `owner` to be used by `spender`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `amount` tokens is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the EIP-712 domain separator for the EIP-2612 permit.\"},\"allowance(address,address)\":{\"details\":\"Returns the amount of tokens that `spender` can spend on behalf of `owner`.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `owner`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value is used to compute the signature for EIP-2612 permit.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over the tokens of `owner`, authorized by a signed approval by `owner`. Emits a {Approval} event.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Transfer `amount` tokens from the caller to `to`. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LP.sol\":\"LP\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LP.sol\":{\"keccak256\":\"0xc8d7adf2dfa727059c2136cf002a44a515f62ce59fd26c1ccce2539be893cf09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80f6bbbd890b9faa6bb3a011b0cbe83f46e0e0af8cda401b8b5c1447f680c10b\",\"dweb:/ipfs/QmSkeNeFGtjSoaHbEqkFAFQh38bxoKKvmdZN4xTNWCwZid\"]},\"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb4a3f9ba8a05107f7370de42cff57f3ad26dafd438712c11531a5892de2f59e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0a9ca06e3cf6dea1f9a4c5599581573b7d81cd64dc3afb582f325ccf5fdd6dc\",\"dweb:/ipfs/Qmb9r5dDceNF4W8S5u6i85RsNTgE5XG9HbTXkyS25ad3C6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 14,
								"contract": "contracts/LP.sol:LP",
								"label": "s_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [],
							"name": "AllowanceOverflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AllowanceUnderflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidPermit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PermitExpired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TotalSupplyOverflow",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "result",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Solady (https://github.com/vectorized/solady/blob/main/src/tokens/ERC20.sol)Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol)",
						"details": "Note: - The ERC20 standard allows minting and transferring to and from the zero address,   minting and transferring zero tokens, as well as self-approvals.   For performance, this implementation WILL NOT revert for such actions.   Please add any checks with overrides if desired. - The `permit` function uses the ecrecover precompile (0x1). If you are overriding: - NEVER violate the ERC20 invariant:   the total sum of all balances must be equal to `totalSupply()`. - Check that the overridden function is actually used in the function you want to   change the behavior of. Much of the code has been manually inlined for performance.",
						"errors": {
							"AllowanceOverflow()": [
								{
									"details": "The allowance has overflowed."
								}
							],
							"AllowanceUnderflow()": [
								{
									"details": "The allowance has underflowed."
								}
							],
							"InsufficientAllowance()": [
								{
									"details": "Insufficient allowance."
								}
							],
							"InsufficientBalance()": [
								{
									"details": "Insufficient balance."
								}
							],
							"InvalidPermit()": [
								{
									"details": "The permit is invalid."
								}
							],
							"PermitExpired()": [
								{
									"details": "The permit has expired."
								}
							],
							"TotalSupplyOverflow()": [
								{
									"details": "The total supply has overflowed."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `amount` tokens is approved by `owner` to be used by `spender`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `amount` tokens is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the EIP-712 domain separator for the EIP-2612 permit."
							},
							"allowance(address,address)": {
								"details": "Returns the amount of tokens that `spender` can spend on behalf of `owner`."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `owner`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value is used to compute the signature for EIP-2612 permit."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over the tokens of `owner`, authorized by a signed approval by `owner`. Emits a {Approval} event."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Transfer `amount` tokens from the caller to `to`. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event."
							}
						},
						"stateVariables": {
							"_ALLOWANCE_SLOT_SEED": {
								"details": "The allowance slot of (`owner`, `spender`) is given by: ```     mstore(0x20, spender)     mstore(0x0c, _ALLOWANCE_SLOT_SEED)     mstore(0x00, owner)     let allowanceSlot := keccak256(0x0c, 0x34) ```"
							},
							"_APPROVAL_EVENT_SIGNATURE": {
								"details": "`keccak256(bytes(\"Approval(address,address,uint256)\"))`."
							},
							"_BALANCE_SLOT_SEED": {
								"details": "The balance slot of `owner` is given by: ```     mstore(0x0c, _BALANCE_SLOT_SEED)     mstore(0x00, owner)     let balanceSlot := keccak256(0x0c, 0x20) ```"
							},
							"_DOMAIN_TYPEHASH": {
								"details": "`keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\")`."
							},
							"_NONCES_SLOT_SEED": {
								"details": "The nonce slot of `owner` is given by: ```     mstore(0x0c, _NONCES_SLOT_SEED)     mstore(0x00, owner)     let nonceSlot := keccak256(0x0c, 0x20) ```"
							},
							"_NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX": {
								"details": "`(_NONCES_SLOT_SEED << 16) | 0x1901`."
							},
							"_PERMIT_TYPEHASH": {
								"details": "`keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\")`."
							},
							"_TOTAL_SUPPLY_SLOT": {
								"details": "The storage slot for the total supply."
							},
							"_TRANSFER_EVENT_SIGNATURE": {
								"details": "`keccak256(bytes(\"Transfer(address,address,uint256)\"))`."
							},
							"_VERSION_HASH": {
								"details": "`keccak256(\"1\")`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AllowanceOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AllowanceUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PermitExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TotalSupplyOverflow\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"result\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solady (https://github.com/vectorized/solady/blob/main/src/tokens/ERC20.sol)Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol)\",\"details\":\"Note: - The ERC20 standard allows minting and transferring to and from the zero address,   minting and transferring zero tokens, as well as self-approvals.   For performance, this implementation WILL NOT revert for such actions.   Please add any checks with overrides if desired. - The `permit` function uses the ecrecover precompile (0x1). If you are overriding: - NEVER violate the ERC20 invariant:   the total sum of all balances must be equal to `totalSupply()`. - Check that the overridden function is actually used in the function you want to   change the behavior of. Much of the code has been manually inlined for performance.\",\"errors\":{\"AllowanceOverflow()\":[{\"details\":\"The allowance has overflowed.\"}],\"AllowanceUnderflow()\":[{\"details\":\"The allowance has underflowed.\"}],\"InsufficientAllowance()\":[{\"details\":\"Insufficient allowance.\"}],\"InsufficientBalance()\":[{\"details\":\"Insufficient balance.\"}],\"InvalidPermit()\":[{\"details\":\"The permit is invalid.\"}],\"PermitExpired()\":[{\"details\":\"The permit has expired.\"}],\"TotalSupplyOverflow()\":[{\"details\":\"The total supply has overflowed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `amount` tokens is approved by `owner` to be used by `spender`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `amount` tokens is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the EIP-712 domain separator for the EIP-2612 permit.\"},\"allowance(address,address)\":{\"details\":\"Returns the amount of tokens that `spender` can spend on behalf of `owner`.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `owner`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value is used to compute the signature for EIP-2612 permit.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over the tokens of `owner`, authorized by a signed approval by `owner`. Emits a {Approval} event.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Transfer `amount` tokens from the caller to `to`. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event.\"}},\"stateVariables\":{\"_ALLOWANCE_SLOT_SEED\":{\"details\":\"The allowance slot of (`owner`, `spender`) is given by: ```     mstore(0x20, spender)     mstore(0x0c, _ALLOWANCE_SLOT_SEED)     mstore(0x00, owner)     let allowanceSlot := keccak256(0x0c, 0x34) ```\"},\"_APPROVAL_EVENT_SIGNATURE\":{\"details\":\"`keccak256(bytes(\\\"Approval(address,address,uint256)\\\"))`.\"},\"_BALANCE_SLOT_SEED\":{\"details\":\"The balance slot of `owner` is given by: ```     mstore(0x0c, _BALANCE_SLOT_SEED)     mstore(0x00, owner)     let balanceSlot := keccak256(0x0c, 0x20) ```\"},\"_DOMAIN_TYPEHASH\":{\"details\":\"`keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")`.\"},\"_NONCES_SLOT_SEED\":{\"details\":\"The nonce slot of `owner` is given by: ```     mstore(0x0c, _NONCES_SLOT_SEED)     mstore(0x00, owner)     let nonceSlot := keccak256(0x0c, 0x20) ```\"},\"_NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX\":{\"details\":\"`(_NONCES_SLOT_SEED << 16) | 0x1901`.\"},\"_PERMIT_TYPEHASH\":{\"details\":\"`keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")`.\"},\"_TOTAL_SUPPLY_SLOT\":{\"details\":\"The storage slot for the total supply.\"},\"_TRANSFER_EVENT_SIGNATURE\":{\"details\":\"`keccak256(bytes(\\\"Transfer(address,address,uint256)\\\"))`.\"},\"_VERSION_HASH\":{\"details\":\"`keccak256(\\\"1\\\")`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Simple ERC20 + EIP-2612 implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb4a3f9ba8a05107f7370de42cff57f3ad26dafd438712c11531a5892de2f59e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0a9ca06e3cf6dea1f9a4c5599581573b7d81cd64dc3afb582f325ccf5fdd6dc\",\"dweb:/ipfs/Qmb9r5dDceNF4W8S5u6i85RsNTgE5XG9HbTXkyS25ad3C6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Simple ERC20 + EIP-2612 implementation.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/LP.sol": {
				"ast": {
					"absolutePath": "contracts/LP.sol",
					"exportedSymbols": {
						"ERC20": [
							467
						],
						"LP": [
							48
						]
					},
					"id": 49,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol",
							"file": "https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 49,
							"sourceUnit": 468,
							"src": "59:114:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC20",
										"nameLocations": [
											"192:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 467,
										"src": "192:5:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "192:5:0"
								}
							],
							"canonicalName": "LP",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 48,
							"linearizedBaseContracts": [
								48,
								467
							],
							"name": "LP",
							"nameLocation": "186:2:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 7,
									"mutability": "constant",
									"name": "PREFIX",
									"nameLocation": "223:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "207:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 5,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "207:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4d494e492d",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "232:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_e06214bb88d0ce5635150a0573bd86de7b461812d314f7f22d631376a97e0eb5",
											"typeString": "literal_string \"MINI-\""
										},
										"value": "MINI-"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 12,
									"mutability": "constant",
									"name": "MINIMUM_LIQUIDITY",
									"nameLocation": "262:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "248:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "248:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 9,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "282:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "33",
											"id": 10,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "286:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"src": "282:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 14,
									"mutability": "mutable",
									"name": "s_name",
									"nameLocation": "303:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "296:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 13,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "296:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "350:33:0",
										"statements": [
											{
												"expression": {
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 19,
														"name": "s_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "361:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 20,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "370:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "361:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "361:14:0"
											}
										]
									},
									"id": 24,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "344:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "330:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 15,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "330:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "329:21:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:0:0"
									},
									"scope": 48,
									"src": "318:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										136
									],
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "451:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "PREFIX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "483:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 34,
															"name": "s_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "469:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 30,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "469:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "476:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "469:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "469:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 29,
												"id": 36,
												"nodeType": "Return",
												"src": "462:36:0"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "400:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 26,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "419:8:0"
									},
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "404:2:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "436:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 27,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "436:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "435:15:0"
									},
									"scope": 48,
									"src": "391:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										142
									],
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "574:32:0",
										"statements": [
											{
												"expression": {
													"id": 44,
													"name": "s_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 14,
													"src": "592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 43,
												"id": 45,
												"nodeType": "Return",
												"src": "585:13:0"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "521:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 40,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "542:8:0"
									},
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "527:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "559:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 41,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:15:0"
									},
									"scope": 48,
									"src": "512:94:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 49,
							"src": "177:432:0",
							"usedErrors": [
								54,
								57,
								60,
								63,
								66,
								69,
								72
							],
							"usedEvents": [
								81,
								90
							]
						}
					],
					"src": "32:577:0"
				},
				"id": 0
			},
			"https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/Vectorized/solady/blob/e4a14a5b365b353352f7c38e699a2bc9363d6576/src/tokens/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							467
						]
					},
					"id": 468,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 50,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 51,
								"nodeType": "StructuredDocumentation",
								"src": "57:1083:1",
								"text": "@notice Simple ERC20 + EIP-2612 implementation.\n @author Solady (https://github.com/vectorized/solady/blob/main/src/tokens/ERC20.sol)\n @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n @author Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol)\n @dev Note:\n - The ERC20 standard allows minting and transferring to and from the zero address,\n   minting and transferring zero tokens, as well as self-approvals.\n   For performance, this implementation WILL NOT revert for such actions.\n   Please add any checks with overrides if desired.\n - The `permit` function uses the ecrecover precompile (0x1).\n If you are overriding:\n - NEVER violate the ERC20 invariant:\n   the total sum of all balances must be equal to `totalSupply()`.\n - Check that the overridden function is actually used in the function you want to\n   change the behavior of. Much of the code has been manually inlined for performance."
							},
							"fullyImplemented": false,
							"id": 467,
							"linearizedBaseContracts": [
								467
							],
							"name": "ERC20",
							"nameLocation": "1158:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "1453:41:1",
										"text": "@dev The total supply has overflowed."
									},
									"errorSelector": "e5cfe957",
									"id": 54,
									"name": "TotalSupplyOverflow",
									"nameLocation": "1505:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1524:2:1"
									},
									"src": "1499:28:1"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1533:38:1",
										"text": "@dev The allowance has overflowed."
									},
									"errorSelector": "f9067066",
									"id": 57,
									"name": "AllowanceOverflow",
									"nameLocation": "1582:17:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1599:2:1"
									},
									"src": "1576:26:1"
								},
								{
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "1608:39:1",
										"text": "@dev The allowance has underflowed."
									},
									"errorSelector": "8301ab38",
									"id": 60,
									"name": "AllowanceUnderflow",
									"nameLocation": "1658:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1676:2:1"
									},
									"src": "1652:27:1"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1685:30:1",
										"text": "@dev Insufficient balance."
									},
									"errorSelector": "f4d678b8",
									"id": 63,
									"name": "InsufficientBalance",
									"nameLocation": "1726:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1745:2:1"
									},
									"src": "1720:28:1"
								},
								{
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "1754:32:1",
										"text": "@dev Insufficient allowance."
									},
									"errorSelector": "13be252b",
									"id": 66,
									"name": "InsufficientAllowance",
									"nameLocation": "1797:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:2:1"
									},
									"src": "1791:30:1"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "1827:31:1",
										"text": "@dev The permit is invalid."
									},
									"errorSelector": "ddafbaef",
									"id": 69,
									"name": "InvalidPermit",
									"nameLocation": "1869:13:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1882:2:1"
									},
									"src": "1863:22:1"
								},
								{
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "1891:32:1",
										"text": "@dev The permit has expired."
									},
									"errorSelector": "1a15a3cc",
									"id": 72,
									"name": "PermitExpired",
									"nameLocation": "1934:13:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1947:2:1"
									},
									"src": "1928:22:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2239:73:1",
										"text": "@dev Emitted when `amount` tokens is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 81,
									"name": "Transfer",
									"nameLocation": "2323:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2348:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2332:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2370:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2354:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2382:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2374:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:58:1"
									},
									"src": "2317:73:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2396:85:1",
										"text": "@dev Emitted when `amount` tokens is approved by `owner` to be used by `spender`."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 90,
									"name": "Approval",
									"nameLocation": "2492:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2517:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2501:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2540:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2524:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2557:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2549:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2549:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2500:64:1"
									},
									"src": "2486:79:1"
								},
								{
									"constant": true,
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2571:65:1",
										"text": "@dev `keccak256(bytes(\"Transfer(address,address,uint256)\"))`."
									},
									"id": 94,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "2666:25:1",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "2641:127:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 92,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2641:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 93,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2702:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "2775:65:1",
										"text": "@dev `keccak256(bytes(\"Approval(address,address,uint256)\"))`."
									},
									"id": 98,
									"mutability": "constant",
									"name": "_APPROVAL_EVENT_SIGNATURE",
									"nameLocation": "2870:25:1",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "2845:127:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2845:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307838633562653165356562656337643562643134663731343237643165383466336464303331346330663762323239316535623230306163386337633362393235",
										"id": 97,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2906:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_63486140976153616755203102783360879283472101686154884697241723088393386309925_by_1",
											"typeString": "int_const 6348...(69 digits omitted)...9925"
										},
										"value": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3262:47:1",
										"text": "@dev The storage slot for the total supply."
									},
									"id": 102,
									"mutability": "constant",
									"name": "_TOTAL_SUPPLY_SLOT",
									"nameLocation": "3339:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "3314:66:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 100,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3314:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3078303533343563646637376562363866343463",
										"id": 101,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3360:20:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_96006856662521017420_by_1",
											"typeString": "int_const 96006856662521017420"
										},
										"value": "0x05345cdf77eb68f44c"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "3387:203:1",
										"text": "@dev The balance slot of `owner` is given by:\n ```\n     mstore(0x0c, _BALANCE_SLOT_SEED)\n     mstore(0x00, owner)\n     let balanceSlot := keccak256(0x0c, 0x20)\n ```"
									},
									"id": 106,
									"mutability": "constant",
									"name": "_BALANCE_SLOT_SEED",
									"nameLocation": "3620:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "3595:56:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 104,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3595:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783837613231316132",
										"id": 105,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3641:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2275545506_by_1",
											"typeString": "int_const 2275545506"
										},
										"value": "0x87a211a2"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3658:256:1",
										"text": "@dev The allowance slot of (`owner`, `spender`) is given by:\n ```\n     mstore(0x20, spender)\n     mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n     mstore(0x00, owner)\n     let allowanceSlot := keccak256(0x0c, 0x34)\n ```"
									},
									"id": 110,
									"mutability": "constant",
									"name": "_ALLOWANCE_SLOT_SEED",
									"nameLocation": "3944:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "3919:58:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 108,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3919:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783766356539663230",
										"id": 109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3967:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2136907552_by_1",
											"typeString": "int_const 2136907552"
										},
										"value": "0x7f5e9f20"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "3984:198:1",
										"text": "@dev The nonce slot of `owner` is given by:\n ```\n     mstore(0x0c, _NONCES_SLOT_SEED)\n     mstore(0x00, owner)\n     let nonceSlot := keccak256(0x0c, 0x20)\n ```"
									},
									"id": 114,
									"mutability": "constant",
									"name": "_NONCES_SLOT_SEED",
									"nameLocation": "4212:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "4187:55:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 112,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4187:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783338333737353038",
										"id": 113,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4232:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_943158536_by_1",
											"typeString": "int_const 943158536"
										},
										"value": "0x38377508"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "4532:46:1",
										"text": "@dev `(_NONCES_SLOT_SEED << 16) | 0x1901`."
									},
									"id": 118,
									"mutability": "constant",
									"name": "_NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX",
									"nameLocation": "4608:39:1",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "4583:81:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4583:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3078333833373735303831393031",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4650:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_61810837821697_by_1",
											"typeString": "int_const 61810837821697"
										},
										"value": "0x383775081901"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "4671:107:1",
										"text": "@dev `keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\")`."
									},
									"id": 122,
									"mutability": "constant",
									"name": "_DOMAIN_TYPEHASH",
									"nameLocation": "4808:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "4783:118:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 120,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4783:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307838623733633363363962623866653364353132656363346366373539636337393233396637623137396230666661636161396137356435323262333934303066",
										"id": 121,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4835:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_63076024560530113402979550242307453568063438748328787417531900361828837441551_by_1",
											"typeString": "int_const 6307...(69 digits omitted)...1551"
										},
										"value": "0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "4908:26:1",
										"text": "@dev `keccak256(\"1\")`."
									},
									"id": 126,
									"mutability": "constant",
									"name": "_VERSION_HASH",
									"nameLocation": "4964:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "4939:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 124,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4939:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307863383965666461613534633066323063376164663631323838326466303935306635613935313633376530333037636463623463363732663239386238626336",
										"id": 125,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4988:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_90743482286830539503240959006302832933333810038750515972785732718729991261126_by_1",
											"typeString": "int_const 9074...(69 digits omitted)...1126"
										},
										"value": "0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "5061:107:1",
										"text": "@dev `keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\")`."
									},
									"id": 130,
									"mutability": "constant",
									"name": "_PERMIT_TYPEHASH",
									"nameLocation": "5198:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "5173:118:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 128,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5173:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 129,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5225:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "5581:39:1",
										"text": "@dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "5634:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5638:2:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "5670:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 133,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5670:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5669:15:1"
									},
									"scope": 467,
									"src": "5625:60:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "5691:41:1",
										"text": "@dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "5746:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5752:2:1"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "5784:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 139,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5784:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5783:15:1"
									},
									"scope": 467,
									"src": "5737:62:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "5916:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5933:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 147,
												"id": 149,
												"nodeType": "Return",
												"src": "5926:9:1"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "5805:50:1",
										"text": "@dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "5869:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5877:2:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "5909:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 145,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5909:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5908:7:1"
									},
									"scope": 467,
									"src": "5860:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "6355:127:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6417:59:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6431:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "_TOTAL_SUPPLY_SLOT",
																		"nodeType": "YulIdentifier",
																		"src": "6447:18:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "6441:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6441:25:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6431:6:1"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 102,
														"isOffset": false,
														"isSlot": false,
														"src": "6447:18:1",
														"valueSize": 1
													},
													{
														"declaration": 155,
														"isOffset": false,
														"isSlot": false,
														"src": "6431:6:1",
														"valueSize": 1
													}
												],
												"id": 157,
												"nodeType": "InlineAssembly",
												"src": "6408:68:1"
											}
										]
									},
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "6231:51:1",
										"text": "@dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "6296:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6307:2:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "6347:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6339:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6339:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6338:16:1"
									},
									"scope": 467,
									"src": "6287:195:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "6627:207:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6689:139:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6710:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_BALANCE_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "6716:18:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6703:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6703:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6703:32:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6755:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "6761:5:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6748:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6748:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6748:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6780:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6806:4:1",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6812:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "6796:9:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6796:21:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "6790:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6790:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6780:6:1"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "6716:18:1",
														"valueSize": 1
													},
													{
														"declaration": 162,
														"isOffset": false,
														"isSlot": false,
														"src": "6761:5:1",
														"valueSize": 1
													},
													{
														"declaration": 165,
														"isOffset": false,
														"isSlot": false,
														"src": "6780:6:1",
														"valueSize": 1
													}
												],
												"id": 167,
												"nodeType": "InlineAssembly",
												"src": "6680:148:1"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6488:55:1",
										"text": "@dev Returns the amount of tokens owned by `owner`."
									},
									"functionSelector": "70a08231",
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "6557:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6575:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6566:15:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "6619:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6611:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6611:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6610:16:1"
									},
									"scope": 467,
									"src": "6548:286:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "7061:243:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7123:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7144:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "spender",
																		"nodeType": "YulIdentifier",
																		"src": "7150:7:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7137:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7137:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7137:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7178:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_ALLOWANCE_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "7184:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7171:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7171:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7171:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7225:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "7231:5:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7250:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7276:4:1",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7282:4:1",
																				"type": "",
																				"value": "0x34"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "7266:9:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7266:21:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "7260:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7260:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7250:6:1"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 110,
														"isOffset": false,
														"isSlot": false,
														"src": "7184:20:1",
														"valueSize": 1
													},
													{
														"declaration": 172,
														"isOffset": false,
														"isSlot": false,
														"src": "7231:5:1",
														"valueSize": 1
													},
													{
														"declaration": 177,
														"isOffset": false,
														"isSlot": false,
														"src": "7250:6:1",
														"valueSize": 1
													},
													{
														"declaration": 174,
														"isOffset": false,
														"isSlot": false,
														"src": "7150:7:1",
														"valueSize": 1
													}
												],
												"id": 179,
												"nodeType": "InlineAssembly",
												"src": "7114:184:1"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "6840:84:1",
										"text": "@dev Returns the amount of tokens that `spender` can spend on behalf of `owner`."
									},
									"functionSelector": "dd62ed3e",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "6938:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6956:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "6948:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6948:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6971:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "6963:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6963:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6947:32:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "7049:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7041:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7040:16:1"
									},
									"scope": 467,
									"src": "6929:375:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "7515:493:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7577:404:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7662:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "spender",
																		"nodeType": "YulIdentifier",
																		"src": "7668:7:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7655:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7655:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7655:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_ALLOWANCE_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "7702:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7689:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7689:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7689:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7743:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "7749:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7749:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7736:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7736:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7736:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7788:4:1",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7794:4:1",
																				"type": "",
																				"value": "0x34"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "7778:9:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7778:21:1"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "7801:6:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "7771:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7771:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7771:37:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7870:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "7876:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7863:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7863:20:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7863:20:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7901:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7907:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_APPROVAL_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "7913:25:1"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "7940:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7940:8:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7954:2:1",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7964:4:1",
																						"type": "",
																						"value": "0x2c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "7958:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7958:11:1"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "7950:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7950:20:1"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nodeType": "YulIdentifier",
																	"src": "7896:4:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7896:75:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7896:75:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 110,
														"isOffset": false,
														"isSlot": false,
														"src": "7702:20:1",
														"valueSize": 1
													},
													{
														"declaration": 98,
														"isOffset": false,
														"isSlot": false,
														"src": "7913:25:1",
														"valueSize": 1
													},
													{
														"declaration": 186,
														"isOffset": false,
														"isSlot": false,
														"src": "7801:6:1",
														"valueSize": 1
													},
													{
														"declaration": 186,
														"isOffset": false,
														"isSlot": false,
														"src": "7876:6:1",
														"valueSize": 1
													},
													{
														"declaration": 184,
														"isOffset": false,
														"isSlot": false,
														"src": "7668:7:1",
														"valueSize": 1
													}
												],
												"id": 191,
												"nodeType": "InlineAssembly",
												"src": "7568:413:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7997:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 190,
												"id": 193,
												"nodeType": "Return",
												"src": "7990:11:1"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7310:120:1",
										"text": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Emits a {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "7444:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7477:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7469:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7469:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7451:33:1"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7509:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7509:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7508:6:1"
									},
									"scope": 467,
									"src": "7435:573:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "8271:1330:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 206,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8302:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8306:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8302:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 208,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "8314:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "8318:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 205,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "8281:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8281:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "8281:44:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8387:1134:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8468:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_BALANCE_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "8474:18:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8461:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8461:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8461:32:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8513:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "8519:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8519:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8506:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8506:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8506:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8541:44:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8574:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8580:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "8564:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8564:21:1"
															},
															"variables": [
																{
																	"name": "fromBalanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "8545:15:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8598:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "8623:15:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "8617:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8617:22:1"
															},
															"variables": [
																{
																	"name": "fromBalance",
																	"nodeType": "YulTypedName",
																	"src": "8602:11:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8726:119:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8751:4:1",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8757:10:1",
																					"type": "",
																					"value": "0xf4d678b8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8744:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8744:24:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8744:24:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8820:4:1",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8826:4:1",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8813:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8813:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8813:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "8705:6:1"
																	},
																	{
																		"name": "fromBalance",
																		"nodeType": "YulIdentifier",
																		"src": "8713:11:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8702:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8702:23:1"
															},
															"nodeType": "YulIf",
															"src": "8699:146:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "8920:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "fromBalance",
																				"nodeType": "YulIdentifier",
																				"src": "8941:11:1"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "8954:6:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8937:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8937:24:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "8913:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8913:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8913:49:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9031:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "9037:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9024:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9024:16:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9024:16:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9053:42:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9084:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9090:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "9074:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9074:21:1"
															},
															"variables": [
																{
																	"name": "toBalanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "9057:13:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "toBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "9299:13:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "toBalanceSlot",
																						"nodeType": "YulIdentifier",
																						"src": "9324:13:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "9318:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9318:20:1"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "9340:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9314:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9314:33:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "9292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9292:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9292:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9410:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "9416:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9403:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9403:20:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9403:20:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9441:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9447:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "9453:25:1"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9480:8:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9494:2:1",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9504:4:1",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "9498:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9498:11:1"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "9490:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:20:1"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nodeType": "YulIdentifier",
																	"src": "9436:4:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9436:75:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9436:75:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "8474:18:1",
														"valueSize": 1
													},
													{
														"declaration": 94,
														"isOffset": false,
														"isSlot": false,
														"src": "9453:25:1",
														"valueSize": 1
													},
													{
														"declaration": 200,
														"isOffset": false,
														"isSlot": false,
														"src": "8705:6:1",
														"valueSize": 1
													},
													{
														"declaration": 200,
														"isOffset": false,
														"isSlot": false,
														"src": "8954:6:1",
														"valueSize": 1
													},
													{
														"declaration": 200,
														"isOffset": false,
														"isSlot": false,
														"src": "9340:6:1",
														"valueSize": 1
													},
													{
														"declaration": 200,
														"isOffset": false,
														"isSlot": false,
														"src": "9416:6:1",
														"valueSize": 1
													},
													{
														"declaration": 198,
														"isOffset": false,
														"isSlot": false,
														"src": "9037:2:1",
														"valueSize": 1
													}
												],
												"id": 212,
												"nodeType": "InlineAssembly",
												"src": "8378:1143:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 214,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9550:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9554:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9550:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "9562:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 217,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "9566:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 213,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "9530:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9530:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "9530:43:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9590:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 204,
												"id": 221,
												"nodeType": "Return",
												"src": "9583:11:1"
											}
										]
									},
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "8014:176:1",
										"text": "@dev Transfer `amount` tokens from the caller to `to`.\n Requirements:\n - `from` must at least have `amount`.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8204:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8221:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "8213:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8213:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8233:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "8225:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8225:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8212:28:1"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "8265:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8265:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:6:1"
									},
									"scope": 467,
									"src": "8195:1406:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "10063:2097:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 236,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "10094:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 237,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "10100:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 238,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "10104:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 235,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "10073:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10073:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "10073:38:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10173:1913:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10187:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10204:2:1",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "10208:4:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "10200:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10200:13:1"
															},
															"variables": [
																{
																	"name": "from_",
																	"nodeType": "YulTypedName",
																	"src": "10191:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10295:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "10301:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10301:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10288:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10288:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10288:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10330:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"arguments": [
																			{
																				"name": "from_",
																				"nodeType": "YulIdentifier",
																				"src": "10339:5:1"
																			},
																			{
																				"name": "_ALLOWANCE_SLOT_SEED",
																				"nodeType": "YulIdentifier",
																				"src": "10346:20:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "10336:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10336:31:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10323:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10323:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10323:45:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10381:42:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10412:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10418:4:1",
																		"type": "",
																		"value": "0x34"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "10402:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10402:21:1"
															},
															"variables": [
																{
																	"name": "allowanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "10385:13:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10436:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "allowanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "10460:13:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "10454:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10454:20:1"
															},
															"variables": [
																{
																	"name": "allowance_",
																	"nodeType": "YulTypedName",
																	"src": "10440:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10575:396:1",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "10700:133:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10729:4:1",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10735:10:1",
																								"type": "",
																								"value": "0x13be252b"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "10722:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10722:24:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "10722:24:1"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10804:4:1",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10810:4:1",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "10797:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10797:18:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "10797:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "amount",
																					"nodeType": "YulIdentifier",
																					"src": "10680:6:1"
																				},
																				{
																					"name": "allowance_",
																					"nodeType": "YulIdentifier",
																					"src": "10688:10:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "10677:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10677:22:1"
																		},
																		"nodeType": "YulIf",
																		"src": "10674:159:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "allowanceSlot",
																					"nodeType": "YulIdentifier",
																					"src": "10918:13:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "allowance_",
																							"nodeType": "YulIdentifier",
																							"src": "10937:10:1"
																						},
																						{
																							"name": "amount",
																							"nodeType": "YulIdentifier",
																							"src": "10949:6:1"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "10933:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10933:23:1"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "10911:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10911:46:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10911:46:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "allowance_",
																		"nodeType": "YulIdentifier",
																		"src": "10560:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10572:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10556:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10556:18:1"
															},
															"nodeType": "YulIf",
															"src": "10553:418:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11051:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"arguments": [
																			{
																				"name": "from_",
																				"nodeType": "YulIdentifier",
																				"src": "11060:5:1"
																			},
																			{
																				"name": "_BALANCE_SLOT_SEED",
																				"nodeType": "YulIdentifier",
																				"src": "11067:18:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "11057:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11057:29:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11044:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11044:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11044:43:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11100:44:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11133:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11139:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "11123:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11123:21:1"
															},
															"variables": [
																{
																	"name": "fromBalanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "11104:15:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11157:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "11182:15:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "11176:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11176:22:1"
															},
															"variables": [
																{
																	"name": "fromBalance",
																	"nodeType": "YulTypedName",
																	"src": "11161:11:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11285:119:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11310:4:1",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11316:10:1",
																					"type": "",
																					"value": "0xf4d678b8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11303:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11303:24:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11303:24:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11379:4:1",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11385:4:1",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11372:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11372:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11372:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "11264:6:1"
																	},
																	{
																		"name": "fromBalance",
																		"nodeType": "YulIdentifier",
																		"src": "11272:11:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11261:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11261:23:1"
															},
															"nodeType": "YulIf",
															"src": "11258:146:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "11479:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "fromBalance",
																				"nodeType": "YulIdentifier",
																				"src": "11500:11:1"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "11513:6:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11496:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11496:24:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "11472:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11472:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11472:49:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11590:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "11596:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11583:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11583:16:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11583:16:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11612:42:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11643:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11649:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "11633:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11633:21:1"
															},
															"variables": [
																{
																	"name": "toBalanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "11616:13:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "toBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "11858:13:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "toBalanceSlot",
																						"nodeType": "YulIdentifier",
																						"src": "11883:13:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "11877:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11877:20:1"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "11899:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11873:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11873:33:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "11851:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11851:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11851:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11969:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "11975:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11962:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11962:20:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11962:20:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12000:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12006:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "12012:25:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12043:2:1",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "from_",
																				"nodeType": "YulIdentifier",
																				"src": "12047:5:1"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "12039:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12039:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12059:2:1",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12069:4:1",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "12063:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12063:11:1"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "12055:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12055:20:1"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nodeType": "YulIdentifier",
																	"src": "11995:4:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11995:81:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11995:81:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 110,
														"isOffset": false,
														"isSlot": false,
														"src": "10346:20:1",
														"valueSize": 1
													},
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "11067:18:1",
														"valueSize": 1
													},
													{
														"declaration": 94,
														"isOffset": false,
														"isSlot": false,
														"src": "12012:25:1",
														"valueSize": 1
													},
													{
														"declaration": 230,
														"isOffset": false,
														"isSlot": false,
														"src": "10680:6:1",
														"valueSize": 1
													},
													{
														"declaration": 230,
														"isOffset": false,
														"isSlot": false,
														"src": "10949:6:1",
														"valueSize": 1
													},
													{
														"declaration": 230,
														"isOffset": false,
														"isSlot": false,
														"src": "11264:6:1",
														"valueSize": 1
													},
													{
														"declaration": 230,
														"isOffset": false,
														"isSlot": false,
														"src": "11513:6:1",
														"valueSize": 1
													},
													{
														"declaration": 230,
														"isOffset": false,
														"isSlot": false,
														"src": "11899:6:1",
														"valueSize": 1
													},
													{
														"declaration": 230,
														"isOffset": false,
														"isSlot": false,
														"src": "11975:6:1",
														"valueSize": 1
													},
													{
														"declaration": 226,
														"isOffset": false,
														"isSlot": false,
														"src": "10208:4:1",
														"valueSize": 1
													},
													{
														"declaration": 228,
														"isOffset": false,
														"isSlot": false,
														"src": "11596:2:1",
														"valueSize": 1
													}
												],
												"id": 241,
												"nodeType": "InlineAssembly",
												"src": "10164:1922:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 243,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "12115:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 244,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "12121:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 245,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "12125:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 242,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "12095:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12095:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "12095:37:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12149:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 234,
												"id": 249,
												"nodeType": "Return",
												"src": "12142:11:1"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "9607:357:1",
										"text": "@dev Transfers `amount` tokens from `from` to `to`.\n Note: Does not update the allowance if it is the maximum uint256 value.\n Requirements:\n - `from` must at least have `amount`.\n - The caller must have at least `amount` of allowance to transfer the tokens of `from`.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "9978:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9999:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "9991:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9991:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10013:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "10005:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10005:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10025:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "10017:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10017:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9990:42:1"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "10057:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 232,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10057:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10056:6:1"
									},
									"scope": 467,
									"src": "9969:2191:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "12667:2:1",
										"statements": []
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "12449:137:1",
										"text": "@dev For more performance, override to return the constant value\n of `keccak256(bytes(name()))` if `name()` will never change."
									},
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_constantNameHash",
									"nameLocation": "12600:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12617:2:1"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "12659:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "12651:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 254,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12651:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12650:16:1"
									},
									"scope": 467,
									"src": "12591:78:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "12876:264:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12938:196:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13017:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_NONCES_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "13023:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13010:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13010:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13010:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13061:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "13067:5:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13054:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13054:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13054:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13086:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13112:4:1",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13118:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "13102:9:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13102:21:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "13096:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13096:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13086:6:1"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "13023:17:1",
														"valueSize": 1
													},
													{
														"declaration": 261,
														"isOffset": false,
														"isSlot": false,
														"src": "13067:5:1",
														"valueSize": 1
													},
													{
														"declaration": 264,
														"isOffset": false,
														"isSlot": false,
														"src": "13086:6:1",
														"valueSize": 1
													}
												],
												"id": 266,
												"nodeType": "InlineAssembly",
												"src": "12929:205:1"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "12675:120:1",
										"text": "@dev Returns the current nonce for `owner`.\n This value is used to compute the signature for EIP-2612 permit."
									},
									"functionSelector": "7ecebe00",
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "12809:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12824:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "12816:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12816:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12815:15:1"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "12868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "12860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12860:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12859:16:1"
									},
									"scope": 467,
									"src": "12800:340:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "13513:3026:1",
										"statements": [
											{
												"assignments": [
													287
												],
												"declarations": [
													{
														"constant": false,
														"id": 287,
														"mutability": "mutable",
														"name": "nameHash",
														"nameLocation": "13531:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 309,
														"src": "13523:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 286,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "13523:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 290,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 288,
														"name": "_constantNameHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "13542:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13542:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13523:38:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 291,
														"name": "nameHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "13669:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13689:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13681:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 292,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "13681:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13681:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "13669:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 307,
												"nodeType": "IfStatement",
												"src": "13665:63:1",
												"trueBody": {
													"expression": {
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 297,
															"name": "nameHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "13693:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 301,
																				"name": "name",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 136,
																				"src": "13720:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																					"typeString": "function () view returns (string memory)"
																				}
																			},
																			"id": 302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13720:6:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13714:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 299,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "13714:5:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13714:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 298,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "13704:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13704:24:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "13693:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 306,
													"nodeType": "ExpressionStatement",
													"src": "13693:35:1"
												}
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "13790:2743:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13906:113:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13931:4:1",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13937:10:1",
																					"type": "",
																					"value": "0x1a15a3cc"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13924:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13924:24:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13924:24:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13994:4:1",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14000:4:1",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13987:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13987:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13987:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "timestamp",
																			"nodeType": "YulIdentifier",
																			"src": "13883:9:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13883:11:1"
																	},
																	{
																		"name": "deadline",
																		"nodeType": "YulIdentifier",
																		"src": "13896:8:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13880:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13880:25:1"
															},
															"nodeType": "YulIf",
															"src": "13877:142:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14032:20:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14047:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14041:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14041:11:1"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "14036:1:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14138:32:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14151:2:1",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14159:2:1",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "owner",
																				"nodeType": "YulIdentifier",
																				"src": "14163:5:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14155:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14155:14:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "14147:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14147:23:1"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "14138:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14183:36:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14198:2:1",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14206:2:1",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "spender",
																				"nodeType": "YulIdentifier",
																				"src": "14210:7:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14202:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14202:16:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "14194:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14194:25:1"
															},
															"variableNames": [
																{
																	"name": "spender",
																	"nodeType": "YulIdentifier",
																	"src": "14183:7:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14297:4:1",
																		"type": "",
																		"value": "0x0e"
																	},
																	{
																		"name": "_NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX",
																		"nodeType": "YulIdentifier",
																		"src": "14303:39:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14290:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14290:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14290:53:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14363:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "14369:5:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14356:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14356:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14356:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14388:38:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14415:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14421:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "14405:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14405:21:1"
															},
															"variables": [
																{
																	"name": "nonceSlot",
																	"nodeType": "YulTypedName",
																	"src": "14392:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14439:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "nonceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "14463:9:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "14457:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14457:16:1"
															},
															"variables": [
																{
																	"name": "nonceValue",
																	"nodeType": "YulTypedName",
																	"src": "14443:10:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "14538:1:1"
																	},
																	{
																		"name": "_DOMAIN_TYPEHASH",
																		"nodeType": "YulIdentifier",
																		"src": "14541:16:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14531:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14531:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14531:27:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "14582:1:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14585:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14578:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14578:12:1"
																	},
																	{
																		"name": "nameHash",
																		"nodeType": "YulIdentifier",
																		"src": "14592:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14571:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14571:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14571:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "14625:1:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14628:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14621:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14621:12:1"
																	},
																	{
																		"name": "_VERSION_HASH",
																		"nodeType": "YulIdentifier",
																		"src": "14635:13:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14614:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14614:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14614:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "14673:1:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14676:4:1",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14669:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14669:12:1"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "chainid",
																			"nodeType": "YulIdentifier",
																			"src": "14683:7:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14683:9:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14662:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14662:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14662:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "14717:1:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14720:4:1",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14713:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14713:12:1"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "address",
																			"nodeType": "YulIdentifier",
																			"src": "14727:7:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14727:9:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14706:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14706:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14706:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14757:4:1",
																		"type": "",
																		"value": "0x2e"
																	},
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "14773:1:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14776:4:1",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "14763:9:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14763:18:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14750:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14750:32:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "14842:1:1"
																	},
																	{
																		"name": "_PERMIT_TYPEHASH",
																		"nodeType": "YulIdentifier",
																		"src": "14845:16:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14835:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14835:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14835:27:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "14886:1:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14889:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14882:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14882:12:1"
																	},
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "14896:5:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14875:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14875:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14875:27:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "14926:1:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14929:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14922:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14922:12:1"
																	},
																	{
																		"name": "spender",
																		"nodeType": "YulIdentifier",
																		"src": "14936:7:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14915:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14915:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14915:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "14968:1:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14971:4:1",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14964:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14964:12:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14978:5:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14957:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14957:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14957:27:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "15008:1:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15011:4:1",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15004:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15004:12:1"
																	},
																	{
																		"name": "nonceValue",
																		"nodeType": "YulIdentifier",
																		"src": "15018:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14997:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14997:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14997:32:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "15053:1:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15056:4:1",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15049:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15049:12:1"
																	},
																	{
																		"name": "deadline",
																		"nodeType": "YulIdentifier",
																		"src": "15063:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15042:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15042:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15042:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15092:4:1",
																		"type": "",
																		"value": "0x4e"
																	},
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "15108:1:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15111:4:1",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "15098:9:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15098:18:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15085:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15085:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15085:32:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15184:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15200:4:1",
																				"type": "",
																				"value": "0x2c"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15206:4:1",
																				"type": "",
																				"value": "0x42"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "15190:9:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15190:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15177:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15177:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15177:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15232:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15242:4:1",
																				"type": "",
																				"value": "0xff"
																			},
																			{
																				"name": "v",
																				"nodeType": "YulIdentifier",
																				"src": "15248:1:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15238:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15238:12:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15225:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15225:26:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15225:26:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15271:4:1",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "15277:1:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15264:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15264:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15264:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15299:4:1",
																		"type": "",
																		"value": "0x60"
																	},
																	{
																		"name": "s",
																		"nodeType": "YulIdentifier",
																		"src": "15305:1:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15292:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15292:15:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15320:50:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "15340:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15340:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15347:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15350:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15353:4:1",
																		"type": "",
																		"value": "0x80"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15359:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15365:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nodeType": "YulIdentifier",
																	"src": "15329:10:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15329:41:1"
															},
															"variables": [
																{
																	"name": "t",
																	"nodeType": "YulTypedName",
																	"src": "15324:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15794:113:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15819:4:1",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15825:10:1",
																					"type": "",
																					"value": "0xddafbaef"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15812:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15812:24:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15812:24:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15882:4:1",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15888:4:1",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15875:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15875:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15875:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "15767:14:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15767:16:1"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "15761:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15761:23:1"
																			},
																			{
																				"name": "owner",
																				"nodeType": "YulIdentifier",
																				"src": "15786:5:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15758:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15758:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15751:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15751:42:1"
															},
															"nodeType": "YulIf",
															"src": "15748:159:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "nonceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "15981:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "nonceValue",
																				"nodeType": "YulIdentifier",
																				"src": "15996:10:1"
																			},
																			{
																				"name": "t",
																				"nodeType": "YulIdentifier",
																				"src": "16008:1:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15992:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15992:18:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "15974:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15974:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15974:37:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16181:4:1",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16194:3:1",
																						"type": "",
																						"value": "160"
																					},
																					{
																						"name": "_ALLOWANCE_SLOT_SEED",
																						"nodeType": "YulIdentifier",
																						"src": "16199:20:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "16190:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16190:30:1"
																			},
																			{
																				"name": "spender",
																				"nodeType": "YulIdentifier",
																				"src": "16222:7:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "16187:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16187:43:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16174:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16174:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16174:57:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16261:4:1",
																				"type": "",
																				"value": "0x2c"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16267:4:1",
																				"type": "",
																				"value": "0x34"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "16251:9:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16251:21:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16274:5:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "16244:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16244:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16244:36:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "16344:1:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16347:4:1",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16340:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16340:12:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16354:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_APPROVAL_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "16360:25:1"
																	},
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "16387:5:1"
																	},
																	{
																		"name": "spender",
																		"nodeType": "YulIdentifier",
																		"src": "16394:7:1"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nodeType": "YulIdentifier",
																	"src": "16335:4:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16335:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16335:67:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16422:4:1",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "16428:1:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16415:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16415:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16415:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16486:4:1",
																		"type": "",
																		"value": "0x60"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16492:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16479:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16479:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16479:15:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 110,
														"isOffset": false,
														"isSlot": false,
														"src": "16199:20:1",
														"valueSize": 1
													},
													{
														"declaration": 98,
														"isOffset": false,
														"isSlot": false,
														"src": "16360:25:1",
														"valueSize": 1
													},
													{
														"declaration": 122,
														"isOffset": false,
														"isSlot": false,
														"src": "14541:16:1",
														"valueSize": 1
													},
													{
														"declaration": 118,
														"isOffset": false,
														"isSlot": false,
														"src": "14303:39:1",
														"valueSize": 1
													},
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "14845:16:1",
														"valueSize": 1
													},
													{
														"declaration": 126,
														"isOffset": false,
														"isSlot": false,
														"src": "14635:13:1",
														"valueSize": 1
													},
													{
														"declaration": 277,
														"isOffset": false,
														"isSlot": false,
														"src": "13896:8:1",
														"valueSize": 1
													},
													{
														"declaration": 277,
														"isOffset": false,
														"isSlot": false,
														"src": "15063:8:1",
														"valueSize": 1
													},
													{
														"declaration": 287,
														"isOffset": false,
														"isSlot": false,
														"src": "14592:8:1",
														"valueSize": 1
													},
													{
														"declaration": 271,
														"isOffset": false,
														"isSlot": false,
														"src": "14138:5:1",
														"valueSize": 1
													},
													{
														"declaration": 271,
														"isOffset": false,
														"isSlot": false,
														"src": "14163:5:1",
														"valueSize": 1
													},
													{
														"declaration": 271,
														"isOffset": false,
														"isSlot": false,
														"src": "14369:5:1",
														"valueSize": 1
													},
													{
														"declaration": 271,
														"isOffset": false,
														"isSlot": false,
														"src": "14896:5:1",
														"valueSize": 1
													},
													{
														"declaration": 271,
														"isOffset": false,
														"isSlot": false,
														"src": "15786:5:1",
														"valueSize": 1
													},
													{
														"declaration": 271,
														"isOffset": false,
														"isSlot": false,
														"src": "16387:5:1",
														"valueSize": 1
													},
													{
														"declaration": 281,
														"isOffset": false,
														"isSlot": false,
														"src": "15277:1:1",
														"valueSize": 1
													},
													{
														"declaration": 283,
														"isOffset": false,
														"isSlot": false,
														"src": "15305:1:1",
														"valueSize": 1
													},
													{
														"declaration": 273,
														"isOffset": false,
														"isSlot": false,
														"src": "14183:7:1",
														"valueSize": 1
													},
													{
														"declaration": 273,
														"isOffset": false,
														"isSlot": false,
														"src": "14210:7:1",
														"valueSize": 1
													},
													{
														"declaration": 273,
														"isOffset": false,
														"isSlot": false,
														"src": "14936:7:1",
														"valueSize": 1
													},
													{
														"declaration": 273,
														"isOffset": false,
														"isSlot": false,
														"src": "16222:7:1",
														"valueSize": 1
													},
													{
														"declaration": 273,
														"isOffset": false,
														"isSlot": false,
														"src": "16394:7:1",
														"valueSize": 1
													},
													{
														"declaration": 279,
														"isOffset": false,
														"isSlot": false,
														"src": "15248:1:1",
														"valueSize": 1
													},
													{
														"declaration": 275,
														"isOffset": false,
														"isSlot": false,
														"src": "14978:5:1",
														"valueSize": 1
													},
													{
														"declaration": 275,
														"isOffset": false,
														"isSlot": false,
														"src": "16274:5:1",
														"valueSize": 1
													}
												],
												"id": 308,
												"nodeType": "InlineAssembly",
												"src": "13781:2752:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "13146:173:1",
										"text": "@dev Sets `value` as the allowance of `spender` over the tokens of `owner`,\n authorized by a signed approval by `owner`.\n Emits a {Approval} event."
									},
									"functionSelector": "d505accf",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "13333:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13357:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "13349:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13349:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13380:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "13372:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13372:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13405:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "13397:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "13428:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "13420:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13420:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "13452:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "13446:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 278,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13446:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "13471:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "13463:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 280,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13463:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "13490:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "13482:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 282,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13482:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13339:158:1"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13513:0:1"
									},
									"scope": 467,
									"src": "13324:3215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "16693:620:1",
										"statements": [
											{
												"assignments": [
													317
												],
												"declarations": [
													{
														"constant": false,
														"id": 317,
														"mutability": "mutable",
														"name": "nameHash",
														"nameLocation": "16711:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 339,
														"src": "16703:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 316,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "16703:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 320,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 318,
														"name": "_constantNameHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "16722:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16722:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16703:38:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 321,
														"name": "nameHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "16849:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16869:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16861:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 322,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "16861:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16861:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "16849:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 337,
												"nodeType": "IfStatement",
												"src": "16845:63:1",
												"trueBody": {
													"expression": {
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 327,
															"name": "nameHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "16873:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 331,
																				"name": "name",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 136,
																				"src": "16900:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																					"typeString": "function () view returns (string memory)"
																				}
																			},
																			"id": 332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16900:6:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16894:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 329,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "16894:5:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16894:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 328,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "16884:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16884:24:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "16873:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 336,
													"nodeType": "ExpressionStatement",
													"src": "16873:35:1"
												}
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "16970:337:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16984:20:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16999:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16993:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16993:11:1"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "16988:1:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "17057:1:1"
																	},
																	{
																		"name": "_DOMAIN_TYPEHASH",
																		"nodeType": "YulIdentifier",
																		"src": "17060:16:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17050:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17050:27:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "17101:1:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17104:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17097:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17097:12:1"
																	},
																	{
																		"name": "nameHash",
																		"nodeType": "YulIdentifier",
																		"src": "17111:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17090:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17090:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17090:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "17144:1:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17147:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17140:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17140:12:1"
																	},
																	{
																		"name": "_VERSION_HASH",
																		"nodeType": "YulIdentifier",
																		"src": "17154:13:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17133:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17133:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17133:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "17192:1:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17195:4:1",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17188:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17188:12:1"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "chainid",
																			"nodeType": "YulIdentifier",
																			"src": "17202:7:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17202:9:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17181:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17181:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17181:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nodeType": "YulIdentifier",
																				"src": "17236:1:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17239:4:1",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17232:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17232:12:1"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "address",
																			"nodeType": "YulIdentifier",
																			"src": "17246:7:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17246:9:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17225:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17225:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17225:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17269:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "17289:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17292:4:1",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "17279:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17279:18:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "17269:6:1"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 122,
														"isOffset": false,
														"isSlot": false,
														"src": "17060:16:1",
														"valueSize": 1
													},
													{
														"declaration": 126,
														"isOffset": false,
														"isSlot": false,
														"src": "17154:13:1",
														"valueSize": 1
													},
													{
														"declaration": 317,
														"isOffset": false,
														"isSlot": false,
														"src": "17111:8:1",
														"valueSize": 1
													},
													{
														"declaration": 314,
														"isOffset": false,
														"isSlot": false,
														"src": "17269:6:1",
														"valueSize": 1
													}
												],
												"id": 338,
												"nodeType": "InlineAssembly",
												"src": "16961:346:1"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "16545:70:1",
										"text": "@dev Returns the EIP-712 domain separator for the EIP-2612 permit."
									},
									"functionSelector": "3644e515",
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "16629:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16645:2:1"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "16685:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "16677:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16677:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16676:16:1"
									},
									"scope": 467,
									"src": "16620:693:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "17777:1112:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17816:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17808:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 349,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17808:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17808:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "17820:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 354,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "17824:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 348,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "17787:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17787:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "17787:44:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "17893:937:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17907:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "_TOTAL_SUPPLY_SLOT",
																		"nodeType": "YulIdentifier",
																		"src": "17938:18:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "17932:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17932:25:1"
															},
															"variables": [
																{
																	"name": "totalSupplyBefore",
																	"nodeType": "YulTypedName",
																	"src": "17911:17:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17970:54:1",
															"value": {
																"arguments": [
																	{
																		"name": "totalSupplyBefore",
																		"nodeType": "YulIdentifier",
																		"src": "17998:17:1"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "18017:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17994:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17994:30:1"
															},
															"variables": [
																{
																	"name": "totalSupplyAfter",
																	"nodeType": "YulTypedName",
																	"src": "17974:16:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18133:119:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18158:4:1",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18164:10:1",
																					"type": "",
																					"value": "0xe5cfe957"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "18151:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18151:24:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18151:24:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18227:4:1",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18233:4:1",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18220:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18220:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18220:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "totalSupplyAfter",
																		"nodeType": "YulIdentifier",
																		"src": "18096:16:1"
																	},
																	{
																		"name": "totalSupplyBefore",
																		"nodeType": "YulIdentifier",
																		"src": "18114:17:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "18093:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18093:39:1"
															},
															"nodeType": "YulIf",
															"src": "18090:162:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_TOTAL_SUPPLY_SLOT",
																		"nodeType": "YulIdentifier",
																		"src": "18319:18:1"
																	},
																	{
																		"name": "totalSupplyAfter",
																		"nodeType": "YulIdentifier",
																		"src": "18339:16:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "18312:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18312:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18312:44:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18436:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_BALANCE_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "18442:18:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18429:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18429:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18429:32:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18481:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "18487:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18474:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18474:16:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18474:16:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18503:42:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18534:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18540:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "18524:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18524:21:1"
															},
															"variables": [
																{
																	"name": "toBalanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "18507:13:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "toBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "18615:13:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "toBalanceSlot",
																						"nodeType": "YulIdentifier",
																						"src": "18640:13:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "18634:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18634:20:1"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "18656:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18630:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18630:33:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "18608:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18608:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18608:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18726:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "18732:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18719:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18719:20:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18719:20:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18757:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18763:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "18769:25:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18796:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18803:2:1",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18813:4:1",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "18807:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18807:11:1"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "18799:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18799:20:1"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nodeType": "YulIdentifier",
																	"src": "18752:4:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18752:68:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18752:68:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "18442:18:1",
														"valueSize": 1
													},
													{
														"declaration": 102,
														"isOffset": false,
														"isSlot": false,
														"src": "17938:18:1",
														"valueSize": 1
													},
													{
														"declaration": 102,
														"isOffset": false,
														"isSlot": false,
														"src": "18319:18:1",
														"valueSize": 1
													},
													{
														"declaration": 94,
														"isOffset": false,
														"isSlot": false,
														"src": "18769:25:1",
														"valueSize": 1
													},
													{
														"declaration": 345,
														"isOffset": false,
														"isSlot": false,
														"src": "18017:6:1",
														"valueSize": 1
													},
													{
														"declaration": 345,
														"isOffset": false,
														"isSlot": false,
														"src": "18656:6:1",
														"valueSize": 1
													},
													{
														"declaration": 345,
														"isOffset": false,
														"isSlot": false,
														"src": "18732:6:1",
														"valueSize": 1
													},
													{
														"declaration": 343,
														"isOffset": false,
														"isSlot": false,
														"src": "18487:2:1",
														"valueSize": 1
													}
												],
												"id": 357,
												"nodeType": "InlineAssembly",
												"src": "17884:946:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18867:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18859:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 359,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18859:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18859:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 363,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "18871:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 364,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "18875:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 358,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "18839:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18839:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "18839:43:1"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "17602:110:1",
										"text": "@dev Mints `amount` tokens to `to`, increasing the total supply.\n Emits a {Transfer} event."
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "17726:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17740:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "17732:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17732:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17752:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "17744:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17744:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17731:28:1"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17777:0:1"
									},
									"scope": 467,
									"src": "17717:1172:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "19357:1057:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 377,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "19388:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19402:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19394:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 378,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19394:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19394:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 382,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "19406:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 376,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "19367:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19367:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "19367:46:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "19475:878:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19556:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_BALANCE_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "19562:18:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19549:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19549:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19549:32:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19601:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "19607:4:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19594:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19594:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19594:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19625:44:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19658:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19664:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "19648:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19648:21:1"
															},
															"variables": [
																{
																	"name": "fromBalanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "19629:15:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19682:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "19707:15:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "19701:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19701:22:1"
															},
															"variables": [
																{
																	"name": "fromBalance",
																	"nodeType": "YulTypedName",
																	"src": "19686:11:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19810:119:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19835:4:1",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19841:10:1",
																					"type": "",
																					"value": "0xf4d678b8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19828:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19828:24:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19828:24:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19904:4:1",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19910:4:1",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19897:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19897:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19897:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "19789:6:1"
																	},
																	{
																		"name": "fromBalance",
																		"nodeType": "YulIdentifier",
																		"src": "19797:11:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19786:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19786:23:1"
															},
															"nodeType": "YulIf",
															"src": "19783:146:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "20004:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "fromBalance",
																				"nodeType": "YulIdentifier",
																				"src": "20025:11:1"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "20038:6:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20021:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20021:24:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "19997:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19997:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19997:49:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_TOTAL_SUPPLY_SLOT",
																		"nodeType": "YulIdentifier",
																		"src": "20126:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_TOTAL_SUPPLY_SLOT",
																						"nodeType": "YulIdentifier",
																						"src": "20156:18:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "20150:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20150:25:1"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "20177:6:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20146:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20146:38:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "20119:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20119:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20119:66:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20247:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "20253:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20240:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20240:20:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20240:20:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20278:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20284:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "20290:25:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20321:2:1",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20329:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "from",
																						"nodeType": "YulIdentifier",
																						"src": "20333:4:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "20325:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20325:13:1"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "20317:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20317:22:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20341:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nodeType": "YulIdentifier",
																	"src": "20273:4:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20273:70:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20273:70:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "19562:18:1",
														"valueSize": 1
													},
													{
														"declaration": 102,
														"isOffset": false,
														"isSlot": false,
														"src": "20126:18:1",
														"valueSize": 1
													},
													{
														"declaration": 102,
														"isOffset": false,
														"isSlot": false,
														"src": "20156:18:1",
														"valueSize": 1
													},
													{
														"declaration": 94,
														"isOffset": false,
														"isSlot": false,
														"src": "20290:25:1",
														"valueSize": 1
													},
													{
														"declaration": 373,
														"isOffset": false,
														"isSlot": false,
														"src": "19789:6:1",
														"valueSize": 1
													},
													{
														"declaration": 373,
														"isOffset": false,
														"isSlot": false,
														"src": "20038:6:1",
														"valueSize": 1
													},
													{
														"declaration": 373,
														"isOffset": false,
														"isSlot": false,
														"src": "20177:6:1",
														"valueSize": 1
													},
													{
														"declaration": 373,
														"isOffset": false,
														"isSlot": false,
														"src": "20253:6:1",
														"valueSize": 1
													},
													{
														"declaration": 371,
														"isOffset": false,
														"isSlot": false,
														"src": "19607:4:1",
														"valueSize": 1
													},
													{
														"declaration": 371,
														"isOffset": false,
														"isSlot": false,
														"src": "20333:4:1",
														"valueSize": 1
													}
												],
												"id": 385,
												"nodeType": "InlineAssembly",
												"src": "19466:887:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 387,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "20382:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20396:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20388:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 388,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20388:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20388:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 392,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "20400:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 386,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "20362:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20362:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "20362:45:1"
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "19178:112:1",
										"text": "@dev Burns `amount` tokens from `from`, reducing the total supply.\n Emits a {Transfer} event."
									},
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "19304:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19318:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "19310:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19332:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "19324:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19309:30:1"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19357:0:1"
									},
									"scope": 467,
									"src": "19295:1119:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "20840:1318:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 407,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "20871:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 408,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "20877:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 409,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "20881:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 406,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "20850:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20850:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "20850:38:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "20950:1155:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20964:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20981:2:1",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "20985:4:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "20977:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20977:13:1"
															},
															"variables": [
																{
																	"name": "from_",
																	"nodeType": "YulTypedName",
																	"src": "20968:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21070:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"arguments": [
																			{
																				"name": "from_",
																				"nodeType": "YulIdentifier",
																				"src": "21079:5:1"
																			},
																			{
																				"name": "_BALANCE_SLOT_SEED",
																				"nodeType": "YulIdentifier",
																				"src": "21086:18:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "21076:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21076:29:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21063:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21063:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21063:43:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21119:44:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21152:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21158:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "21142:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21142:21:1"
															},
															"variables": [
																{
																	"name": "fromBalanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "21123:15:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21176:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "21201:15:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "21195:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21195:22:1"
															},
															"variables": [
																{
																	"name": "fromBalance",
																	"nodeType": "YulTypedName",
																	"src": "21180:11:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21304:119:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21329:4:1",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21335:10:1",
																					"type": "",
																					"value": "0xf4d678b8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "21322:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21322:24:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21322:24:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21398:4:1",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21404:4:1",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21391:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21391:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21391:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "21283:6:1"
																	},
																	{
																		"name": "fromBalance",
																		"nodeType": "YulIdentifier",
																		"src": "21291:11:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21280:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21280:23:1"
															},
															"nodeType": "YulIf",
															"src": "21277:146:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "21498:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "fromBalance",
																				"nodeType": "YulIdentifier",
																				"src": "21519:11:1"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "21532:6:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21515:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21515:24:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "21491:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21491:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21491:49:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21609:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "21615:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21602:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21602:16:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21602:16:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21631:42:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21662:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21668:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "21652:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21652:21:1"
															},
															"variables": [
																{
																	"name": "toBalanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "21635:13:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "toBalanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "21877:13:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "toBalanceSlot",
																						"nodeType": "YulIdentifier",
																						"src": "21902:13:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "21896:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21896:20:1"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "21918:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21892:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21892:33:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "21870:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21870:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21870:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21988:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "21994:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21981:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21981:20:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21981:20:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22019:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22025:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "22031:25:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22062:2:1",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "from_",
																				"nodeType": "YulIdentifier",
																				"src": "22066:5:1"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "22058:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22058:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22078:2:1",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "22088:4:1",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "22082:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22082:11:1"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "22074:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22074:20:1"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nodeType": "YulIdentifier",
																	"src": "22014:4:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22014:81:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22014:81:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "21086:18:1",
														"valueSize": 1
													},
													{
														"declaration": 94,
														"isOffset": false,
														"isSlot": false,
														"src": "22031:25:1",
														"valueSize": 1
													},
													{
														"declaration": 403,
														"isOffset": false,
														"isSlot": false,
														"src": "21283:6:1",
														"valueSize": 1
													},
													{
														"declaration": 403,
														"isOffset": false,
														"isSlot": false,
														"src": "21532:6:1",
														"valueSize": 1
													},
													{
														"declaration": 403,
														"isOffset": false,
														"isSlot": false,
														"src": "21918:6:1",
														"valueSize": 1
													},
													{
														"declaration": 403,
														"isOffset": false,
														"isSlot": false,
														"src": "21994:6:1",
														"valueSize": 1
													},
													{
														"declaration": 399,
														"isOffset": false,
														"isSlot": false,
														"src": "20985:4:1",
														"valueSize": 1
													},
													{
														"declaration": 401,
														"isOffset": false,
														"isSlot": false,
														"src": "21615:2:1",
														"valueSize": 1
													}
												],
												"id": 412,
												"nodeType": "InlineAssembly",
												"src": "20941:1164:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "22134:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "22140:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "22144:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "22114:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22114:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "22114:37:1"
											}
										]
									},
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "20703:54:1",
										"text": "@dev Moves `amount` of tokens from `from` to `to`."
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "20771:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20789:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "20781:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20803:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "20795:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20795:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "20815:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "20807:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20807:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20780:42:1"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20840:0:1"
									},
									"scope": 467,
									"src": "20762:1396:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "22622:857:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "22684:789:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22767:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "spender",
																		"nodeType": "YulIdentifier",
																		"src": "22773:7:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22760:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22760:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22760:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22801:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_ALLOWANCE_SLOT_SEED",
																		"nodeType": "YulIdentifier",
																		"src": "22807:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22794:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22794:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22794:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22848:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "22854:5:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22841:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22841:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22841:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22873:42:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22904:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22910:4:1",
																		"type": "",
																		"value": "0x34"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "22894:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22894:21:1"
															},
															"variables": [
																{
																	"name": "allowanceSlot",
																	"nodeType": "YulTypedName",
																	"src": "22877:13:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22928:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "allowanceSlot",
																		"nodeType": "YulIdentifier",
																		"src": "22952:13:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "22946:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22946:20:1"
															},
															"variables": [
																{
																	"name": "allowance_",
																	"nodeType": "YulTypedName",
																	"src": "22932:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23067:396:1",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "23192:133:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "23221:4:1",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "23227:10:1",
																								"type": "",
																								"value": "0x13be252b"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "23214:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "23214:24:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "23214:24:1"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "23296:4:1",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "23302:4:1",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "23289:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "23289:18:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "23289:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "amount",
																					"nodeType": "YulIdentifier",
																					"src": "23172:6:1"
																				},
																				{
																					"name": "allowance_",
																					"nodeType": "YulIdentifier",
																					"src": "23180:10:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "23169:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23169:22:1"
																		},
																		"nodeType": "YulIf",
																		"src": "23166:159:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "allowanceSlot",
																					"nodeType": "YulIdentifier",
																					"src": "23410:13:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "allowance_",
																							"nodeType": "YulIdentifier",
																							"src": "23429:10:1"
																						},
																						{
																							"name": "amount",
																							"nodeType": "YulIdentifier",
																							"src": "23441:6:1"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "23425:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "23425:23:1"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "23403:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23403:46:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23403:46:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "allowance_",
																		"nodeType": "YulIdentifier",
																		"src": "23052:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23064:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23048:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23048:18:1"
															},
															"nodeType": "YulIf",
															"src": "23045:418:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 110,
														"isOffset": false,
														"isSlot": false,
														"src": "22807:20:1",
														"valueSize": 1
													},
													{
														"declaration": 427,
														"isOffset": false,
														"isSlot": false,
														"src": "23172:6:1",
														"valueSize": 1
													},
													{
														"declaration": 427,
														"isOffset": false,
														"isSlot": false,
														"src": "23441:6:1",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "22854:5:1",
														"valueSize": 1
													},
													{
														"declaration": 425,
														"isOffset": false,
														"isSlot": false,
														"src": "22773:7:1",
														"valueSize": 1
													}
												],
												"id": 430,
												"nodeType": "InlineAssembly",
												"src": "22675:798:1"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "22447:80:1",
										"text": "@dev Updates the allowance of `owner` for `spender` based on spent `amount`."
									},
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "22541:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "22557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "22580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "22572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "22597:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "22589:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22589:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22556:48:1"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22622:0:1"
									},
									"scope": 467,
									"src": "22532:947:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "23695:497:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "23757:429:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23771:28:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23789:2:1",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "23793:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "23785:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23785:14:1"
															},
															"variables": [
																{
																	"name": "owner_",
																	"nodeType": "YulTypedName",
																	"src": "23775:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23883:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "spender",
																		"nodeType": "YulIdentifier",
																		"src": "23889:7:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23876:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23876:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23876:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23917:4:1",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"arguments": [
																			{
																				"name": "owner_",
																				"nodeType": "YulIdentifier",
																				"src": "23926:6:1"
																			},
																			{
																				"name": "_ALLOWANCE_SLOT_SEED",
																				"nodeType": "YulIdentifier",
																				"src": "23934:20:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "23923:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23923:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23910:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23910:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23910:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23986:4:1",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23992:4:1",
																				"type": "",
																				"value": "0x34"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "23976:9:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23976:21:1"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "23999:6:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "23969:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23969:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23969:37:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24068:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "24074:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24061:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24061:20:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24061:20:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24099:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24105:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_APPROVAL_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "24111:25:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24142:2:1",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "owner_",
																				"nodeType": "YulIdentifier",
																				"src": "24146:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "24138:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24138:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24159:2:1",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24169:4:1",
																						"type": "",
																						"value": "0x2c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "24163:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24163:11:1"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "24155:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24155:20:1"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nodeType": "YulIdentifier",
																	"src": "24094:4:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24094:82:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24094:82:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 110,
														"isOffset": false,
														"isSlot": false,
														"src": "23934:20:1",
														"valueSize": 1
													},
													{
														"declaration": 98,
														"isOffset": false,
														"isSlot": false,
														"src": "24111:25:1",
														"valueSize": 1
													},
													{
														"declaration": 439,
														"isOffset": false,
														"isSlot": false,
														"src": "23999:6:1",
														"valueSize": 1
													},
													{
														"declaration": 439,
														"isOffset": false,
														"isSlot": false,
														"src": "24074:6:1",
														"valueSize": 1
													},
													{
														"declaration": 435,
														"isOffset": false,
														"isSlot": false,
														"src": "23793:5:1",
														"valueSize": 1
													},
													{
														"declaration": 437,
														"isOffset": false,
														"isSlot": false,
														"src": "23889:7:1",
														"valueSize": 1
													}
												],
												"id": 442,
												"nodeType": "InlineAssembly",
												"src": "23748:438:1"
											}
										]
									},
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "23485:122:1",
										"text": "@dev Sets `amount` as the allowance of `spender` over the tokens of `owner`.\n Emits a {Approval} event."
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "23621:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23638:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "23630:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23630:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "23653:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "23645:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23670:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "23662:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23662:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23629:48:1"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23695:0:1"
									},
									"scope": 467,
									"src": "23612:580:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "24677:2:1",
										"statements": []
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "24481:102:1",
										"text": "@dev Hook that is called before any transfer of tokens.\n This includes minting and burning."
									},
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "24597:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24626:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "24618:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24618:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24640:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "24632:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24632:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24652:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "24644:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24644:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24617:42:1"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24677:0:1"
									},
									"scope": 467,
									"src": "24588:91:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "24879:2:1",
										"statements": []
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "24685:101:1",
										"text": "@dev Hook that is called after any transfer of tokens.\n This includes minting and burning."
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "24800:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24828:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "24820:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24820:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24842:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "24834:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24834:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24854:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "24846:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24846:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24819:42:1"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24879:0:1"
									},
									"scope": 467,
									"src": "24791:90:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 468,
							"src": "1140:23743:1",
							"usedErrors": [
								54,
								57,
								60,
								63,
								66,
								69,
								72
							],
							"usedEvents": [
								81,
								90
							]
						}
					],
					"src": "32:24852:1"
				},
				"id": 1
			}
		}
	}
}